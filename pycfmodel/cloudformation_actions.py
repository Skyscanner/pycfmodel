CLOUDFORMATION_ACTIONS = [
    "a4b:ApproveSkill",
    "a4b:AssociateContactWithAddressBook",
    "a4b:AssociateDeviceWithRoom",
    "a4b:AssociateSkillGroupWithRoom",
    "a4b:AssociateSkillWithSkillGroup",
    "a4b:AssociateSkillWithUsers",
    "a4b:CompleteRegistration",
    "a4b:CreateAddressBook",
    "a4b:CreateBusinessReportSchedule",
    "a4b:CreateConferenceProvider",
    "a4b:CreateContact",
    "a4b:CreateProfile",
    "a4b:CreateRoom",
    "a4b:CreateSkillGroup",
    "a4b:CreateUser",
    "a4b:DeleteAddressBook",
    "a4b:DeleteBusinessReportSchedule",
    "a4b:DeleteConferenceProvider",
    "a4b:DeleteContact",
    "a4b:DeleteDevice",
    "a4b:DeleteProfile",
    "a4b:DeleteRoom",
    "a4b:DeleteRoomSkillParameter",
    "a4b:DeleteSkillAuthorization",
    "a4b:DeleteSkillGroup",
    "a4b:DeleteUser",
    "a4b:DisassociateContactFromAddressBook",
    "a4b:DisassociateDeviceFromRoom",
    "a4b:DisassociateSkillFromSkillGroup",
    "a4b:DisassociateSkillFromUsers",
    "a4b:DisassociateSkillGroupFromRoom",
    "a4b:ForgetSmartHomeAppliances",
    "a4b:GetAddressBook",
    "a4b:GetConferencePreference",
    "a4b:GetConferenceProvider",
    "a4b:GetContact",
    "a4b:GetDevice",
    "a4b:GetNetworkProfile",
    "a4b:GetProfile",
    "a4b:GetRoom",
    "a4b:GetRoomSkillParameter",
    "a4b:GetSkillGroup",
    "a4b:ListBusinessReportSchedules",
    "a4b:ListConferenceProviders",
    "a4b:ListDeviceEvents",
    "a4b:ListSkills",
    "a4b:ListSkillsStoreCategories",
    "a4b:ListSkillsStoreSkillsByCategory",
    "a4b:ListSmartHomeAppliances",
    "a4b:ListTags",
    "a4b:PutConferencePreference",
    "a4b:PutDeviceSetupEvents",
    "a4b:PutRoomSkillParameter",
    "a4b:PutSkillAuthorization",
    "a4b:RegisterAVSDevice",
    "a4b:RegisterDevice",
    "a4b:RejectSkill",
    "a4b:ResolveRoom",
    "a4b:RevokeInvitation",
    "a4b:SearchAddressBooks",
    "a4b:SearchContacts",
    "a4b:SearchDevices",
    "a4b:SearchNetworkProfiles",
    "a4b:SearchProfiles",
    "a4b:SearchRooms",
    "a4b:SearchSkillGroups",
    "a4b:SearchUsers",
    "a4b:SendInvitation",
    "a4b:StartDeviceSync",
    "a4b:StartSmartHomeApplianceDiscovery",
    "a4b:TagResource",
    "a4b:UntagResource",
    "a4b:UpdateAddressBook",
    "a4b:UpdateBusinessReportSchedule",
    "a4b:UpdateConferenceProvider",
    "a4b:UpdateContact",
    "a4b:UpdateDevice",
    "a4b:UpdateProfile",
    "a4b:UpdateRoom",
    "a4b:UpdateSkillGroup",
    "access-analyzer:ApplyArchiveRule",
    "access-analyzer:CreateAnalyzer",
    "access-analyzer:CreateArchiveRule",
    "access-analyzer:DeleteAnalyzer",
    "access-analyzer:DeleteArchiveRule",
    "access-analyzer:GetAnalyzedResource",
    "access-analyzer:GetAnalyzer",
    "access-analyzer:GetArchiveRule",
    "access-analyzer:GetFinding",
    "access-analyzer:ListAnalyzedResources",
    "access-analyzer:ListAnalyzers",
    "access-analyzer:ListArchiveRules",
    "access-analyzer:ListFindings",
    "access-analyzer:ListTagsForResource",
    "access-analyzer:StartResourceScan",
    "access-analyzer:TagResource",
    "access-analyzer:UntagResource",
    "access-analyzer:UpdateArchiveRule",
    "access-analyzer:UpdateFindings",
    "account:DisableRegion",
    "account:EnableRegion",
    "account:ListRegions",
    "acm-pca:CreateCertificateAuthority",
    "acm-pca:CreateCertificateAuthorityAuditReport",
    "acm-pca:CreatePermission",
    "acm-pca:DeleteCertificateAuthority",
    "acm-pca:DeletePermission",
    "acm-pca:DeletePolicy",
    "acm-pca:DescribeCertificateAuthority",
    "acm-pca:DescribeCertificateAuthorityAuditReport",
    "acm-pca:GetCertificate",
    "acm-pca:GetCertificateAuthorityCertificate",
    "acm-pca:GetCertificateAuthorityCsr",
    "acm-pca:GetPolicy",
    "acm-pca:ImportCertificateAuthorityCertificate",
    "acm-pca:IssueCertificate",
    "acm-pca:ListCertificateAuthorities",
    "acm-pca:ListPermissions",
    "acm-pca:ListTags",
    "acm-pca:PutPolicy",
    "acm-pca:RestoreCertificateAuthority",
    "acm-pca:RevokeCertificate",
    "acm-pca:TagCertificateAuthority",
    "acm-pca:UntagCertificateAuthority",
    "acm-pca:UpdateCertificateAuthority",
    "acm:AddTagsToCertificate",
    "acm:DeleteCertificate",
    "acm:DescribeCertificate",
    "acm:ExportCertificate",
    "acm:GetCertificate",
    "acm:ImportCertificate",
    "acm:ListCertificates",
    "acm:ListTagsForCertificate",
    "acm:RemoveTagsFromCertificate",
    "acm:RenewCertificate",
    "acm:RequestCertificate",
    "acm:ResendValidationEmail",
    "acm:UpdateCertificateOptions",
    "activate:CreateForm",
    "activate:GetAccountContact",
    "activate:GetContentInfo",
    "activate:GetCosts",
    "activate:GetCredits",
    "activate:GetMemberInfo",
    "activate:GetProgram",
    "activate:PutMemberInfo",
    "airflow:CreateCliToken",
    "airflow:CreateEnvironment",
    "airflow:CreateWebLoginToken",
    "airflow:DeleteEnvironment",
    "airflow:GetEnvironment",
    "airflow:ListEnvironments",
    "airflow:ListTagsForResource",
    "airflow:PublishMetrics",
    "airflow:TagResource",
    "airflow:UntagResource",
    "airflow:UpdateEnvironment",
    "amplify:CreateApp",
    "amplify:CreateBackendEnvironment",
    "amplify:CreateBranch",
    "amplify:CreateDeployment",
    "amplify:CreateDomainAssociation",
    "amplify:CreateWebHook",
    "amplify:DeleteApp",
    "amplify:DeleteBackendEnvironment",
    "amplify:DeleteBranch",
    "amplify:DeleteDomainAssociation",
    "amplify:DeleteJob",
    "amplify:DeleteWebHook",
    "amplify:GenerateAccessLogs",
    "amplify:GetApp",
    "amplify:GetArtifactUrl",
    "amplify:GetBackendEnvironment",
    "amplify:GetBranch",
    "amplify:GetDomainAssociation",
    "amplify:GetJob",
    "amplify:GetWebHook",
    "amplify:ListApps",
    "amplify:ListArtifacts",
    "amplify:ListBackendEnvironments",
    "amplify:ListBranches",
    "amplify:ListDomainAssociations",
    "amplify:ListJobs",
    "amplify:ListWebHooks",
    "amplify:StartDeployment",
    "amplify:StartJob",
    "amplify:StopJob",
    "amplify:TagResource",
    "amplify:UntagResource",
    "amplify:UpdateApp",
    "amplify:UpdateBranch",
    "amplify:UpdateDomainAssociation",
    "amplify:UpdateWebHook",
    "apigateway:DELETE",
    "apigateway:GET",
    "apigateway:PATCH",
    "apigateway:POST",
    "apigateway:PUT",
    "apigateway:SetWebACL",
    "apigateway:UpdateRestApiPolicy",
    "appconfig:CreateApplication",
    "appconfig:CreateConfigurationProfile",
    "appconfig:CreateDeploymentStrategy",
    "appconfig:CreateEnvironment",
    "appconfig:CreateHostedConfigurationVersion",
    "appconfig:DeleteApplication",
    "appconfig:DeleteConfigurationProfile",
    "appconfig:DeleteDeploymentStrategy",
    "appconfig:DeleteEnvironment",
    "appconfig:DeleteHostedConfigurationVersion",
    "appconfig:GetApplication",
    "appconfig:GetConfiguration",
    "appconfig:GetConfigurationProfile",
    "appconfig:GetDeployment",
    "appconfig:GetDeploymentStrategy",
    "appconfig:GetEnvironment",
    "appconfig:GetHostedConfigurationVersion",
    "appconfig:ListApplications",
    "appconfig:ListConfigurationProfiles",
    "appconfig:ListDeploymentStrategies",
    "appconfig:ListDeployments",
    "appconfig:ListEnvironments",
    "appconfig:ListHostedConfigurationVersions",
    "appconfig:ListTagsForResource",
    "appconfig:StartDeployment",
    "appconfig:StopDeployment",
    "appconfig:TagResource",
    "appconfig:UntagResource",
    "appconfig:UpdateApplication",
    "appconfig:UpdateConfigurationProfile",
    "appconfig:UpdateDeploymentStrategy",
    "appconfig:UpdateEnvironment",
    "appconfig:ValidateConfiguration",
    "appflow:CreateConnectorProfile",
    "appflow:CreateFlow",
    "appflow:DeleteConnectorProfile",
    "appflow:DeleteFlow",
    "appflow:DescribeConnectorEntity",
    "appflow:DescribeConnectorFields",
    "appflow:DescribeConnectorProfiles",
    "appflow:DescribeConnectors",
    "appflow:DescribeFlow",
    "appflow:DescribeFlowExecution",
    "appflow:DescribeFlowExecutionRecords",
    "appflow:DescribeFlows",
    "appflow:ListConnectorEntities",
    "appflow:ListConnectorFields",
    "appflow:ListFlows",
    "appflow:ListTagsForResource",
    "appflow:RunFlow",
    "appflow:StartFlow",
    "appflow:StopFlow",
    "appflow:TagResource",
    "appflow:UntagResource",
    "appflow:UpdateConnectorProfile",
    "appflow:UpdateFlow",
    "application-autoscaling:DeleteScalingPolicy",
    "application-autoscaling:DeleteScheduledAction",
    "application-autoscaling:DeregisterScalableTarget",
    "application-autoscaling:DescribeScalableTargets",
    "application-autoscaling:DescribeScalingActivities",
    "application-autoscaling:DescribeScalingPolicies",
    "application-autoscaling:DescribeScheduledActions",
    "application-autoscaling:PutScalingPolicy",
    "application-autoscaling:PutScheduledAction",
    "application-autoscaling:RegisterScalableTarget",
    "applicationinsights:CreateApplication",
    "applicationinsights:CreateComponent",
    "applicationinsights:DeleteApplication",
    "applicationinsights:DeleteComponent",
    "applicationinsights:DescribeApplication",
    "applicationinsights:DescribeComponent",
    "applicationinsights:DescribeComponentConfiguration",
    "applicationinsights:DescribeComponentConfigurationRecommendation",
    "applicationinsights:DescribeObservation",
    "applicationinsights:DescribeProblem",
    "applicationinsights:DescribeProblemObservations",
    "applicationinsights:ListApplications",
    "applicationinsights:ListComponents",
    "applicationinsights:ListProblems",
    "applicationinsights:UpdateApplication",
    "applicationinsights:UpdateComponent",
    "applicationinsights:UpdateComponentConfiguration",
    "appmesh-preview:CreateGatewayRoute",
    "appmesh-preview:CreateMesh",
    "appmesh-preview:CreateRoute",
    "appmesh-preview:CreateVirtualGateway",
    "appmesh-preview:CreateVirtualNode",
    "appmesh-preview:CreateVirtualRouter",
    "appmesh-preview:CreateVirtualService",
    "appmesh-preview:DeleteGatewayRoute",
    "appmesh-preview:DeleteMesh",
    "appmesh-preview:DeleteRoute",
    "appmesh-preview:DeleteVirtualGateway",
    "appmesh-preview:DeleteVirtualNode",
    "appmesh-preview:DeleteVirtualRouter",
    "appmesh-preview:DeleteVirtualService",
    "appmesh-preview:DescribeGatewayRoute",
    "appmesh-preview:DescribeMesh",
    "appmesh-preview:DescribeRoute",
    "appmesh-preview:DescribeVirtualGateway",
    "appmesh-preview:DescribeVirtualNode",
    "appmesh-preview:DescribeVirtualRouter",
    "appmesh-preview:DescribeVirtualService",
    "appmesh-preview:ListGatewayRoutes",
    "appmesh-preview:ListMeshes",
    "appmesh-preview:ListRoutes",
    "appmesh-preview:ListVirtualGateways",
    "appmesh-preview:ListVirtualNodes",
    "appmesh-preview:ListVirtualRouters",
    "appmesh-preview:ListVirtualServices",
    "appmesh-preview:StreamAggregatedResources",
    "appmesh-preview:UpdateGatewayRoute",
    "appmesh-preview:UpdateMesh",
    "appmesh-preview:UpdateRoute",
    "appmesh-preview:UpdateVirtualGateway",
    "appmesh-preview:UpdateVirtualNode",
    "appmesh-preview:UpdateVirtualRouter",
    "appmesh-preview:UpdateVirtualService",
    "appmesh:CreateGatewayRoute",
    "appmesh:CreateMesh",
    "appmesh:CreateRoute",
    "appmesh:CreateVirtualGateway",
    "appmesh:CreateVirtualNode",
    "appmesh:CreateVirtualRouter",
    "appmesh:CreateVirtualService",
    "appmesh:DeleteGatewayRoute",
    "appmesh:DeleteMesh",
    "appmesh:DeleteRoute",
    "appmesh:DeleteVirtualGateway",
    "appmesh:DeleteVirtualNode",
    "appmesh:DeleteVirtualRouter",
    "appmesh:DeleteVirtualService",
    "appmesh:DescribeGatewayRoute",
    "appmesh:DescribeMesh",
    "appmesh:DescribeRoute",
    "appmesh:DescribeVirtualGateway",
    "appmesh:DescribeVirtualNode",
    "appmesh:DescribeVirtualRouter",
    "appmesh:DescribeVirtualService",
    "appmesh:ListGatewayRoutes",
    "appmesh:ListMeshes",
    "appmesh:ListRoutes",
    "appmesh:ListTagsForResource",
    "appmesh:ListVirtualGateways",
    "appmesh:ListVirtualNodes",
    "appmesh:ListVirtualRouters",
    "appmesh:ListVirtualServices",
    "appmesh:StreamAggregatedResources",
    "appmesh:TagResource",
    "appmesh:UntagResource",
    "appmesh:UpdateGatewayRoute",
    "appmesh:UpdateMesh",
    "appmesh:UpdateRoute",
    "appmesh:UpdateVirtualGateway",
    "appmesh:UpdateVirtualNode",
    "appmesh:UpdateVirtualRouter",
    "appmesh:UpdateVirtualService",
    "appstream:AssociateFleet",
    "appstream:BatchAssociateUserStack",
    "appstream:BatchDisassociateUserStack",
    "appstream:CopyImage",
    "appstream:CreateDirectoryConfig",
    "appstream:CreateFleet",
    "appstream:CreateImageBuilder",
    "appstream:CreateImageBuilderStreamingURL",
    "appstream:CreateStack",
    "appstream:CreateStreamingURL",
    "appstream:CreateUsageReportSubscription",
    "appstream:CreateUser",
    "appstream:DeleteDirectoryConfig",
    "appstream:DeleteFleet",
    "appstream:DeleteImage",
    "appstream:DeleteImageBuilder",
    "appstream:DeleteImagePermissions",
    "appstream:DeleteStack",
    "appstream:DeleteUsageReportSubscription",
    "appstream:DeleteUser",
    "appstream:DescribeDirectoryConfigs",
    "appstream:DescribeFleets",
    "appstream:DescribeImageBuilders",
    "appstream:DescribeImagePermissions",
    "appstream:DescribeImages",
    "appstream:DescribeSessions",
    "appstream:DescribeStacks",
    "appstream:DescribeUsageReportSubscriptions",
    "appstream:DescribeUserStackAssociations",
    "appstream:DescribeUsers",
    "appstream:DisableUser",
    "appstream:DisassociateFleet",
    "appstream:EnableUser",
    "appstream:ExpireSession",
    "appstream:GetImageBuilders",
    "appstream:GetParametersForThemeAssetUpload",
    "appstream:ListAssociatedFleets",
    "appstream:ListAssociatedStacks",
    "appstream:ListTagsForResource",
    "appstream:StartFleet",
    "appstream:StartImageBuilder",
    "appstream:StopFleet",
    "appstream:StopImageBuilder",
    "appstream:Stream",
    "appstream:TagResource",
    "appstream:UntagResource",
    "appstream:UpdateDirectoryConfig",
    "appstream:UpdateFleet",
    "appstream:UpdateImagePermissions",
    "appstream:UpdateStack",
    "appsync:CreateApiKey",
    "appsync:CreateDataSource",
    "appsync:CreateFunction",
    "appsync:CreateGraphqlApi",
    "appsync:CreateResolver",
    "appsync:CreateType",
    "appsync:DeleteApiKey",
    "appsync:DeleteDataSource",
    "appsync:DeleteFunction",
    "appsync:DeleteGraphqlApi",
    "appsync:DeleteResolver",
    "appsync:DeleteType",
    "appsync:GetDataSource",
    "appsync:GetFunction",
    "appsync:GetGraphqlApi",
    "appsync:GetIntrospectionSchema",
    "appsync:GetResolver",
    "appsync:GetSchemaCreationStatus",
    "appsync:GetType",
    "appsync:GraphQL",
    "appsync:ListApiKeys",
    "appsync:ListDataSources",
    "appsync:ListFunctions",
    "appsync:ListGraphqlApis",
    "appsync:ListResolvers",
    "appsync:ListResolversByFunction",
    "appsync:ListTagsForResource",
    "appsync:ListTypes",
    "appsync:SetWebACL",
    "appsync:StartSchemaCreation",
    "appsync:TagResource",
    "appsync:UntagResource",
    "appsync:UpdateApiKey",
    "appsync:UpdateDataSource",
    "appsync:UpdateFunction",
    "appsync:UpdateGraphqlApi",
    "appsync:UpdateResolver",
    "appsync:UpdateType",
    "arsenal:RegisterOnPremisesAgent",
    "artifact:AcceptAgreement",
    "artifact:DownloadAgreement",
    "artifact:Get",
    "artifact:TerminateAgreement",
    "athena:BatchGetNamedQuery",
    "athena:BatchGetQueryExecution",
    "athena:CreateDataCatalog",
    "athena:CreateNamedQuery",
    "athena:CreateWorkGroup",
    "athena:DeleteDataCatalog",
    "athena:DeleteNamedQuery",
    "athena:DeleteWorkGroup",
    "athena:GetDataCatalog",
    "athena:GetDatabase",
    "athena:GetNamedQuery",
    "athena:GetQueryExecution",
    "athena:GetQueryResults",
    "athena:GetQueryResultsStream",
    "athena:GetTableMetadata",
    "athena:GetWorkGroup",
    "athena:ListDataCatalogs",
    "athena:ListDatabases",
    "athena:ListNamedQueries",
    "athena:ListQueryExecutions",
    "athena:ListTableMetadata",
    "athena:ListTagsForResource",
    "athena:ListWorkGroups",
    "athena:StartQueryExecution",
    "athena:StopQueryExecution",
    "athena:TagResource",
    "athena:UntagResource",
    "athena:UpdateDataCatalog",
    "athena:UpdateWorkGroup",
    "autoscaling-plans:CreateScalingPlan",
    "autoscaling-plans:DeleteScalingPlan",
    "autoscaling-plans:DescribeScalingPlanResources",
    "autoscaling-plans:DescribeScalingPlans",
    "autoscaling-plans:GetScalingPlanResourceForecastData",
    "autoscaling-plans:UpdateScalingPlan",
    "autoscaling:AttachInstances",
    "autoscaling:AttachLoadBalancerTargetGroups",
    "autoscaling:AttachLoadBalancers",
    "autoscaling:BatchDeleteScheduledAction",
    "autoscaling:BatchPutScheduledUpdateGroupAction",
    "autoscaling:CancelInstanceRefresh",
    "autoscaling:CompleteLifecycleAction",
    "autoscaling:CreateAutoScalingGroup",
    "autoscaling:CreateLaunchConfiguration",
    "autoscaling:CreateOrUpdateTags",
    "autoscaling:DeleteAutoScalingGroup",
    "autoscaling:DeleteLaunchConfiguration",
    "autoscaling:DeleteLifecycleHook",
    "autoscaling:DeleteNotificationConfiguration",
    "autoscaling:DeletePolicy",
    "autoscaling:DeleteScheduledAction",
    "autoscaling:DeleteTags",
    "autoscaling:DescribeAccountLimits",
    "autoscaling:DescribeAdjustmentTypes",
    "autoscaling:DescribeAutoScalingGroups",
    "autoscaling:DescribeAutoScalingInstances",
    "autoscaling:DescribeAutoScalingNotificationTypes",
    "autoscaling:DescribeInstanceRefreshes",
    "autoscaling:DescribeLaunchConfigurations",
    "autoscaling:DescribeLifecycleHookTypes",
    "autoscaling:DescribeLifecycleHooks",
    "autoscaling:DescribeLoadBalancerTargetGroups",
    "autoscaling:DescribeLoadBalancers",
    "autoscaling:DescribeMetricCollectionTypes",
    "autoscaling:DescribeNotificationConfigurations",
    "autoscaling:DescribePolicies",
    "autoscaling:DescribeScalingActivities",
    "autoscaling:DescribeScalingProcessTypes",
    "autoscaling:DescribeScheduledActions",
    "autoscaling:DescribeTags",
    "autoscaling:DescribeTerminationPolicyTypes",
    "autoscaling:DetachInstances",
    "autoscaling:DetachLoadBalancerTargetGroups",
    "autoscaling:DetachLoadBalancers",
    "autoscaling:DisableMetricsCollection",
    "autoscaling:EnableMetricsCollection",
    "autoscaling:EnterStandby",
    "autoscaling:ExecutePolicy",
    "autoscaling:ExitStandby",
    "autoscaling:PutLifecycleHook",
    "autoscaling:PutNotificationConfiguration",
    "autoscaling:PutScalingPolicy",
    "autoscaling:PutScheduledUpdateGroupAction",
    "autoscaling:RecordLifecycleActionHeartbeat",
    "autoscaling:ResumeProcesses",
    "autoscaling:SetDesiredCapacity",
    "autoscaling:SetInstanceHealth",
    "autoscaling:SetInstanceProtection",
    "autoscaling:StartInstanceRefresh",
    "autoscaling:SuspendProcesses",
    "autoscaling:TerminateInstanceInAutoScalingGroup",
    "autoscaling:UpdateAutoScalingGroup",
    "aws-marketplace-management:uploadFiles",
    "aws-marketplace-management:viewMarketing",
    "aws-marketplace-management:viewReports",
    "aws-marketplace-management:viewSettings",
    "aws-marketplace-management:viewSupport",
    "aws-marketplace:AcceptAgreementApprovalRequest",
    "aws-marketplace:AssociateProductsWithPrivateMarketplace",
    "aws-marketplace:BatchMeterUsage",
    "aws-marketplace:CancelAgreementRequest",
    "aws-marketplace:CancelChangeSet",
    "aws-marketplace:CompleteTask",
    "aws-marketplace:CreatePrivateMarketplace",
    "aws-marketplace:CreatePrivateMarketplaceProfile",
    "aws-marketplace:CreatePrivateMarketplaceRequests",
    "aws-marketplace:DescribeAgreement",
    "aws-marketplace:DescribeBuilds",
    "aws-marketplace:DescribeChangeSet",
    "aws-marketplace:DescribeEntity",
    "aws-marketplace:DescribePrivateMarketplaceProducts",
    "aws-marketplace:DescribePrivateMarketplaceProfile",
    "aws-marketplace:DescribePrivateMarketplaceRequests",
    "aws-marketplace:DescribePrivateMarketplaceSettings",
    "aws-marketplace:DescribePrivateMarketplaceStatus",
    "aws-marketplace:DescribeProcurementSystemConfiguration",
    "aws-marketplace:DescribeTask",
    "aws-marketplace:DisassociateProductsFromPrivateMarketplace",
    "aws-marketplace:GetAgreementApprovalRequest",
    "aws-marketplace:GetAgreementRequest",
    "aws-marketplace:GetAgreementTerms",
    "aws-marketplace:GetEntitlements",
    "aws-marketplace:ListAgreementApprovalRequests",
    "aws-marketplace:ListAgreementRequests",
    "aws-marketplace:ListBuilds",
    "aws-marketplace:ListChangeSets",
    "aws-marketplace:ListEntities",
    "aws-marketplace:ListPrivateMarketplaceProducts",
    "aws-marketplace:ListPrivateMarketplaceRequests",
    "aws-marketplace:ListTasks",
    "aws-marketplace:MeterUsage",
    "aws-marketplace:PutProcurementSystemConfiguration",
    "aws-marketplace:RegisterUsage",
    "aws-marketplace:RejectAgreementApprovalRequest",
    "aws-marketplace:ResolveCustomer",
    "aws-marketplace:SearchAgreements",
    "aws-marketplace:StartBuild",
    "aws-marketplace:StartChangeSet",
    "aws-marketplace:StartPrivateMarketplace",
    "aws-marketplace:StopPrivateMarketplace",
    "aws-marketplace:Subscribe",
    "aws-marketplace:Unsubscribe",
    "aws-marketplace:UpdateAgreementApprovalRequest",
    "aws-marketplace:UpdatePrivateMarketplaceProfile",
    "aws-marketplace:UpdatePrivateMarketplaceSettings",
    "aws-marketplace:UpdateTask",
    "aws-marketplace:ViewSubscriptions",
    "aws-portal:ModifyAccount",
    "aws-portal:ModifyBilling",
    "aws-portal:ModifyPaymentMethods",
    "aws-portal:ViewAccount",
    "aws-portal:ViewBilling",
    "aws-portal:ViewPaymentMethods",
    "aws-portal:ViewUsage",
    "awsconnector:GetConnectorHealth",
    "awsconnector:RegisterConnector",
    "awsconnector:ValidateConnectorId",
    "backup-storage:MountCapsule",
    "backup:CopyFromBackupVault",
    "backup:CopyIntoBackupVault",
    "backup:CreateBackupPlan",
    "backup:CreateBackupSelection",
    "backup:CreateBackupVault",
    "backup:DeleteBackupPlan",
    "backup:DeleteBackupSelection",
    "backup:DeleteBackupVault",
    "backup:DeleteBackupVaultAccessPolicy",
    "backup:DeleteBackupVaultNotifications",
    "backup:DeleteRecoveryPoint",
    "backup:DescribeBackupJob",
    "backup:DescribeBackupVault",
    "backup:DescribeCopyJob",
    "backup:DescribeGlobalSettings",
    "backup:DescribeProtectedResource",
    "backup:DescribeRecoveryPoint",
    "backup:DescribeRegionSettings",
    "backup:DescribeRestoreJob",
    "backup:ExportBackupPlanTemplate",
    "backup:GetBackupPlan",
    "backup:GetBackupPlanFromJSON",
    "backup:GetBackupPlanFromTemplate",
    "backup:GetBackupSelection",
    "backup:GetBackupVaultAccessPolicy",
    "backup:GetBackupVaultNotifications",
    "backup:GetRecoveryPointRestoreMetadata",
    "backup:GetSupportedResourceTypes",
    "backup:ListBackupJobs",
    "backup:ListBackupPlanTemplates",
    "backup:ListBackupPlanVersions",
    "backup:ListBackupPlans",
    "backup:ListBackupSelections",
    "backup:ListBackupVaults",
    "backup:ListCopyJobs",
    "backup:ListProtectedResources",
    "backup:ListRecoveryPointsByBackupVault",
    "backup:ListRecoveryPointsByResource",
    "backup:ListRestoreJobs",
    "backup:ListTags",
    "backup:PutBackupVaultAccessPolicy",
    "backup:PutBackupVaultNotifications",
    "backup:StartBackupJob",
    "backup:StartCopyJob",
    "backup:StartRestoreJob",
    "backup:StopBackupJob",
    "backup:TagResource",
    "backup:UntagResource",
    "backup:UpdateBackupPlan",
    "backup:UpdateGlobalSettings",
    "backup:UpdateRecoveryPointLifecycle",
    "backup:UpdateRegionSettings",
    "batch:CancelJob",
    "batch:CreateComputeEnvironment",
    "batch:CreateJobQueue",
    "batch:DeleteComputeEnvironment",
    "batch:DeleteJobQueue",
    "batch:DeregisterJobDefinition",
    "batch:DescribeComputeEnvironments",
    "batch:DescribeJobDefinitions",
    "batch:DescribeJobQueues",
    "batch:DescribeJobs",
    "batch:ListJobs",
    "batch:ListTagsForResource",
    "batch:RegisterJobDefinition",
    "batch:SubmitJob",
    "batch:TagResource",
    "batch:TerminateJob",
    "batch:UntagResource",
    "batch:UpdateComputeEnvironment",
    "batch:UpdateJobQueue",
    "braket:CancelQuantumTask",
    "braket:CreateQuantumTask",
    "braket:GetDevice",
    "braket:GetQuantumTask",
    "braket:ListTagsForResource",
    "braket:SearchDevices",
    "braket:SearchQuantumTasks",
    "braket:TagResource",
    "braket:UntagResource",
    "budgets:CreateBudgetAction",
    "budgets:DeleteBudgetAction",
    "budgets:DescribeBudgetAction",
    "budgets:DescribeBudgetActionHistories",
    "budgets:DescribeBudgetActionsForAccount",
    "budgets:DescribeBudgetActionsForBudget",
    "budgets:ExecuteBudgetAction",
    "budgets:ModifyBudget",
    "budgets:UpdateBudgetAction",
    "budgets:ViewBudget",
    "cassandra:Alter",
    "cassandra:Create",
    "cassandra:Drop",
    "cassandra:Modify",
    "cassandra:Restore",
    "cassandra:Select",
    "cassandra:TagResource",
    "cassandra:UntagResource",
    "ce:CreateAnomalyMonitor",
    "ce:CreateAnomalySubscription",
    "ce:CreateCostCategoryDefinition",
    "ce:CreateNotificationSubscription",
    "ce:CreateReport",
    "ce:DeleteAnomalyMonitor",
    "ce:DeleteAnomalySubscription",
    "ce:DeleteCostCategoryDefinition",
    "ce:DeleteNotificationSubscription",
    "ce:DeleteReport",
    "ce:DescribeCostCategoryDefinition",
    "ce:DescribeNotificationSubscription",
    "ce:DescribeReport",
    "ce:GetAnomalies",
    "ce:GetAnomalyMonitors",
    "ce:GetAnomalySubscriptions",
    "ce:GetCostAndUsage",
    "ce:GetCostAndUsageWithResources",
    "ce:GetCostForecast",
    "ce:GetDimensionValues",
    "ce:GetPreferences",
    "ce:GetReservationCoverage",
    "ce:GetReservationPurchaseRecommendation",
    "ce:GetReservationUtilization",
    "ce:GetRightsizingRecommendation",
    "ce:GetSavingsPlansCoverage",
    "ce:GetSavingsPlansPurchaseRecommendation",
    "ce:GetSavingsPlansUtilization",
    "ce:GetSavingsPlansUtilizationDetails",
    "ce:GetTags",
    "ce:GetUsageForecast",
    "ce:ListCostCategoryDefinitions",
    "ce:ProvideAnomalyFeedback",
    "ce:UpdateAnomalyMonitor",
    "ce:UpdateAnomalySubscription",
    "ce:UpdateCostCategoryDefinition",
    "ce:UpdateNotificationSubscription",
    "ce:UpdatePreferences",
    "ce:UpdateReport",
    "chatbot:CreateChimeWebhookConfiguration",
    "chatbot:CreateSlackChannelConfiguration",
    "chatbot:DeleteChimeWebhookConfiguration",
    "chatbot:DeleteSlackChannelConfiguration",
    "chatbot:DescribeChimeWebhookConfigurations",
    "chatbot:DescribeSlackChannelConfigurations",
    "chatbot:DescribeSlackChannels",
    "chatbot:DescribeSlackWorkspaces",
    "chatbot:GetSlackOauthParameters",
    "chatbot:RedeemSlackOauthCode",
    "chatbot:UpdateChimeWebhookConfiguration",
    "chatbot:UpdateSlackChannelConfiguration",
    "chime:AcceptDelegate",
    "chime:ActivateUsers",
    "chime:AddDomain",
    "chime:AddOrUpdateGroups",
    "chime:AssociatePhoneNumberWithUser",
    "chime:AssociatePhoneNumbersWithVoiceConnector",
    "chime:AssociatePhoneNumbersWithVoiceConnectorGroup",
    "chime:AssociateSigninDelegateGroupsWithAccount",
    "chime:AuthorizeDirectory",
    "chime:BatchCreateAttendee",
    "chime:BatchCreateRoomMembership",
    "chime:BatchDeletePhoneNumber",
    "chime:BatchSuspendUser",
    "chime:BatchUnsuspendUser",
    "chime:BatchUpdatePhoneNumber",
    "chime:BatchUpdateUser",
    "chime:ConnectDirectory",
    "chime:CreateAccount",
    "chime:CreateApiKey",
    "chime:CreateAttendee",
    "chime:CreateBot",
    "chime:CreateBotMembership",
    "chime:CreateCDRBucket",
    "chime:CreateMeeting",
    "chime:CreateMeetingDialOut",
    "chime:CreateMeetingWithAttendees",
    "chime:CreatePhoneNumberOrder",
    "chime:CreateProxySession",
    "chime:CreateRoom",
    "chime:CreateRoomMembership",
    "chime:CreateSipMediaApplication",
    "chime:CreateSipMediaApplicationCall",
    "chime:CreateSipRule",
    "chime:CreateUser",
    "chime:CreateVoiceConnector",
    "chime:CreateVoiceConnectorGroup",
    "chime:DeleteAccount",
    "chime:DeleteAccountOpenIdConfig",
    "chime:DeleteApiKey",
    "chime:DeleteAttendee",
    "chime:DeleteCDRBucket",
    "chime:DeleteDelegate",
    "chime:DeleteDomain",
    "chime:DeleteEventsConfiguration",
    "chime:DeleteGroups",
    "chime:DeleteMeeting",
    "chime:DeletePhoneNumber",
    "chime:DeleteProxySession",
    "chime:DeleteRoom",
    "chime:DeleteRoomMembership",
    "chime:DeleteSipMediaApplication",
    "chime:DeleteSipRule",
    "chime:DeleteVoiceConnector",
    "chime:DeleteVoiceConnectorEmergencyCallingConfiguration",
    "chime:DeleteVoiceConnectorGroup",
    "chime:DeleteVoiceConnectorOrigination",
    "chime:DeleteVoiceConnectorProxy",
    "chime:DeleteVoiceConnectorStreamingConfiguration",
    "chime:DeleteVoiceConnectorTermination",
    "chime:DeleteVoiceConnectorTerminationCredentials",
    "chime:DisassociatePhoneNumberFromUser",
    "chime:DisassociatePhoneNumbersFromVoiceConnector",
    "chime:DisassociatePhoneNumbersFromVoiceConnectorGroup",
    "chime:DisassociateSigninDelegateGroupsFromAccount",
    "chime:DisconnectDirectory",
    "chime:GetAccount",
    "chime:GetAccountResource",
    "chime:GetAccountSettings",
    "chime:GetAccountWithOpenIdConfig",
    "chime:GetAttendee",
    "chime:GetBot",
    "chime:GetCDRBucket",
    "chime:GetDomain",
    "chime:GetEventsConfiguration",
    "chime:GetGlobalSettings",
    "chime:GetMeeting",
    "chime:GetMeetingDetail",
    "chime:GetPhoneNumber",
    "chime:GetPhoneNumberOrder",
    "chime:GetPhoneNumberSettings",
    "chime:GetProxySession",
    "chime:GetRetentionSettings",
    "chime:GetRoom",
    "chime:GetSipMediaApplication",
    "chime:GetSipMediaApplicationLoggingConfiguration",
    "chime:GetSipRule",
    "chime:GetTelephonyLimits",
    "chime:GetUser",
    "chime:GetUserActivityReportData",
    "chime:GetUserByEmail",
    "chime:GetUserSettings",
    "chime:GetVoiceConnector",
    "chime:GetVoiceConnectorEmergencyCallingConfiguration",
    "chime:GetVoiceConnectorGroup",
    "chime:GetVoiceConnectorLoggingConfiguration",
    "chime:GetVoiceConnectorOrigination",
    "chime:GetVoiceConnectorProxy",
    "chime:GetVoiceConnectorStreamingConfiguration",
    "chime:GetVoiceConnectorTermination",
    "chime:GetVoiceConnectorTerminationHealth",
    "chime:InviteDelegate",
    "chime:InviteUsers",
    "chime:InviteUsersFromProvider",
    "chime:ListAccountUsageReportData",
    "chime:ListAccounts",
    "chime:ListApiKeys",
    "chime:ListAttendeeTags",
    "chime:ListAttendees",
    "chime:ListBots",
    "chime:ListCDRBucket",
    "chime:ListCallingRegions",
    "chime:ListDelegates",
    "chime:ListDirectories",
    "chime:ListDomains",
    "chime:ListGroups",
    "chime:ListMeetingEvents",
    "chime:ListMeetingTags",
    "chime:ListMeetings",
    "chime:ListMeetingsReportData",
    "chime:ListPhoneNumberOrders",
    "chime:ListPhoneNumbers",
    "chime:ListProxySessions",
    "chime:ListRoomMemberships",
    "chime:ListRooms",
    "chime:ListSipMediaApplications",
    "chime:ListSipRules",
    "chime:ListTagsForResource",
    "chime:ListUsers",
    "chime:ListVoiceConnectorGroups",
    "chime:ListVoiceConnectorTerminationCredentials",
    "chime:ListVoiceConnectors",
    "chime:LogoutUser",
    "chime:PutEventsConfiguration",
    "chime:PutRetentionSettings",
    "chime:PutSipMediaApplicationLoggingConfiguration",
    "chime:PutVoiceConnectorEmergencyCallingConfiguration",
    "chime:PutVoiceConnectorLoggingConfiguration",
    "chime:PutVoiceConnectorOrigination",
    "chime:PutVoiceConnectorProxy",
    "chime:PutVoiceConnectorStreamingConfiguration",
    "chime:PutVoiceConnectorTermination",
    "chime:PutVoiceConnectorTerminationCredentials",
    "chime:RedactConversationMessage",
    "chime:RedactRoomMessage",
    "chime:RegenerateSecurityToken",
    "chime:RenameAccount",
    "chime:RenewDelegate",
    "chime:ResetAccountResource",
    "chime:ResetPersonalPIN",
    "chime:RestorePhoneNumber",
    "chime:RetrieveDataExports",
    "chime:SearchAvailablePhoneNumbers",
    "chime:StartDataExport",
    "chime:SubmitSupportRequest",
    "chime:SuspendUsers",
    "chime:TagAttendee",
    "chime:TagMeeting",
    "chime:TagResource",
    "chime:UnauthorizeDirectory",
    "chime:UntagAttendee",
    "chime:UntagMeeting",
    "chime:UntagResource",
    "chime:UpdateAccount",
    "chime:UpdateAccountOpenIdConfig",
    "chime:UpdateAccountResource",
    "chime:UpdateAccountSettings",
    "chime:UpdateBot",
    "chime:UpdateCDRSettings",
    "chime:UpdateGlobalSettings",
    "chime:UpdatePhoneNumber",
    "chime:UpdatePhoneNumberSettings",
    "chime:UpdateProxySession",
    "chime:UpdateRoom",
    "chime:UpdateRoomMembership",
    "chime:UpdateSipMediaApplication",
    "chime:UpdateSipRule",
    "chime:UpdateSupportedLicenses",
    "chime:UpdateUser",
    "chime:UpdateUserLicenses",
    "chime:UpdateUserSettings",
    "chime:UpdateVoiceConnector",
    "chime:UpdateVoiceConnectorGroup",
    "chime:ValidateAccountResource",
    "cloud9:CreateEnvironmentEC2",
    "cloud9:CreateEnvironmentMembership",
    "cloud9:DeleteEnvironment",
    "cloud9:DeleteEnvironmentMembership",
    "cloud9:DescribeEnvironmentMemberships",
    "cloud9:DescribeEnvironmentStatus",
    "cloud9:DescribeEnvironments",
    "cloud9:GetUserSettings",
    "cloud9:ListEnvironments",
    "cloud9:ListTagsForResource",
    "cloud9:TagResource",
    "cloud9:UntagResource",
    "cloud9:UpdateEnvironment",
    "cloud9:UpdateEnvironmentMembership",
    "cloud9:UpdateUserSettings",
    "clouddirectory:AddFacetToObject",
    "clouddirectory:ApplySchema",
    "clouddirectory:AttachObject",
    "clouddirectory:AttachPolicy",
    "clouddirectory:AttachToIndex",
    "clouddirectory:AttachTypedLink",
    "clouddirectory:BatchRead",
    "clouddirectory:BatchWrite",
    "clouddirectory:CreateDirectory",
    "clouddirectory:CreateFacet",
    "clouddirectory:CreateIndex",
    "clouddirectory:CreateObject",
    "clouddirectory:CreateSchema",
    "clouddirectory:CreateTypedLinkFacet",
    "clouddirectory:DeleteDirectory",
    "clouddirectory:DeleteFacet",
    "clouddirectory:DeleteObject",
    "clouddirectory:DeleteSchema",
    "clouddirectory:DeleteTypedLinkFacet",
    "clouddirectory:DetachFromIndex",
    "clouddirectory:DetachObject",
    "clouddirectory:DetachPolicy",
    "clouddirectory:DetachTypedLink",
    "clouddirectory:DisableDirectory",
    "clouddirectory:EnableDirectory",
    "clouddirectory:GetDirectory",
    "clouddirectory:GetFacet",
    "clouddirectory:GetLinkAttributes",
    "clouddirectory:GetObjectAttributes",
    "clouddirectory:GetObjectInformation",
    "clouddirectory:GetSchemaAsJson",
    "clouddirectory:GetTypedLinkFacetInformation",
    "clouddirectory:ListAppliedSchemaArns",
    "clouddirectory:ListAttachedIndices",
    "clouddirectory:ListDevelopmentSchemaArns",
    "clouddirectory:ListDirectories",
    "clouddirectory:ListFacetAttributes",
    "clouddirectory:ListFacetNames",
    "clouddirectory:ListIncomingTypedLinks",
    "clouddirectory:ListIndex",
    "clouddirectory:ListObjectAttributes",
    "clouddirectory:ListObjectChildren",
    "clouddirectory:ListObjectParentPaths",
    "clouddirectory:ListObjectParents",
    "clouddirectory:ListObjectPolicies",
    "clouddirectory:ListOutgoingTypedLinks",
    "clouddirectory:ListPolicyAttachments",
    "clouddirectory:ListPublishedSchemaArns",
    "clouddirectory:ListTagsForResource",
    "clouddirectory:ListTypedLinkFacetAttributes",
    "clouddirectory:ListTypedLinkFacetNames",
    "clouddirectory:LookupPolicy",
    "clouddirectory:PublishSchema",
    "clouddirectory:PutSchemaFromJson",
    "clouddirectory:RemoveFacetFromObject",
    "clouddirectory:TagResource",
    "clouddirectory:UntagResource",
    "clouddirectory:UpdateFacet",
    "clouddirectory:UpdateLinkAttributes",
    "clouddirectory:UpdateObjectAttributes",
    "clouddirectory:UpdateSchema",
    "clouddirectory:UpdateTypedLinkFacet",
    "cloudformation:CancelUpdateStack",
    "cloudformation:ContinueUpdateRollback",
    "cloudformation:CreateChangeSet",
    "cloudformation:CreateStack",
    "cloudformation:CreateStackInstances",
    "cloudformation:CreateStackSet",
    "cloudformation:CreateUploadBucket",
    "cloudformation:DeleteChangeSet",
    "cloudformation:DeleteStack",
    "cloudformation:DeleteStackInstances",
    "cloudformation:DeleteStackSet",
    "cloudformation:DeregisterType",
    "cloudformation:DescribeAccountLimits",
    "cloudformation:DescribeChangeSet",
    "cloudformation:DescribeStackDriftDetectionStatus",
    "cloudformation:DescribeStackEvents",
    "cloudformation:DescribeStackInstance",
    "cloudformation:DescribeStackResource",
    "cloudformation:DescribeStackResourceDrifts",
    "cloudformation:DescribeStackResources",
    "cloudformation:DescribeStackSet",
    "cloudformation:DescribeStackSetOperation",
    "cloudformation:DescribeStacks",
    "cloudformation:DescribeType",
    "cloudformation:DescribeTypeRegistration",
    "cloudformation:DetectStackDrift",
    "cloudformation:DetectStackResourceDrift",
    "cloudformation:DetectStackSetDrift",
    "cloudformation:EstimateTemplateCost",
    "cloudformation:ExecuteChangeSet",
    "cloudformation:GetStackPolicy",
    "cloudformation:GetTemplate",
    "cloudformation:GetTemplateSummary",
    "cloudformation:ListChangeSets",
    "cloudformation:ListExports",
    "cloudformation:ListImports",
    "cloudformation:ListStackInstances",
    "cloudformation:ListStackResources",
    "cloudformation:ListStackSetOperationResults",
    "cloudformation:ListStackSetOperations",
    "cloudformation:ListStackSets",
    "cloudformation:ListStacks",
    "cloudformation:ListTypeRegistrations",
    "cloudformation:ListTypeVersions",
    "cloudformation:ListTypes",
    "cloudformation:RegisterType",
    "cloudformation:SetStackPolicy",
    "cloudformation:SetTypeDefaultVersion",
    "cloudformation:SignalResource",
    "cloudformation:StopStackSetOperation",
    "cloudformation:TagResource",
    "cloudformation:UntagResource",
    "cloudformation:UpdateStack",
    "cloudformation:UpdateStackInstances",
    "cloudformation:UpdateStackSet",
    "cloudformation:UpdateTerminationProtection",
    "cloudformation:ValidateTemplate",
    "cloudfront:CreateCachePolicy",
    "cloudfront:CreateCloudFrontOriginAccessIdentity",
    "cloudfront:CreateDistribution",
    "cloudfront:CreateDistributionWithTags",
    "cloudfront:CreateFieldLevelEncryptionConfig",
    "cloudfront:CreateFieldLevelEncryptionProfile",
    "cloudfront:CreateInvalidation",
    "cloudfront:CreateOriginRequestPolicy",
    "cloudfront:CreatePublicKey",
    "cloudfront:CreateStreamingDistribution",
    "cloudfront:CreateStreamingDistributionWithTags",
    "cloudfront:DeleteCachePolicy",
    "cloudfront:DeleteCloudFrontOriginAccessIdentity",
    "cloudfront:DeleteDistribution",
    "cloudfront:DeleteFieldLevelEncryptionConfig",
    "cloudfront:DeleteFieldLevelEncryptionProfile",
    "cloudfront:DeleteOriginRequestPolicy",
    "cloudfront:DeletePublicKey",
    "cloudfront:DeleteStreamingDistribution",
    "cloudfront:GetCachePolicy",
    "cloudfront:GetCachePolicyConfig",
    "cloudfront:GetCloudFrontOriginAccessIdentity",
    "cloudfront:GetCloudFrontOriginAccessIdentityConfig",
    "cloudfront:GetDistribution",
    "cloudfront:GetDistributionConfig",
    "cloudfront:GetFieldLevelEncryption",
    "cloudfront:GetFieldLevelEncryptionConfig",
    "cloudfront:GetFieldLevelEncryptionProfile",
    "cloudfront:GetFieldLevelEncryptionProfileConfig",
    "cloudfront:GetInvalidation",
    "cloudfront:GetOriginRequestPolicy",
    "cloudfront:GetOriginRequestPolicyConfig",
    "cloudfront:GetPublicKey",
    "cloudfront:GetPublicKeyConfig",
    "cloudfront:GetStreamingDistribution",
    "cloudfront:GetStreamingDistributionConfig",
    "cloudfront:ListCachePolicies",
    "cloudfront:ListCloudFrontOriginAccessIdentities",
    "cloudfront:ListDistributions",
    "cloudfront:ListDistributionsByCachePolicyId",
    "cloudfront:ListDistributionsByOriginRequestPolicyId",
    "cloudfront:ListDistributionsByWebACLId",
    "cloudfront:ListFieldLevelEncryptionConfigs",
    "cloudfront:ListFieldLevelEncryptionProfiles",
    "cloudfront:ListInvalidations",
    "cloudfront:ListOriginRequestPolicies",
    "cloudfront:ListPublicKeys",
    "cloudfront:ListStreamingDistributions",
    "cloudfront:ListTagsForResource",
    "cloudfront:TagResource",
    "cloudfront:UntagResource",
    "cloudfront:UpdateCachePolicy",
    "cloudfront:UpdateCloudFrontOriginAccessIdentity",
    "cloudfront:UpdateDistribution",
    "cloudfront:UpdateFieldLevelEncryptionConfig",
    "cloudfront:UpdateFieldLevelEncryptionProfile",
    "cloudfront:UpdateOriginRequestPolicy",
    "cloudfront:UpdatePublicKey",
    "cloudfront:UpdateStreamingDistribution",
    "cloudhsm:AddTagsToResource",
    "cloudhsm:CopyBackupToRegion",
    "cloudhsm:CreateCluster",
    "cloudhsm:CreateHapg",
    "cloudhsm:CreateHsm",
    "cloudhsm:CreateLunaClient",
    "cloudhsm:DeleteBackup",
    "cloudhsm:DeleteCluster",
    "cloudhsm:DeleteHapg",
    "cloudhsm:DeleteHsm",
    "cloudhsm:DeleteLunaClient",
    "cloudhsm:DescribeBackups",
    "cloudhsm:DescribeClusters",
    "cloudhsm:DescribeHapg",
    "cloudhsm:DescribeHsm",
    "cloudhsm:DescribeLunaClient",
    "cloudhsm:GetConfig",
    "cloudhsm:InitializeCluster",
    "cloudhsm:ListAvailableZones",
    "cloudhsm:ListHapgs",
    "cloudhsm:ListHsms",
    "cloudhsm:ListLunaClients",
    "cloudhsm:ListTags",
    "cloudhsm:ListTagsForResource",
    "cloudhsm:ModifyHapg",
    "cloudhsm:ModifyHsm",
    "cloudhsm:ModifyLunaClient",
    "cloudhsm:RemoveTagsFromResource",
    "cloudhsm:RestoreBackup",
    "cloudhsm:TagResource",
    "cloudhsm:UntagResource",
    "cloudsearch:AddTags",
    "cloudsearch:BuildSuggesters",
    "cloudsearch:CreateDomain",
    "cloudsearch:DefineAnalysisScheme",
    "cloudsearch:DefineExpression",
    "cloudsearch:DefineIndexField",
    "cloudsearch:DefineSuggester",
    "cloudsearch:DeleteAnalysisScheme",
    "cloudsearch:DeleteDomain",
    "cloudsearch:DeleteExpression",
    "cloudsearch:DeleteIndexField",
    "cloudsearch:DeleteSuggester",
    "cloudsearch:DescribeAnalysisSchemes",
    "cloudsearch:DescribeAvailabilityOptions",
    "cloudsearch:DescribeDomainEndpointOptions",
    "cloudsearch:DescribeDomains",
    "cloudsearch:DescribeExpressions",
    "cloudsearch:DescribeIndexFields",
    "cloudsearch:DescribeScalingParameters",
    "cloudsearch:DescribeServiceAccessPolicies",
    "cloudsearch:DescribeSuggesters",
    "cloudsearch:IndexDocuments",
    "cloudsearch:ListDomainNames",
    "cloudsearch:ListTags",
    "cloudsearch:RemoveTags",
    "cloudsearch:UpdateAvailabilityOptions",
    "cloudsearch:UpdateDomainEndpointOptions",
    "cloudsearch:UpdateScalingParameters",
    "cloudsearch:UpdateServiceAccessPolicies",
    "cloudsearch:document",
    "cloudsearch:search",
    "cloudsearch:suggest",
    "cloudtrail:AddTags",
    "cloudtrail:CreateTrail",
    "cloudtrail:DeleteTrail",
    "cloudtrail:DescribeTrails",
    "cloudtrail:GetEventSelectors",
    "cloudtrail:GetInsightSelectors",
    "cloudtrail:GetTrail",
    "cloudtrail:GetTrailStatus",
    "cloudtrail:ListPublicKeys",
    "cloudtrail:ListTags",
    "cloudtrail:ListTrails",
    "cloudtrail:LookupEvents",
    "cloudtrail:PutEventSelectors",
    "cloudtrail:PutInsightSelectors",
    "cloudtrail:RemoveTags",
    "cloudtrail:StartLogging",
    "cloudtrail:StopLogging",
    "cloudtrail:UpdateTrail",
    "cloudwatch:DeleteAlarms",
    "cloudwatch:DeleteAnomalyDetector",
    "cloudwatch:DeleteDashboards",
    "cloudwatch:DeleteInsightRules",
    "cloudwatch:DescribeAlarmHistory",
    "cloudwatch:DescribeAlarms",
    "cloudwatch:DescribeAlarmsForMetric",
    "cloudwatch:DescribeAnomalyDetectors",
    "cloudwatch:DescribeInsightRules",
    "cloudwatch:DisableAlarmActions",
    "cloudwatch:DisableInsightRules",
    "cloudwatch:EnableAlarmActions",
    "cloudwatch:EnableInsightRules",
    "cloudwatch:GetDashboard",
    "cloudwatch:GetInsightRuleReport",
    "cloudwatch:GetMetricData",
    "cloudwatch:GetMetricStatistics",
    "cloudwatch:GetMetricWidgetImage",
    "cloudwatch:ListDashboards",
    "cloudwatch:ListMetrics",
    "cloudwatch:ListTagsForResource",
    "cloudwatch:PutAnomalyDetector",
    "cloudwatch:PutCompositeAlarm",
    "cloudwatch:PutDashboard",
    "cloudwatch:PutInsightRule",
    "cloudwatch:PutMetricAlarm",
    "cloudwatch:PutMetricData",
    "cloudwatch:SetAlarmState",
    "cloudwatch:TagResource",
    "cloudwatch:UntagResource",
    "codeartifact:AssociateExternalConnection",
    "codeartifact:AssociateWithDownstreamRepository",
    "codeartifact:CopyPackageVersions",
    "codeartifact:CreateDomain",
    "codeartifact:CreateRepository",
    "codeartifact:DeleteDomain",
    "codeartifact:DeleteDomainPermissionsPolicy",
    "codeartifact:DeletePackageVersions",
    "codeartifact:DeleteRepository",
    "codeartifact:DeleteRepositoryPermissionsPolicy",
    "codeartifact:DescribeDomain",
    "codeartifact:DescribePackageVersion",
    "codeartifact:DescribeRepository",
    "codeartifact:DisassociateExternalConnection",
    "codeartifact:DisposePackageVersions",
    "codeartifact:GetAuthorizationToken",
    "codeartifact:GetDomainPermissionsPolicy",
    "codeartifact:GetPackageVersionAsset",
    "codeartifact:GetPackageVersionReadme",
    "codeartifact:GetRepositoryEndpoint",
    "codeartifact:GetRepositoryPermissionsPolicy",
    "codeartifact:ListDomains",
    "codeartifact:ListPackageVersionAssets",
    "codeartifact:ListPackageVersionDependencies",
    "codeartifact:ListPackageVersions",
    "codeartifact:ListPackages",
    "codeartifact:ListRepositories",
    "codeartifact:ListRepositoriesInDomain",
    "codeartifact:ListTagsForResource",
    "codeartifact:PublishPackageVersion",
    "codeartifact:PutDomainPermissionsPolicy",
    "codeartifact:PutPackageMetadata",
    "codeartifact:PutRepositoryPermissionsPolicy",
    "codeartifact:ReadFromRepository",
    "codeartifact:TagResource",
    "codeartifact:UntagResource",
    "codeartifact:UpdatePackageVersionsStatus",
    "codeartifact:UpdateRepository",
    "codebuild:BatchDeleteBuilds",
    "codebuild:BatchGetBuildBatches",
    "codebuild:BatchGetBuilds",
    "codebuild:BatchGetProjects",
    "codebuild:BatchGetReportGroups",
    "codebuild:BatchGetReports",
    "codebuild:BatchPutCodeCoverages",
    "codebuild:BatchPutTestCases",
    "codebuild:CreateProject",
    "codebuild:CreateReport",
    "codebuild:CreateReportGroup",
    "codebuild:CreateWebhook",
    "codebuild:DeleteBuildBatch",
    "codebuild:DeleteOAuthToken",
    "codebuild:DeleteProject",
    "codebuild:DeleteReport",
    "codebuild:DeleteReportGroup",
    "codebuild:DeleteResourcePolicy",
    "codebuild:DeleteSourceCredentials",
    "codebuild:DeleteWebhook",
    "codebuild:DescribeCodeCoverages",
    "codebuild:DescribeTestCases",
    "codebuild:GetResourcePolicy",
    "codebuild:ImportSourceCredentials",
    "codebuild:InvalidateProjectCache",
    "codebuild:ListBuildBatches",
    "codebuild:ListBuildBatchesForProject",
    "codebuild:ListBuilds",
    "codebuild:ListBuildsForProject",
    "codebuild:ListConnectedOAuthAccounts",
    "codebuild:ListCuratedEnvironmentImages",
    "codebuild:ListProjects",
    "codebuild:ListReportGroups",
    "codebuild:ListReports",
    "codebuild:ListReportsForReportGroup",
    "codebuild:ListRepositories",
    "codebuild:ListSharedProjects",
    "codebuild:ListSharedReportGroups",
    "codebuild:ListSourceCredentials",
    "codebuild:PersistOAuthToken",
    "codebuild:PutResourcePolicy",
    "codebuild:RetryBuild",
    "codebuild:RetryBuildBatch",
    "codebuild:StartBuild",
    "codebuild:StartBuildBatch",
    "codebuild:StopBuild",
    "codebuild:StopBuildBatch",
    "codebuild:UpdateProject",
    "codebuild:UpdateReport",
    "codebuild:UpdateReportGroup",
    "codebuild:UpdateWebhook",
    "codecommit:AssociateApprovalRuleTemplateWithRepository",
    "codecommit:BatchAssociateApprovalRuleTemplateWithRepositories",
    "codecommit:BatchDescribeMergeConflicts",
    "codecommit:BatchDisassociateApprovalRuleTemplateFromRepositories",
    "codecommit:BatchGetCommits",
    "codecommit:BatchGetPullRequests",
    "codecommit:BatchGetRepositories",
    "codecommit:CancelUploadArchive",
    "codecommit:CreateApprovalRuleTemplate",
    "codecommit:CreateBranch",
    "codecommit:CreateCommit",
    "codecommit:CreatePullRequest",
    "codecommit:CreatePullRequestApprovalRule",
    "codecommit:CreateRepository",
    "codecommit:CreateUnreferencedMergeCommit",
    "codecommit:DeleteApprovalRuleTemplate",
    "codecommit:DeleteBranch",
    "codecommit:DeleteCommentContent",
    "codecommit:DeleteFile",
    "codecommit:DeletePullRequestApprovalRule",
    "codecommit:DeleteRepository",
    "codecommit:DescribeMergeConflicts",
    "codecommit:DescribePullRequestEvents",
    "codecommit:DisassociateApprovalRuleTemplateFromRepository",
    "codecommit:EvaluatePullRequestApprovalRules",
    "codecommit:GetApprovalRuleTemplate",
    "codecommit:GetBlob",
    "codecommit:GetBranch",
    "codecommit:GetComment",
    "codecommit:GetCommentReactions",
    "codecommit:GetCommentsForComparedCommit",
    "codecommit:GetCommentsForPullRequest",
    "codecommit:GetCommit",
    "codecommit:GetCommitHistory",
    "codecommit:GetCommitsFromMergeBase",
    "codecommit:GetDifferences",
    "codecommit:GetFile",
    "codecommit:GetFolder",
    "codecommit:GetMergeCommit",
    "codecommit:GetMergeConflicts",
    "codecommit:GetMergeOptions",
    "codecommit:GetObjectIdentifier",
    "codecommit:GetPullRequest",
    "codecommit:GetPullRequestApprovalStates",
    "codecommit:GetPullRequestOverrideState",
    "codecommit:GetReferences",
    "codecommit:GetRepository",
    "codecommit:GetRepositoryTriggers",
    "codecommit:GetTree",
    "codecommit:GetUploadArchiveStatus",
    "codecommit:GitPull",
    "codecommit:GitPush",
    "codecommit:ListApprovalRuleTemplates",
    "codecommit:ListAssociatedApprovalRuleTemplatesForRepository",
    "codecommit:ListBranches",
    "codecommit:ListPullRequests",
    "codecommit:ListRepositories",
    "codecommit:ListRepositoriesForApprovalRuleTemplate",
    "codecommit:ListTagsForResource",
    "codecommit:MergeBranchesByFastForward",
    "codecommit:MergeBranchesBySquash",
    "codecommit:MergeBranchesByThreeWay",
    "codecommit:MergePullRequestByFastForward",
    "codecommit:MergePullRequestBySquash",
    "codecommit:MergePullRequestByThreeWay",
    "codecommit:OverridePullRequestApprovalRules",
    "codecommit:PostCommentForComparedCommit",
    "codecommit:PostCommentForPullRequest",
    "codecommit:PostCommentReply",
    "codecommit:PutCommentReaction",
    "codecommit:PutFile",
    "codecommit:PutRepositoryTriggers",
    "codecommit:TagResource",
    "codecommit:TestRepositoryTriggers",
    "codecommit:UntagResource",
    "codecommit:UpdateApprovalRuleTemplateContent",
    "codecommit:UpdateApprovalRuleTemplateDescription",
    "codecommit:UpdateApprovalRuleTemplateName",
    "codecommit:UpdateComment",
    "codecommit:UpdateDefaultBranch",
    "codecommit:UpdatePullRequestApprovalRuleContent",
    "codecommit:UpdatePullRequestApprovalState",
    "codecommit:UpdatePullRequestDescription",
    "codecommit:UpdatePullRequestStatus",
    "codecommit:UpdatePullRequestTitle",
    "codecommit:UpdateRepositoryDescription",
    "codecommit:UpdateRepositoryName",
    "codecommit:UploadArchive",
    "codedeploy:AddTagsToOnPremisesInstances",
    "codedeploy:BatchGetApplicationRevisions",
    "codedeploy:BatchGetApplications",
    "codedeploy:BatchGetDeploymentGroups",
    "codedeploy:BatchGetDeploymentInstances",
    "codedeploy:BatchGetDeploymentTargets",
    "codedeploy:BatchGetDeployments",
    "codedeploy:BatchGetOnPremisesInstances",
    "codedeploy:ContinueDeployment",
    "codedeploy:CreateApplication",
    "codedeploy:CreateCloudFormationDeployment",
    "codedeploy:CreateDeployment",
    "codedeploy:CreateDeploymentConfig",
    "codedeploy:CreateDeploymentGroup",
    "codedeploy:DeleteApplication",
    "codedeploy:DeleteDeploymentConfig",
    "codedeploy:DeleteDeploymentGroup",
    "codedeploy:DeleteGitHubAccountToken",
    "codedeploy:DeleteResourcesByExternalId",
    "codedeploy:DeregisterOnPremisesInstance",
    "codedeploy:GetApplication",
    "codedeploy:GetApplicationRevision",
    "codedeploy:GetDeployment",
    "codedeploy:GetDeploymentConfig",
    "codedeploy:GetDeploymentGroup",
    "codedeploy:GetDeploymentInstance",
    "codedeploy:GetDeploymentTarget",
    "codedeploy:GetOnPremisesInstance",
    "codedeploy:ListApplicationRevisions",
    "codedeploy:ListApplications",
    "codedeploy:ListDeploymentConfigs",
    "codedeploy:ListDeploymentGroups",
    "codedeploy:ListDeploymentInstances",
    "codedeploy:ListDeploymentTargets",
    "codedeploy:ListDeployments",
    "codedeploy:ListGitHubAccountTokenNames",
    "codedeploy:ListOnPremisesInstances",
    "codedeploy:ListTagsForResource",
    "codedeploy:PutLifecycleEventHookExecutionStatus",
    "codedeploy:RegisterApplicationRevision",
    "codedeploy:RegisterOnPremisesInstance",
    "codedeploy:RemoveTagsFromOnPremisesInstances",
    "codedeploy:SkipWaitTimeForInstanceTermination",
    "codedeploy:StopDeployment",
    "codedeploy:TagResource",
    "codedeploy:UntagResource",
    "codedeploy:UpdateApplication",
    "codedeploy:UpdateDeploymentGroup",
    "codeguru-profiler:AddNotificationChannels",
    "codeguru-profiler:BatchGetFrameMetricData",
    "codeguru-profiler:ConfigureAgent",
    "codeguru-profiler:CreateProfilingGroup",
    "codeguru-profiler:DeleteProfilingGroup",
    "codeguru-profiler:DescribeProfilingGroup",
    "codeguru-profiler:GetFindingsReportAccountSummary",
    "codeguru-profiler:GetNotificationConfiguration",
    "codeguru-profiler:GetPolicy",
    "codeguru-profiler:GetProfile",
    "codeguru-profiler:GetRecommendations",
    "codeguru-profiler:ListFindingsReports",
    "codeguru-profiler:ListProfileTimes",
    "codeguru-profiler:ListProfilingGroups",
    "codeguru-profiler:ListTagsForResource",
    "codeguru-profiler:PostAgentProfile",
    "codeguru-profiler:PutPermission",
    "codeguru-profiler:RemoveNotificationChannel",
    "codeguru-profiler:RemovePermission",
    "codeguru-profiler:SubmitFeedback",
    "codeguru-profiler:TagResource",
    "codeguru-profiler:UntagResource",
    "codeguru-profiler:UpdateProfilingGroup",
    "codeguru-reviewer:AssociateRepository",
    "codeguru-reviewer:CreateConnectionToken",
    "codeguru-reviewer:DescribeCodeReview",
    "codeguru-reviewer:DescribeRecommendationFeedback",
    "codeguru-reviewer:DescribeRepositoryAssociation",
    "codeguru-reviewer:DisassociateRepository",
    "codeguru-reviewer:GetMetricsData",
    "codeguru-reviewer:ListCodeReviews",
    "codeguru-reviewer:ListRecommendationFeedback",
    "codeguru-reviewer:ListRecommendations",
    "codeguru-reviewer:ListRepositoryAssociations",
    "codeguru-reviewer:ListThirdPartyRepositories",
    "codeguru-reviewer:PutRecommendationFeedback",
    "codeguru:GetCodeGuruFreeTrialSummary",
    "codepipeline:AcknowledgeJob",
    "codepipeline:AcknowledgeThirdPartyJob",
    "codepipeline:CreateCustomActionType",
    "codepipeline:CreatePipeline",
    "codepipeline:DeleteCustomActionType",
    "codepipeline:DeletePipeline",
    "codepipeline:DeleteWebhook",
    "codepipeline:DeregisterWebhookWithThirdParty",
    "codepipeline:DisableStageTransition",
    "codepipeline:EnableStageTransition",
    "codepipeline:GetJobDetails",
    "codepipeline:GetPipeline",
    "codepipeline:GetPipelineExecution",
    "codepipeline:GetPipelineState",
    "codepipeline:GetThirdPartyJobDetails",
    "codepipeline:ListActionExecutions",
    "codepipeline:ListActionTypes",
    "codepipeline:ListPipelineExecutions",
    "codepipeline:ListPipelines",
    "codepipeline:ListTagsForResource",
    "codepipeline:ListWebhooks",
    "codepipeline:PollForJobs",
    "codepipeline:PollForThirdPartyJobs",
    "codepipeline:PutActionRevision",
    "codepipeline:PutApprovalResult",
    "codepipeline:PutJobFailureResult",
    "codepipeline:PutJobSuccessResult",
    "codepipeline:PutThirdPartyJobFailureResult",
    "codepipeline:PutThirdPartyJobSuccessResult",
    "codepipeline:PutWebhook",
    "codepipeline:RegisterWebhookWithThirdParty",
    "codepipeline:RetryStageExecution",
    "codepipeline:StartPipelineExecution",
    "codepipeline:StopPipelineExecution",
    "codepipeline:TagResource",
    "codepipeline:UntagResource",
    "codepipeline:UpdatePipeline",
    "codestar-connections:CreateConnection",
    "codestar-connections:CreateHost",
    "codestar-connections:DeleteConnection",
    "codestar-connections:DeleteHost",
    "codestar-connections:GetConnection",
    "codestar-connections:GetHost",
    "codestar-connections:GetIndividualAccessToken",
    "codestar-connections:GetInstallationUrl",
    "codestar-connections:ListConnections",
    "codestar-connections:ListHosts",
    "codestar-connections:ListInstallationTargets",
    "codestar-connections:ListTagsForResource",
    "codestar-connections:PassConnection",
    "codestar-connections:RegisterAppCode",
    "codestar-connections:StartAppRegistrationHandshake",
    "codestar-connections:StartOAuthHandshake",
    "codestar-connections:TagResource",
    "codestar-connections:UntagResource",
    "codestar-connections:UpdateConnectionInstallation",
    "codestar-connections:UseConnection",
    "codestar-notifications:CreateNotificationRule",
    "codestar-notifications:DeleteNotificationRule",
    "codestar-notifications:DeleteTarget",
    "codestar-notifications:DescribeNotificationRule",
    "codestar-notifications:ListEventTypes",
    "codestar-notifications:ListNotificationRules",
    "codestar-notifications:ListTagsForResource",
    "codestar-notifications:ListTargets",
    "codestar-notifications:Subscribe",
    "codestar-notifications:TagResource",
    "codestar-notifications:Unsubscribe",
    "codestar-notifications:UntagResource",
    "codestar-notifications:UpdateNotificationRule",
    "codestar:AssociateTeamMember",
    "codestar:CreateProject",
    "codestar:CreateUserProfile",
    "codestar:DeleteExtendedAccess",
    "codestar:DeleteProject",
    "codestar:DeleteUserProfile",
    "codestar:DescribeProject",
    "codestar:DescribeUserProfile",
    "codestar:DisassociateTeamMember",
    "codestar:GetExtendedAccess",
    "codestar:ListProjects",
    "codestar:ListResources",
    "codestar:ListTagsForProject",
    "codestar:ListTeamMembers",
    "codestar:ListUserProfiles",
    "codestar:PutExtendedAccess",
    "codestar:TagProject",
    "codestar:UntagProject",
    "codestar:UpdateProject",
    "codestar:UpdateTeamMember",
    "codestar:UpdateUserProfile",
    "cognito-identity:CreateIdentityPool",
    "cognito-identity:DeleteIdentities",
    "cognito-identity:DeleteIdentityPool",
    "cognito-identity:DescribeIdentity",
    "cognito-identity:DescribeIdentityPool",
    "cognito-identity:GetCredentialsForIdentity",
    "cognito-identity:GetId",
    "cognito-identity:GetIdentityPoolRoles",
    "cognito-identity:GetOpenIdToken",
    "cognito-identity:GetOpenIdTokenForDeveloperIdentity",
    "cognito-identity:ListIdentities",
    "cognito-identity:ListIdentityPools",
    "cognito-identity:ListTagsForResource",
    "cognito-identity:LookupDeveloperIdentity",
    "cognito-identity:MergeDeveloperIdentities",
    "cognito-identity:SetIdentityPoolRoles",
    "cognito-identity:TagResource",
    "cognito-identity:UnlinkDeveloperIdentity",
    "cognito-identity:UnlinkIdentity",
    "cognito-identity:UntagResource",
    "cognito-identity:UpdateIdentityPool",
    "cognito-idp:AddCustomAttributes",
    "cognito-idp:AdminAddUserToGroup",
    "cognito-idp:AdminConfirmSignUp",
    "cognito-idp:AdminCreateUser",
    "cognito-idp:AdminDeleteUser",
    "cognito-idp:AdminDeleteUserAttributes",
    "cognito-idp:AdminDisableProviderForUser",
    "cognito-idp:AdminDisableUser",
    "cognito-idp:AdminEnableUser",
    "cognito-idp:AdminForgetDevice",
    "cognito-idp:AdminGetDevice",
    "cognito-idp:AdminGetUser",
    "cognito-idp:AdminInitiateAuth",
    "cognito-idp:AdminLinkProviderForUser",
    "cognito-idp:AdminListDevices",
    "cognito-idp:AdminListGroupsForUser",
    "cognito-idp:AdminListUserAuthEvents",
    "cognito-idp:AdminRemoveUserFromGroup",
    "cognito-idp:AdminResetUserPassword",
    "cognito-idp:AdminRespondToAuthChallenge",
    "cognito-idp:AdminSetUserMFAPreference",
    "cognito-idp:AdminSetUserPassword",
    "cognito-idp:AdminSetUserSettings",
    "cognito-idp:AdminUpdateAuthEventFeedback",
    "cognito-idp:AdminUpdateDeviceStatus",
    "cognito-idp:AdminUpdateUserAttributes",
    "cognito-idp:AdminUserGlobalSignOut",
    "cognito-idp:AssociateSoftwareToken",
    "cognito-idp:ChangePassword",
    "cognito-idp:ConfirmDevice",
    "cognito-idp:ConfirmForgotPassword",
    "cognito-idp:ConfirmSignUp",
    "cognito-idp:CreateGroup",
    "cognito-idp:CreateIdentityProvider",
    "cognito-idp:CreateResourceServer",
    "cognito-idp:CreateUserImportJob",
    "cognito-idp:CreateUserPool",
    "cognito-idp:CreateUserPoolClient",
    "cognito-idp:CreateUserPoolDomain",
    "cognito-idp:DeleteGroup",
    "cognito-idp:DeleteIdentityProvider",
    "cognito-idp:DeleteResourceServer",
    "cognito-idp:DeleteUser",
    "cognito-idp:DeleteUserAttributes",
    "cognito-idp:DeleteUserPool",
    "cognito-idp:DeleteUserPoolClient",
    "cognito-idp:DeleteUserPoolDomain",
    "cognito-idp:DescribeIdentityProvider",
    "cognito-idp:DescribeResourceServer",
    "cognito-idp:DescribeRiskConfiguration",
    "cognito-idp:DescribeUserImportJob",
    "cognito-idp:DescribeUserPool",
    "cognito-idp:DescribeUserPoolClient",
    "cognito-idp:DescribeUserPoolDomain",
    "cognito-idp:ForgetDevice",
    "cognito-idp:ForgotPassword",
    "cognito-idp:GetCSVHeader",
    "cognito-idp:GetDevice",
    "cognito-idp:GetGroup",
    "cognito-idp:GetIdentityProviderByIdentifier",
    "cognito-idp:GetSigningCertificate",
    "cognito-idp:GetUICustomization",
    "cognito-idp:GetUser",
    "cognito-idp:GetUserAttributeVerificationCode",
    "cognito-idp:GetUserPoolMfaConfig",
    "cognito-idp:GlobalSignOut",
    "cognito-idp:InitiateAuth",
    "cognito-idp:ListDevices",
    "cognito-idp:ListGroups",
    "cognito-idp:ListIdentityProviders",
    "cognito-idp:ListResourceServers",
    "cognito-idp:ListTagsForResource",
    "cognito-idp:ListUserImportJobs",
    "cognito-idp:ListUserPoolClients",
    "cognito-idp:ListUserPools",
    "cognito-idp:ListUsers",
    "cognito-idp:ListUsersInGroup",
    "cognito-idp:ResendConfirmationCode",
    "cognito-idp:RespondToAuthChallenge",
    "cognito-idp:SetRiskConfiguration",
    "cognito-idp:SetUICustomization",
    "cognito-idp:SetUserMFAPreference",
    "cognito-idp:SetUserPoolMfaConfig",
    "cognito-idp:SetUserSettings",
    "cognito-idp:SignUp",
    "cognito-idp:StartUserImportJob",
    "cognito-idp:StopUserImportJob",
    "cognito-idp:TagResource",
    "cognito-idp:UntagResource",
    "cognito-idp:UpdateAuthEventFeedback",
    "cognito-idp:UpdateDeviceStatus",
    "cognito-idp:UpdateGroup",
    "cognito-idp:UpdateIdentityProvider",
    "cognito-idp:UpdateResourceServer",
    "cognito-idp:UpdateUserAttributes",
    "cognito-idp:UpdateUserPool",
    "cognito-idp:UpdateUserPoolClient",
    "cognito-idp:UpdateUserPoolDomain",
    "cognito-idp:VerifySoftwareToken",
    "cognito-idp:VerifyUserAttribute",
    "cognito-sync:BulkPublish",
    "cognito-sync:DeleteDataset",
    "cognito-sync:DescribeDataset",
    "cognito-sync:DescribeIdentityPoolUsage",
    "cognito-sync:DescribeIdentityUsage",
    "cognito-sync:GetBulkPublishDetails",
    "cognito-sync:GetCognitoEvents",
    "cognito-sync:GetIdentityPoolConfiguration",
    "cognito-sync:ListDatasets",
    "cognito-sync:ListIdentityPoolUsage",
    "cognito-sync:ListRecords",
    "cognito-sync:QueryRecords",
    "cognito-sync:RegisterDevice",
    "cognito-sync:SetCognitoEvents",
    "cognito-sync:SetDatasetConfiguration",
    "cognito-sync:SetIdentityPoolConfiguration",
    "cognito-sync:SubscribeToDataset",
    "cognito-sync:UnsubscribeFromDataset",
    "cognito-sync:UpdateRecords",
    "comprehend:BatchDetectDominantLanguage",
    "comprehend:BatchDetectEntities",
    "comprehend:BatchDetectKeyPhrases",
    "comprehend:BatchDetectSentiment",
    "comprehend:BatchDetectSyntax",
    "comprehend:ClassifyDocument",
    "comprehend:CreateDocumentClassifier",
    "comprehend:CreateEndpoint",
    "comprehend:CreateEntityRecognizer",
    "comprehend:DeleteDocumentClassifier",
    "comprehend:DeleteEndpoint",
    "comprehend:DeleteEntityRecognizer",
    "comprehend:DescribeDocumentClassificationJob",
    "comprehend:DescribeDocumentClassifier",
    "comprehend:DescribeDominantLanguageDetectionJob",
    "comprehend:DescribeEndpoint",
    "comprehend:DescribeEntitiesDetectionJob",
    "comprehend:DescribeEntityRecognizer",
    "comprehend:DescribeEventsDetectionJob",
    "comprehend:DescribeKeyPhrasesDetectionJob",
    "comprehend:DescribePiiEntitiesDetectionJob",
    "comprehend:DescribeSentimentDetectionJob",
    "comprehend:DescribeTopicsDetectionJob",
    "comprehend:DetectDominantLanguage",
    "comprehend:DetectEntities",
    "comprehend:DetectKeyPhrases",
    "comprehend:DetectPiiEntities",
    "comprehend:DetectSentiment",
    "comprehend:DetectSyntax",
    "comprehend:ListDocumentClassificationJobs",
    "comprehend:ListDocumentClassifiers",
    "comprehend:ListDominantLanguageDetectionJobs",
    "comprehend:ListEndpoints",
    "comprehend:ListEntitiesDetectionJobs",
    "comprehend:ListEntityRecognizers",
    "comprehend:ListEventsDetectionJobs",
    "comprehend:ListKeyPhrasesDetectionJobs",
    "comprehend:ListPiiEntitiesDetectionJobs",
    "comprehend:ListSentimentDetectionJobs",
    "comprehend:ListTagsForResource",
    "comprehend:ListTopicsDetectionJobs",
    "comprehend:StartDocumentClassificationJob",
    "comprehend:StartDominantLanguageDetectionJob",
    "comprehend:StartEntitiesDetectionJob",
    "comprehend:StartEventsDetectionJob",
    "comprehend:StartKeyPhrasesDetectionJob",
    "comprehend:StartPiiEntitiesDetectionJob",
    "comprehend:StartSentimentDetectionJob",
    "comprehend:StartTopicsDetectionJob",
    "comprehend:StopDominantLanguageDetectionJob",
    "comprehend:StopEntitiesDetectionJob",
    "comprehend:StopEventsDetectionJob",
    "comprehend:StopKeyPhrasesDetectionJob",
    "comprehend:StopPiiEntitiesDetectionJob",
    "comprehend:StopSentimentDetectionJob",
    "comprehend:StopTrainingDocumentClassifier",
    "comprehend:StopTrainingEntityRecognizer",
    "comprehend:TagResource",
    "comprehend:UntagResource",
    "comprehend:UpdateEndpoint",
    "comprehendmedical:DetectEntities",
    "comprehendmedical:DetectPHI",
    "compute-optimizer:DescribeRecommendationExportJobs",
    "compute-optimizer:ExportAutoScalingGroupRecommendations",
    "compute-optimizer:ExportEC2InstanceRecommendations",
    "compute-optimizer:GetAutoScalingGroupRecommendations",
    "compute-optimizer:GetEC2InstanceRecommendations",
    "compute-optimizer:GetEC2RecommendationProjectedMetrics",
    "compute-optimizer:GetEnrollmentStatus",
    "compute-optimizer:GetRecommendationSummaries",
    "compute-optimizer:UpdateEnrollmentStatus",
    "config:BatchGetAggregateResourceConfig",
    "config:BatchGetResourceConfig",
    "config:DeleteAggregationAuthorization",
    "config:DeleteConfigRule",
    "config:DeleteConfigurationAggregator",
    "config:DeleteConfigurationRecorder",
    "config:DeleteConformancePack",
    "config:DeleteDeliveryChannel",
    "config:DeleteEvaluationResults",
    "config:DeleteOrganizationConfigRule",
    "config:DeleteOrganizationConformancePack",
    "config:DeletePendingAggregationRequest",
    "config:DeleteRemediationConfiguration",
    "config:DeleteRemediationExceptions",
    "config:DeleteResourceConfig",
    "config:DeleteRetentionConfiguration",
    "config:DeliverConfigSnapshot",
    "config:DescribeAggregateComplianceByConfigRules",
    "config:DescribeAggregationAuthorizations",
    "config:DescribeComplianceByConfigRule",
    "config:DescribeComplianceByResource",
    "config:DescribeConfigRuleEvaluationStatus",
    "config:DescribeConfigRules",
    "config:DescribeConfigurationAggregatorSourcesStatus",
    "config:DescribeConfigurationAggregators",
    "config:DescribeConfigurationRecorderStatus",
    "config:DescribeConfigurationRecorders",
    "config:DescribeConformancePackCompliance",
    "config:DescribeConformancePackStatus",
    "config:DescribeConformancePacks",
    "config:DescribeDeliveryChannelStatus",
    "config:DescribeDeliveryChannels",
    "config:DescribeOrganizationConfigRuleStatuses",
    "config:DescribeOrganizationConfigRules",
    "config:DescribeOrganizationConformancePackStatuses",
    "config:DescribeOrganizationConformancePacks",
    "config:DescribePendingAggregationRequests",
    "config:DescribeRemediationConfigurations",
    "config:DescribeRemediationExceptions",
    "config:DescribeRemediationExecutionStatus",
    "config:DescribeRetentionConfigurations",
    "config:GetAggregateComplianceDetailsByConfigRule",
    "config:GetAggregateConfigRuleComplianceSummary",
    "config:GetAggregateDiscoveredResourceCounts",
    "config:GetAggregateResourceConfig",
    "config:GetComplianceDetailsByConfigRule",
    "config:GetComplianceDetailsByResource",
    "config:GetComplianceSummaryByConfigRule",
    "config:GetComplianceSummaryByResourceType",
    "config:GetConformancePackComplianceDetails",
    "config:GetConformancePackComplianceSummary",
    "config:GetDiscoveredResourceCounts",
    "config:GetOrganizationConfigRuleDetailedStatus",
    "config:GetOrganizationConformancePackDetailedStatus",
    "config:GetResourceConfigHistory",
    "config:ListAggregateDiscoveredResources",
    "config:ListDiscoveredResources",
    "config:ListTagsForResource",
    "config:PutAggregationAuthorization",
    "config:PutConfigRule",
    "config:PutConfigurationAggregator",
    "config:PutConfigurationRecorder",
    "config:PutConformancePack",
    "config:PutDeliveryChannel",
    "config:PutEvaluations",
    "config:PutOrganizationConfigRule",
    "config:PutOrganizationConformancePack",
    "config:PutRemediationConfigurations",
    "config:PutRemediationExceptions",
    "config:PutResourceConfig",
    "config:PutRetentionConfiguration",
    "config:SelectAggregateResourceConfig",
    "config:SelectResourceConfig",
    "config:StartConfigRulesEvaluation",
    "config:StartConfigurationRecorder",
    "config:StartRemediationExecution",
    "config:StopConfigurationRecorder",
    "config:TagResource",
    "config:UntagResource",
    "connect:AssociateApprovedOrigin",
    "connect:AssociateInstanceStorageConfig",
    "connect:AssociateLambdaFunction",
    "connect:AssociateLexBot",
    "connect:AssociateRoutingProfileQueues",
    "connect:AssociateSecurityKey",
    "connect:CreateContactFlow",
    "connect:CreateInstance",
    "connect:CreateRoutingProfile",
    "connect:CreateUser",
    "connect:CreateUserHierarchyGroup",
    "connect:DeleteInstance",
    "connect:DeleteUser",
    "connect:DeleteUserHierarchyGroup",
    "connect:DescribeContactFlow",
    "connect:DescribeInstance",
    "connect:DescribeInstanceAttribute",
    "connect:DescribeInstanceStorageConfig",
    "connect:DescribeRoutingProfile",
    "connect:DescribeUser",
    "connect:DescribeUserHierarchyGroup",
    "connect:DescribeUserHierarchyStructure",
    "connect:DestroyInstance",
    "connect:DisassociateApprovedOrigin",
    "connect:DisassociateInstanceStorageConfig",
    "connect:DisassociateLambdaFunction",
    "connect:DisassociateLexBot",
    "connect:DisassociateRoutingProfileQueues",
    "connect:DisassociateSecurityKey",
    "connect:GetContactAttributes",
    "connect:GetCurrentMetricData",
    "connect:GetFederationToken",
    "connect:GetFederationTokens",
    "connect:GetMetricData",
    "connect:ListApprovedOrigins",
    "connect:ListContactFlows",
    "connect:ListHoursOfOperations",
    "connect:ListInstanceAttributes",
    "connect:ListInstanceStorageConfigs",
    "connect:ListInstances",
    "connect:ListLambdaFunctions",
    "connect:ListLexBots",
    "connect:ListPhoneNumbers",
    "connect:ListPrompts",
    "connect:ListQueues",
    "connect:ListRoutingProfileQueues",
    "connect:ListRoutingProfiles",
    "connect:ListSecurityKeys",
    "connect:ListSecurityProfiles",
    "connect:ListTagsForResource",
    "connect:ListUserHierarchyGroups",
    "connect:ListUsers",
    "connect:ModifyInstance",
    "connect:ResumeContactRecording",
    "connect:StartChatContact",
    "connect:StartContactRecording",
    "connect:StartOutboundVoiceContact",
    "connect:StopContact",
    "connect:StopContactRecording",
    "connect:SuspendContactRecording",
    "connect:TagResource",
    "connect:UntagResource",
    "connect:UpdateContactAttributes",
    "connect:UpdateContactFlowContent",
    "connect:UpdateContactFlowName",
    "connect:UpdateInstanceAttribute",
    "connect:UpdateInstanceStorageConfig",
    "connect:UpdateRoutingProfileConcurrency",
    "connect:UpdateRoutingProfileDefaultOutboundQueue",
    "connect:UpdateRoutingProfileName",
    "connect:UpdateRoutingProfileQueues",
    "connect:UpdateUserHierarchy",
    "connect:UpdateUserHierarchyGroupName",
    "connect:UpdateUserHierarchyStructure",
    "connect:UpdateUserIdentityInfo",
    "connect:UpdateUserPhoneConfig",
    "connect:UpdateUserRoutingProfile",
    "connect:UpdateUserSecurityProfiles",
    "cur:DeleteReportDefinition",
    "cur:DescribeReportDefinitions",
    "cur:ModifyReportDefinition",
    "cur:PutReportDefinition",
    "databrew:BatchDeleteRecipeVersion",
    "databrew:CreateDataset",
    "databrew:CreateProfileJob",
    "databrew:CreateProject",
    "databrew:CreateRecipe",
    "databrew:CreateRecipeJob",
    "databrew:CreateSchedule",
    "databrew:DeleteDataset",
    "databrew:DeleteJob",
    "databrew:DeleteProject",
    "databrew:DeleteRecipeVersion",
    "databrew:DeleteSchedule",
    "databrew:DescribeDataset",
    "databrew:DescribeJob",
    "databrew:DescribeProject",
    "databrew:DescribeRecipe",
    "databrew:DescribeSchedule",
    "databrew:ListDatasets",
    "databrew:ListJobRuns",
    "databrew:ListJobs",
    "databrew:ListProjects",
    "databrew:ListRecipeVersions",
    "databrew:ListRecipes",
    "databrew:ListSchedules",
    "databrew:ListTagsForResource",
    "databrew:PublishRecipe",
    "databrew:SendProjectSessionAction",
    "databrew:StartJobRun",
    "databrew:StartProjectSession",
    "databrew:StopJobRun",
    "databrew:TagResource",
    "databrew:UntagResource",
    "databrew:UpdateDataset",
    "databrew:UpdateProfileJob",
    "databrew:UpdateProject",
    "databrew:UpdateRecipe",
    "databrew:UpdateRecipeJob",
    "databrew:UpdateSchedule",
    "dataexchange:CancelJob",
    "dataexchange:CreateAsset",
    "dataexchange:CreateDataSet",
    "dataexchange:CreateJob",
    "dataexchange:CreateRevision",
    "dataexchange:DeleteAsset",
    "dataexchange:DeleteDataSet",
    "dataexchange:DeleteRevision",
    "dataexchange:GetAsset",
    "dataexchange:GetDataSet",
    "dataexchange:GetJob",
    "dataexchange:GetRevision",
    "dataexchange:ListDataSetRevisions",
    "dataexchange:ListDataSets",
    "dataexchange:ListJobs",
    "dataexchange:ListRevisionAssets",
    "dataexchange:ListTagsForResource",
    "dataexchange:StartJob",
    "dataexchange:TagResource",
    "dataexchange:UntagResource",
    "dataexchange:UpdateAsset",
    "dataexchange:UpdateDataSet",
    "dataexchange:UpdateRevision",
    "datapipeline:ActivatePipeline",
    "datapipeline:AddTags",
    "datapipeline:CreatePipeline",
    "datapipeline:DeactivatePipeline",
    "datapipeline:DeletePipeline",
    "datapipeline:DescribeObjects",
    "datapipeline:DescribePipelines",
    "datapipeline:EvaluateExpression",
    "datapipeline:GetAccountLimits",
    "datapipeline:GetPipelineDefinition",
    "datapipeline:ListPipelines",
    "datapipeline:PollForTask",
    "datapipeline:PutAccountLimits",
    "datapipeline:PutPipelineDefinition",
    "datapipeline:QueryObjects",
    "datapipeline:RemoveTags",
    "datapipeline:ReportTaskProgress",
    "datapipeline:ReportTaskRunnerHeartbeat",
    "datapipeline:SetStatus",
    "datapipeline:SetTaskStatus",
    "datapipeline:ValidatePipelineDefinition",
    "datasync:CancelTaskExecution",
    "datasync:CreateAgent",
    "datasync:CreateLocationEfs",
    "datasync:CreateLocationFsxWindows",
    "datasync:CreateLocationNfs",
    "datasync:CreateLocationObjectStorage",
    "datasync:CreateLocationS3",
    "datasync:CreateLocationSmb",
    "datasync:CreateTask",
    "datasync:DeleteAgent",
    "datasync:DeleteLocation",
    "datasync:DeleteTask",
    "datasync:DescribeAgent",
    "datasync:DescribeLocationEfs",
    "datasync:DescribeLocationFsxWindows",
    "datasync:DescribeLocationNfs",
    "datasync:DescribeLocationObjectStorage",
    "datasync:DescribeLocationS3",
    "datasync:DescribeLocationSmb",
    "datasync:DescribeTask",
    "datasync:DescribeTaskExecution",
    "datasync:ListAgents",
    "datasync:ListLocations",
    "datasync:ListTagsForResource",
    "datasync:ListTaskExecutions",
    "datasync:ListTasks",
    "datasync:StartTaskExecution",
    "datasync:TagResource",
    "datasync:UntagResource",
    "datasync:UpdateAgent",
    "datasync:UpdateTask",
    "dax:BatchGetItem",
    "dax:BatchWriteItem",
    "dax:ConditionCheckItem",
    "dax:CreateCluster",
    "dax:CreateParameterGroup",
    "dax:CreateSubnetGroup",
    "dax:DecreaseReplicationFactor",
    "dax:DeleteCluster",
    "dax:DeleteItem",
    "dax:DeleteParameterGroup",
    "dax:DeleteSubnetGroup",
    "dax:DescribeClusters",
    "dax:DescribeDefaultParameters",
    "dax:DescribeEvents",
    "dax:DescribeParameterGroups",
    "dax:DescribeParameters",
    "dax:DescribeSubnetGroups",
    "dax:GetItem",
    "dax:IncreaseReplicationFactor",
    "dax:ListTags",
    "dax:PutItem",
    "dax:Query",
    "dax:RebootNode",
    "dax:Scan",
    "dax:TagResource",
    "dax:UntagResource",
    "dax:UpdateCluster",
    "dax:UpdateItem",
    "dax:UpdateParameterGroup",
    "dax:UpdateSubnetGroup",
    "dbqms:CreateFavoriteQuery",
    "dbqms:CreateQueryHistory",
    "dbqms:DeleteFavoriteQueries",
    "dbqms:DeleteQueryHistory",
    "dbqms:DescribeFavoriteQueries",
    "dbqms:DescribeQueryHistory",
    "dbqms:GetQueryString",
    "dbqms:UpdateFavoriteQuery",
    "dbqms:UpdateQueryHistory",
    "deepcomposer:AssociateCoupon",
    "deepcomposer:CreateAudio",
    "deepcomposer:CreateComposition",
    "deepcomposer:CreateModel",
    "deepcomposer:DeleteComposition",
    "deepcomposer:DeleteModel",
    "deepcomposer:GetComposition",
    "deepcomposer:GetModel",
    "deepcomposer:GetSampleModel",
    "deepcomposer:ListCompositions",
    "deepcomposer:ListModels",
    "deepcomposer:ListSampleModels",
    "deepcomposer:ListTagsForResource",
    "deepcomposer:ListTrainingTopics",
    "deepcomposer:TagResource",
    "deepcomposer:UntagResource",
    "deepcomposer:UpdateComposition",
    "deepcomposer:UpdateModel",
    "deeplens:AssociateServiceRoleToAccount",
    "deeplens:BatchGetDevice",
    "deeplens:BatchGetModel",
    "deeplens:BatchGetProject",
    "deeplens:CreateDeviceCertificates",
    "deeplens:CreateModel",
    "deeplens:CreateProject",
    "deeplens:DeleteModel",
    "deeplens:DeleteProject",
    "deeplens:DeployProject",
    "deeplens:DeregisterDevice",
    "deeplens:GetAssociatedResources",
    "deeplens:GetDeploymentStatus",
    "deeplens:GetDevice",
    "deeplens:GetModel",
    "deeplens:GetProject",
    "deeplens:ImportProjectFromTemplate",
    "deeplens:ListDeployments",
    "deeplens:ListDevices",
    "deeplens:ListModels",
    "deeplens:ListProjects",
    "deeplens:RegisterDevice",
    "deeplens:RemoveProject",
    "deeplens:UpdateProject",
    "deepracer:CloneReinforcementLearningModel",
    "deepracer:CreateAccountResources",
    "deepracer:CreateLeaderboardSubmission",
    "deepracer:CreateReinforcementLearningModel",
    "deepracer:DeleteAccountResources",
    "deepracer:DeleteModel",
    "deepracer:GetAccountResources",
    "deepracer:GetAlias",
    "deepracer:GetEvaluation",
    "deepracer:GetLatestUserSubmission",
    "deepracer:GetLeaderboard",
    "deepracer:GetModel",
    "deepracer:GetRankedUserSubmission",
    "deepracer:GetTrack",
    "deepracer:GetTrainingJob",
    "deepracer:ListEvaluations",
    "deepracer:ListLeaderboardSubmissions",
    "deepracer:ListLeaderboards",
    "deepracer:ListModels",
    "deepracer:ListTracks",
    "deepracer:ListTrainingJobs",
    "deepracer:SetAlias",
    "deepracer:StartEvaluation",
    "deepracer:StopEvaluation",
    "deepracer:StopTrainingReinforcementLearningModel",
    "deepracer:TestRewardFunction",
    "detective:AcceptInvitation",
    "detective:CreateGraph",
    "detective:CreateMembers",
    "detective:DeleteGraph",
    "detective:DeleteMembers",
    "detective:DisassociateMembership",
    "detective:GetFreeTrialEligibility",
    "detective:GetGraphIngestState",
    "detective:GetMembers",
    "detective:GetPricingInformation",
    "detective:GetUsageInformation",
    "detective:ListGraphs",
    "detective:ListInvitations",
    "detective:ListMembers",
    "detective:RejectInvitation",
    "detective:SearchGraph",
    "detective:StartMonitoringMember",
    "devicefarm:CreateDevicePool",
    "devicefarm:CreateInstanceProfile",
    "devicefarm:CreateNetworkProfile",
    "devicefarm:CreateProject",
    "devicefarm:CreateRemoteAccessSession",
    "devicefarm:CreateTestGridProject",
    "devicefarm:CreateTestGridUrl",
    "devicefarm:CreateUpload",
    "devicefarm:CreateVPCEConfiguration",
    "devicefarm:DeleteDevicePool",
    "devicefarm:DeleteInstanceProfile",
    "devicefarm:DeleteNetworkProfile",
    "devicefarm:DeleteProject",
    "devicefarm:DeleteRemoteAccessSession",
    "devicefarm:DeleteRun",
    "devicefarm:DeleteTestGridProject",
    "devicefarm:DeleteUpload",
    "devicefarm:DeleteVPCEConfiguration",
    "devicefarm:GetAccountSettings",
    "devicefarm:GetDevice",
    "devicefarm:GetDeviceInstance",
    "devicefarm:GetDevicePool",
    "devicefarm:GetDevicePoolCompatibility",
    "devicefarm:GetInstanceProfile",
    "devicefarm:GetJob",
    "devicefarm:GetNetworkProfile",
    "devicefarm:GetOfferingStatus",
    "devicefarm:GetProject",
    "devicefarm:GetRemoteAccessSession",
    "devicefarm:GetRun",
    "devicefarm:GetSuite",
    "devicefarm:GetTest",
    "devicefarm:GetTestGridProject",
    "devicefarm:GetTestGridSession",
    "devicefarm:GetUpload",
    "devicefarm:GetVPCEConfiguration",
    "devicefarm:InstallToRemoteAccessSession",
    "devicefarm:ListArtifacts",
    "devicefarm:ListDeviceInstances",
    "devicefarm:ListDevicePools",
    "devicefarm:ListDevices",
    "devicefarm:ListInstanceProfiles",
    "devicefarm:ListJobs",
    "devicefarm:ListNetworkProfiles",
    "devicefarm:ListOfferingPromotions",
    "devicefarm:ListOfferingTransactions",
    "devicefarm:ListOfferings",
    "devicefarm:ListProjects",
    "devicefarm:ListRemoteAccessSessions",
    "devicefarm:ListRuns",
    "devicefarm:ListSamples",
    "devicefarm:ListSuites",
    "devicefarm:ListTagsForResource",
    "devicefarm:ListTestGridProjects",
    "devicefarm:ListTestGridSessionActions",
    "devicefarm:ListTestGridSessionArtifacts",
    "devicefarm:ListTestGridSessions",
    "devicefarm:ListTests",
    "devicefarm:ListUniqueProblems",
    "devicefarm:ListUploads",
    "devicefarm:ListVPCEConfigurations",
    "devicefarm:PurchaseOffering",
    "devicefarm:RenewOffering",
    "devicefarm:ScheduleRun",
    "devicefarm:StopJob",
    "devicefarm:StopRemoteAccessSession",
    "devicefarm:StopRun",
    "devicefarm:TagResource",
    "devicefarm:UntagResource",
    "devicefarm:UpdateDeviceInstance",
    "devicefarm:UpdateDevicePool",
    "devicefarm:UpdateInstanceProfile",
    "devicefarm:UpdateNetworkProfile",
    "devicefarm:UpdateProject",
    "devicefarm:UpdateTestGridProject",
    "devicefarm:UpdateUpload",
    "devicefarm:UpdateVPCEConfiguration",
    "directconnect:AcceptDirectConnectGatewayAssociationProposal",
    "directconnect:AllocateConnectionOnInterconnect",
    "directconnect:AllocateHostedConnection",
    "directconnect:AllocatePrivateVirtualInterface",
    "directconnect:AllocatePublicVirtualInterface",
    "directconnect:AllocateTransitVirtualInterface",
    "directconnect:AssociateConnectionWithLag",
    "directconnect:AssociateHostedConnection",
    "directconnect:AssociateVirtualInterface",
    "directconnect:ConfirmConnection",
    "directconnect:ConfirmPrivateVirtualInterface",
    "directconnect:ConfirmPublicVirtualInterface",
    "directconnect:ConfirmTransitVirtualInterface",
    "directconnect:CreateBGPPeer",
    "directconnect:CreateConnection",
    "directconnect:CreateDirectConnectGateway",
    "directconnect:CreateDirectConnectGatewayAssociation",
    "directconnect:CreateDirectConnectGatewayAssociationProposal",
    "directconnect:CreateInterconnect",
    "directconnect:CreateLag",
    "directconnect:CreatePrivateVirtualInterface",
    "directconnect:CreatePublicVirtualInterface",
    "directconnect:CreateTransitVirtualInterface",
    "directconnect:DeleteBGPPeer",
    "directconnect:DeleteConnection",
    "directconnect:DeleteDirectConnectGateway",
    "directconnect:DeleteDirectConnectGatewayAssociation",
    "directconnect:DeleteDirectConnectGatewayAssociationProposal",
    "directconnect:DeleteInterconnect",
    "directconnect:DeleteLag",
    "directconnect:DeleteVirtualInterface",
    "directconnect:DescribeConnectionLoa",
    "directconnect:DescribeConnections",
    "directconnect:DescribeConnectionsOnInterconnect",
    "directconnect:DescribeDirectConnectGatewayAssociationProposals",
    "directconnect:DescribeDirectConnectGatewayAssociations",
    "directconnect:DescribeDirectConnectGatewayAttachments",
    "directconnect:DescribeDirectConnectGateways",
    "directconnect:DescribeHostedConnections",
    "directconnect:DescribeInterconnectLoa",
    "directconnect:DescribeInterconnects",
    "directconnect:DescribeLags",
    "directconnect:DescribeLoa",
    "directconnect:DescribeLocations",
    "directconnect:DescribeTags",
    "directconnect:DescribeVirtualGateways",
    "directconnect:DescribeVirtualInterfaces",
    "directconnect:DisassociateConnectionFromLag",
    "directconnect:ListVirtualInterfaceTestHistory",
    "directconnect:StartBgpFailoverTest",
    "directconnect:StopBgpFailoverTest",
    "directconnect:TagResource",
    "directconnect:UntagResource",
    "directconnect:UpdateDirectConnectGatewayAssociation",
    "directconnect:UpdateLag",
    "directconnect:UpdateVirtualInterfaceAttributes",
    "discovery:AssociateConfigurationItemsToApplication",
    "discovery:BatchDeleteImportData",
    "discovery:CreateApplication",
    "discovery:CreateTags",
    "discovery:DeleteApplications",
    "discovery:DeleteTags",
    "discovery:DescribeAgents",
    "discovery:DescribeConfigurations",
    "discovery:DescribeContinuousExports",
    "discovery:DescribeExportConfigurations",
    "discovery:DescribeExportTasks",
    "discovery:DescribeImportTasks",
    "discovery:DescribeTags",
    "discovery:DisassociateConfigurationItemsFromApplication",
    "discovery:ExportConfigurations",
    "discovery:GetDiscoverySummary",
    "discovery:ListConfigurations",
    "discovery:ListServerNeighbors",
    "discovery:StartContinuousExport",
    "discovery:StartDataCollectionByAgentIds",
    "discovery:StartExportTask",
    "discovery:StartImportTask",
    "discovery:StopContinuousExport",
    "discovery:StopDataCollectionByAgentIds",
    "discovery:UpdateApplication",
    "dlm:CreateLifecyclePolicy",
    "dlm:DeleteLifecyclePolicy",
    "dlm:GetLifecyclePolicies",
    "dlm:GetLifecyclePolicy",
    "dlm:ListTagsForResource",
    "dlm:TagResource",
    "dlm:UntagResource",
    "dlm:UpdateLifecyclePolicy",
    "dms:AddTagsToResource",
    "dms:ApplyPendingMaintenanceAction",
    "dms:CreateEndpoint",
    "dms:CreateEventSubscription",
    "dms:CreateReplicationInstance",
    "dms:CreateReplicationSubnetGroup",
    "dms:CreateReplicationTask",
    "dms:DeleteCertificate",
    "dms:DeleteEndpoint",
    "dms:DeleteEventSubscription",
    "dms:DeleteReplicationInstance",
    "dms:DeleteReplicationSubnetGroup",
    "dms:DeleteReplicationTask",
    "dms:DescribeAccountAttributes",
    "dms:DescribeCertificates",
    "dms:DescribeConnections",
    "dms:DescribeEndpointTypes",
    "dms:DescribeEndpoints",
    "dms:DescribeEventCategories",
    "dms:DescribeEventSubscriptions",
    "dms:DescribeEvents",
    "dms:DescribeOrderableReplicationInstances",
    "dms:DescribeRefreshSchemasStatus",
    "dms:DescribeReplicationInstanceTaskLogs",
    "dms:DescribeReplicationInstances",
    "dms:DescribeReplicationSubnetGroups",
    "dms:DescribeReplicationTaskAssessmentResults",
    "dms:DescribeReplicationTasks",
    "dms:DescribeSchemas",
    "dms:DescribeTableStatistics",
    "dms:ImportCertificate",
    "dms:ListTagsForResource",
    "dms:ModifyEndpoint",
    "dms:ModifyEventSubscription",
    "dms:ModifyReplicationInstance",
    "dms:ModifyReplicationSubnetGroup",
    "dms:ModifyReplicationTask",
    "dms:RebootReplicationInstance",
    "dms:RefreshSchemas",
    "dms:ReloadTables",
    "dms:RemoveTagsFromResource",
    "dms:StartReplicationTask",
    "dms:StartReplicationTaskAssessment",
    "dms:StopReplicationTask",
    "dms:TestConnection",
    "ds:AcceptSharedDirectory",
    "ds:AddIpRoutes",
    "ds:AddTagsToResource",
    "ds:AuthorizeApplication",
    "ds:CancelSchemaExtension",
    "ds:CheckAlias",
    "ds:ConnectDirectory",
    "ds:CreateAlias",
    "ds:CreateComputer",
    "ds:CreateConditionalForwarder",
    "ds:CreateDirectory",
    "ds:CreateIdentityPoolDirectory",
    "ds:CreateLogSubscription",
    "ds:CreateMicrosoftAD",
    "ds:CreateSnapshot",
    "ds:CreateTrust",
    "ds:DeleteConditionalForwarder",
    "ds:DeleteDirectory",
    "ds:DeleteLogSubscription",
    "ds:DeleteSnapshot",
    "ds:DeleteTrust",
    "ds:DeregisterCertificate",
    "ds:DeregisterEventTopic",
    "ds:DescribeCertificate",
    "ds:DescribeConditionalForwarders",
    "ds:DescribeDirectories",
    "ds:DescribeDomainControllers",
    "ds:DescribeEventTopics",
    "ds:DescribeLDAPSSettings",
    "ds:DescribeSharedDirectories",
    "ds:DescribeSnapshots",
    "ds:DescribeTrusts",
    "ds:DisableLDAPS",
    "ds:DisableRadius",
    "ds:DisableSso",
    "ds:EnableLDAPS",
    "ds:EnableRadius",
    "ds:EnableSso",
    "ds:GetAuthorizedApplicationDetails",
    "ds:GetDirectoryLimits",
    "ds:GetSnapshotLimits",
    "ds:ListAuthorizedApplications",
    "ds:ListCertificates",
    "ds:ListIpRoutes",
    "ds:ListLogSubscriptions",
    "ds:ListSchemaExtensions",
    "ds:ListTagsForResource",
    "ds:RegisterCertificate",
    "ds:RegisterEventTopic",
    "ds:RejectSharedDirectory",
    "ds:RemoveIpRoutes",
    "ds:RemoveTagsFromResource",
    "ds:ResetUserPassword",
    "ds:RestoreFromSnapshot",
    "ds:ShareDirectory",
    "ds:StartSchemaExtension",
    "ds:UnauthorizeApplication",
    "ds:UnshareDirectory",
    "ds:UpdateConditionalForwarder",
    "ds:UpdateNumberOfDomainControllers",
    "ds:UpdateRadius",
    "ds:UpdateTrust",
    "ds:VerifyTrust",
    "dynamodb:BatchGetItem",
    "dynamodb:BatchWriteItem",
    "dynamodb:ConditionCheckItem",
    "dynamodb:CreateBackup",
    "dynamodb:CreateGlobalTable",
    "dynamodb:CreateTable",
    "dynamodb:CreateTableReplica",
    "dynamodb:DeleteBackup",
    "dynamodb:DeleteItem",
    "dynamodb:DeleteTable",
    "dynamodb:DeleteTableReplica",
    "dynamodb:DescribeBackup",
    "dynamodb:DescribeContinuousBackups",
    "dynamodb:DescribeContributorInsights",
    "dynamodb:DescribeExport",
    "dynamodb:DescribeGlobalTable",
    "dynamodb:DescribeGlobalTableSettings",
    "dynamodb:DescribeLimits",
    "dynamodb:DescribeReservedCapacity",
    "dynamodb:DescribeReservedCapacityOfferings",
    "dynamodb:DescribeStream",
    "dynamodb:DescribeTable",
    "dynamodb:DescribeTableReplicaAutoScaling",
    "dynamodb:DescribeTimeToLive",
    "dynamodb:ExportTableToPointInTime",
    "dynamodb:GetItem",
    "dynamodb:GetRecords",
    "dynamodb:GetShardIterator",
    "dynamodb:ListBackups",
    "dynamodb:ListContributorInsights",
    "dynamodb:ListExports",
    "dynamodb:ListGlobalTables",
    "dynamodb:ListStreams",
    "dynamodb:ListTables",
    "dynamodb:ListTagsOfResource",
    "dynamodb:PartiQLDelete",
    "dynamodb:PartiQLInsert",
    "dynamodb:PartiQLSelect",
    "dynamodb:PartiQLUpdate",
    "dynamodb:PurchaseReservedCapacityOfferings",
    "dynamodb:PutItem",
    "dynamodb:Query",
    "dynamodb:RestoreTableFromBackup",
    "dynamodb:RestoreTableToPointInTime",
    "dynamodb:Scan",
    "dynamodb:TagResource",
    "dynamodb:UntagResource",
    "dynamodb:UpdateContinuousBackups",
    "dynamodb:UpdateContributorInsights",
    "dynamodb:UpdateGlobalTable",
    "dynamodb:UpdateGlobalTableSettings",
    "dynamodb:UpdateItem",
    "dynamodb:UpdateTable",
    "dynamodb:UpdateTableReplicaAutoScaling",
    "dynamodb:UpdateTimeToLive",
    "ebs:CompleteSnapshot",
    "ebs:GetSnapshotBlock",
    "ebs:ListChangedBlocks",
    "ebs:ListSnapshotBlocks",
    "ebs:PutSnapshotBlock",
    "ebs:StartSnapshot",
    "ec2-instance-connect:SendSSHPublicKey",
    "ec2:AcceptReservedInstancesExchangeQuote",
    "ec2:AcceptTransitGatewayPeeringAttachment",
    "ec2:AcceptTransitGatewayVpcAttachment",
    "ec2:AcceptVpcEndpointConnections",
    "ec2:AcceptVpcPeeringConnection",
    "ec2:AdvertiseByoipCidr",
    "ec2:AllocateAddress",
    "ec2:AllocateHosts",
    "ec2:ApplySecurityGroupsToClientVpnTargetNetwork",
    "ec2:AssignIpv6Addresses",
    "ec2:AssignPrivateIpAddresses",
    "ec2:AssociateAddress",
    "ec2:AssociateClientVpnTargetNetwork",
    "ec2:AssociateDhcpOptions",
    "ec2:AssociateEnclaveCertificateIamRole",
    "ec2:AssociateIamInstanceProfile",
    "ec2:AssociateRouteTable",
    "ec2:AssociateSubnetCidrBlock",
    "ec2:AssociateTransitGatewayMulticastDomain",
    "ec2:AssociateTransitGatewayRouteTable",
    "ec2:AssociateVpcCidrBlock",
    "ec2:AttachClassicLinkVpc",
    "ec2:AttachInternetGateway",
    "ec2:AttachNetworkInterface",
    "ec2:AttachVolume",
    "ec2:AttachVpnGateway",
    "ec2:AuthorizeClientVpnIngress",
    "ec2:AuthorizeSecurityGroupEgress",
    "ec2:AuthorizeSecurityGroupIngress",
    "ec2:BundleInstance",
    "ec2:CancelBundleTask",
    "ec2:CancelCapacityReservation",
    "ec2:CancelConversionTask",
    "ec2:CancelExportTask",
    "ec2:CancelImportTask",
    "ec2:CancelReservedInstancesListing",
    "ec2:CancelSpotFleetRequests",
    "ec2:CancelSpotInstanceRequests",
    "ec2:ConfirmProductInstance",
    "ec2:CopyFpgaImage",
    "ec2:CopyImage",
    "ec2:CopySnapshot",
    "ec2:CreateCapacityReservation",
    "ec2:CreateCarrierGateway",
    "ec2:CreateClientVpnEndpoint",
    "ec2:CreateClientVpnRoute",
    "ec2:CreateCustomerGateway",
    "ec2:CreateDefaultSubnet",
    "ec2:CreateDefaultVpc",
    "ec2:CreateDhcpOptions",
    "ec2:CreateEgressOnlyInternetGateway",
    "ec2:CreateFleet",
    "ec2:CreateFlowLogs",
    "ec2:CreateFpgaImage",
    "ec2:CreateImage",
    "ec2:CreateInstanceExportTask",
    "ec2:CreateInternetGateway",
    "ec2:CreateKeyPair",
    "ec2:CreateLaunchTemplate",
    "ec2:CreateLaunchTemplateVersion",
    "ec2:CreateLocalGatewayRoute",
    "ec2:CreateLocalGatewayRouteTableVpcAssociation",
    "ec2:CreateManagedPrefixList",
    "ec2:CreateNatGateway",
    "ec2:CreateNetworkAcl",
    "ec2:CreateNetworkAclEntry",
    "ec2:CreateNetworkInterface",
    "ec2:CreateNetworkInterfacePermission",
    "ec2:CreatePlacementGroup",
    "ec2:CreateReservedInstancesListing",
    "ec2:CreateRoute",
    "ec2:CreateRouteTable",
    "ec2:CreateSecurityGroup",
    "ec2:CreateSnapshot",
    "ec2:CreateSnapshots",
    "ec2:CreateSpotDatafeedSubscription",
    "ec2:CreateSubnet",
    "ec2:CreateTags",
    "ec2:CreateTrafficMirrorFilter",
    "ec2:CreateTrafficMirrorFilterRule",
    "ec2:CreateTrafficMirrorSession",
    "ec2:CreateTrafficMirrorTarget",
    "ec2:CreateTransitGateway",
    "ec2:CreateTransitGatewayMulticastDomain",
    "ec2:CreateTransitGatewayPeeringAttachment",
    "ec2:CreateTransitGatewayPrefixListReference",
    "ec2:CreateTransitGatewayRoute",
    "ec2:CreateTransitGatewayRouteTable",
    "ec2:CreateTransitGatewayVpcAttachment",
    "ec2:CreateVolume",
    "ec2:CreateVpc",
    "ec2:CreateVpcEndpoint",
    "ec2:CreateVpcEndpointConnectionNotification",
    "ec2:CreateVpcEndpointServiceConfiguration",
    "ec2:CreateVpcPeeringConnection",
    "ec2:CreateVpnConnection",
    "ec2:CreateVpnConnectionRoute",
    "ec2:CreateVpnGateway",
    "ec2:DeleteCarrierGateway",
    "ec2:DeleteClientVpnEndpoint",
    "ec2:DeleteClientVpnRoute",
    "ec2:DeleteCustomerGateway",
    "ec2:DeleteDhcpOptions",
    "ec2:DeleteEgressOnlyInternetGateway",
    "ec2:DeleteFleets",
    "ec2:DeleteFlowLogs",
    "ec2:DeleteFpgaImage",
    "ec2:DeleteInternetGateway",
    "ec2:DeleteKeyPair",
    "ec2:DeleteLaunchTemplate",
    "ec2:DeleteLaunchTemplateVersions",
    "ec2:DeleteLocalGatewayRoute",
    "ec2:DeleteLocalGatewayRouteTableVpcAssociation",
    "ec2:DeleteManagedPrefixList",
    "ec2:DeleteNatGateway",
    "ec2:DeleteNetworkAcl",
    "ec2:DeleteNetworkAclEntry",
    "ec2:DeleteNetworkInterface",
    "ec2:DeleteNetworkInterfacePermission",
    "ec2:DeletePlacementGroup",
    "ec2:DeleteRoute",
    "ec2:DeleteRouteTable",
    "ec2:DeleteSecurityGroup",
    "ec2:DeleteSnapshot",
    "ec2:DeleteSpotDatafeedSubscription",
    "ec2:DeleteSubnet",
    "ec2:DeleteTags",
    "ec2:DeleteTrafficMirrorFilter",
    "ec2:DeleteTrafficMirrorFilterRule",
    "ec2:DeleteTrafficMirrorSession",
    "ec2:DeleteTrafficMirrorTarget",
    "ec2:DeleteTransitGateway",
    "ec2:DeleteTransitGatewayMulticastDomain",
    "ec2:DeleteTransitGatewayPeeringAttachment",
    "ec2:DeleteTransitGatewayPrefixListReference",
    "ec2:DeleteTransitGatewayRoute",
    "ec2:DeleteTransitGatewayRouteTable",
    "ec2:DeleteTransitGatewayVpcAttachment",
    "ec2:DeleteVolume",
    "ec2:DeleteVpc",
    "ec2:DeleteVpcEndpointConnectionNotifications",
    "ec2:DeleteVpcEndpointServiceConfigurations",
    "ec2:DeleteVpcEndpoints",
    "ec2:DeleteVpcPeeringConnection",
    "ec2:DeleteVpnConnection",
    "ec2:DeleteVpnConnectionRoute",
    "ec2:DeleteVpnGateway",
    "ec2:DeprovisionByoipCidr",
    "ec2:DeregisterImage",
    "ec2:DeregisterInstanceEventNotificationAttributes",
    "ec2:DeregisterTransitGatewayMulticastGroupMembers",
    "ec2:DeregisterTransitGatewayMulticastGroupSources",
    "ec2:DescribeAccountAttributes",
    "ec2:DescribeAddresses",
    "ec2:DescribeAggregateIdFormat",
    "ec2:DescribeAvailabilityZones",
    "ec2:DescribeBundleTasks",
    "ec2:DescribeByoipCidrs",
    "ec2:DescribeCapacityReservations",
    "ec2:DescribeCarrierGateways",
    "ec2:DescribeClassicLinkInstances",
    "ec2:DescribeClientVpnAuthorizationRules",
    "ec2:DescribeClientVpnConnections",
    "ec2:DescribeClientVpnEndpoints",
    "ec2:DescribeClientVpnRoutes",
    "ec2:DescribeClientVpnTargetNetworks",
    "ec2:DescribeCoipPools",
    "ec2:DescribeConversionTasks",
    "ec2:DescribeCustomerGateways",
    "ec2:DescribeDhcpOptions",
    "ec2:DescribeEgressOnlyInternetGateways",
    "ec2:DescribeElasticGpus",
    "ec2:DescribeExportImageTasks",
    "ec2:DescribeExportTasks",
    "ec2:DescribeFastSnapshotRestores",
    "ec2:DescribeFleetHistory",
    "ec2:DescribeFleetInstances",
    "ec2:DescribeFleets",
    "ec2:DescribeFlowLogs",
    "ec2:DescribeFpgaImageAttribute",
    "ec2:DescribeFpgaImages",
    "ec2:DescribeHostReservationOfferings",
    "ec2:DescribeHostReservations",
    "ec2:DescribeHosts",
    "ec2:DescribeIamInstanceProfileAssociations",
    "ec2:DescribeIdFormat",
    "ec2:DescribeIdentityIdFormat",
    "ec2:DescribeImageAttribute",
    "ec2:DescribeImages",
    "ec2:DescribeImportImageTasks",
    "ec2:DescribeImportSnapshotTasks",
    "ec2:DescribeInstanceAttribute",
    "ec2:DescribeInstanceCreditSpecifications",
    "ec2:DescribeInstanceEventNotificationAttributes",
    "ec2:DescribeInstanceStatus",
    "ec2:DescribeInstanceTypeOfferings",
    "ec2:DescribeInstanceTypes",
    "ec2:DescribeInstances",
    "ec2:DescribeInternetGateways",
    "ec2:DescribeKeyPairs",
    "ec2:DescribeLaunchTemplateVersions",
    "ec2:DescribeLaunchTemplates",
    "ec2:DescribeLocalGatewayRouteTableVirtualInterfaceGroupAssociations",
    "ec2:DescribeLocalGatewayRouteTableVpcAssociations",
    "ec2:DescribeLocalGatewayRouteTables",
    "ec2:DescribeLocalGatewayVirtualInterfaceGroups",
    "ec2:DescribeLocalGatewayVirtualInterfaces",
    "ec2:DescribeLocalGateways",
    "ec2:DescribeManagedPrefixLists",
    "ec2:DescribeMovingAddresses",
    "ec2:DescribeNatGateways",
    "ec2:DescribeNetworkAcls",
    "ec2:DescribeNetworkInterfaceAttribute",
    "ec2:DescribeNetworkInterfacePermissions",
    "ec2:DescribeNetworkInterfaces",
    "ec2:DescribePlacementGroups",
    "ec2:DescribePrefixLists",
    "ec2:DescribePrincipalIdFormat",
    "ec2:DescribePublicIpv4Pools",
    "ec2:DescribeRegions",
    "ec2:DescribeReservedInstances",
    "ec2:DescribeReservedInstancesListings",
    "ec2:DescribeReservedInstancesModifications",
    "ec2:DescribeReservedInstancesOfferings",
    "ec2:DescribeRouteTables",
    "ec2:DescribeScheduledInstanceAvailability",
    "ec2:DescribeScheduledInstances",
    "ec2:DescribeSecurityGroupReferences",
    "ec2:DescribeSecurityGroups",
    "ec2:DescribeSnapshotAttribute",
    "ec2:DescribeSnapshots",
    "ec2:DescribeSpotDatafeedSubscription",
    "ec2:DescribeSpotFleetInstances",
    "ec2:DescribeSpotFleetRequestHistory",
    "ec2:DescribeSpotFleetRequests",
    "ec2:DescribeSpotInstanceRequests",
    "ec2:DescribeSpotPriceHistory",
    "ec2:DescribeStaleSecurityGroups",
    "ec2:DescribeSubnets",
    "ec2:DescribeTags",
    "ec2:DescribeTrafficMirrorFilters",
    "ec2:DescribeTrafficMirrorSessions",
    "ec2:DescribeTrafficMirrorTargets",
    "ec2:DescribeTransitGatewayAttachments",
    "ec2:DescribeTransitGatewayMulticastDomains",
    "ec2:DescribeTransitGatewayPeeringAttachments",
    "ec2:DescribeTransitGatewayRouteTables",
    "ec2:DescribeTransitGatewayVpcAttachments",
    "ec2:DescribeTransitGateways",
    "ec2:DescribeVolumeAttribute",
    "ec2:DescribeVolumeStatus",
    "ec2:DescribeVolumes",
    "ec2:DescribeVolumesModifications",
    "ec2:DescribeVpcAttribute",
    "ec2:DescribeVpcClassicLink",
    "ec2:DescribeVpcClassicLinkDnsSupport",
    "ec2:DescribeVpcEndpointConnectionNotifications",
    "ec2:DescribeVpcEndpointConnections",
    "ec2:DescribeVpcEndpointServiceConfigurations",
    "ec2:DescribeVpcEndpointServicePermissions",
    "ec2:DescribeVpcEndpointServices",
    "ec2:DescribeVpcEndpoints",
    "ec2:DescribeVpcPeeringConnections",
    "ec2:DescribeVpcs",
    "ec2:DescribeVpnConnections",
    "ec2:DescribeVpnGateways",
    "ec2:DetachClassicLinkVpc",
    "ec2:DetachInternetGateway",
    "ec2:DetachNetworkInterface",
    "ec2:DetachVolume",
    "ec2:DetachVpnGateway",
    "ec2:DisableEbsEncryptionByDefault",
    "ec2:DisableFastSnapshotRestores",
    "ec2:DisableTransitGatewayRouteTablePropagation",
    "ec2:DisableVgwRoutePropagation",
    "ec2:DisableVpcClassicLink",
    "ec2:DisableVpcClassicLinkDnsSupport",
    "ec2:DisassociateAddress",
    "ec2:DisassociateClientVpnTargetNetwork",
    "ec2:DisassociateEnclaveCertificateIamRole",
    "ec2:DisassociateIamInstanceProfile",
    "ec2:DisassociateRouteTable",
    "ec2:DisassociateSubnetCidrBlock",
    "ec2:DisassociateTransitGatewayMulticastDomain",
    "ec2:DisassociateTransitGatewayRouteTable",
    "ec2:DisassociateVpcCidrBlock",
    "ec2:EnableEbsEncryptionByDefault",
    "ec2:EnableFastSnapshotRestores",
    "ec2:EnableTransitGatewayRouteTablePropagation",
    "ec2:EnableVgwRoutePropagation",
    "ec2:EnableVolumeIO",
    "ec2:EnableVpcClassicLink",
    "ec2:EnableVpcClassicLinkDnsSupport",
    "ec2:ExportClientVpnClientCertificateRevocationList",
    "ec2:ExportClientVpnClientConfiguration",
    "ec2:ExportImage",
    "ec2:ExportTransitGatewayRoutes",
    "ec2:GetAssociatedEnclaveCertificateIamRoles",
    "ec2:GetCapacityReservationUsage",
    "ec2:GetCoipPoolUsage",
    "ec2:GetConsoleOutput",
    "ec2:GetConsoleScreenshot",
    "ec2:GetDefaultCreditSpecification",
    "ec2:GetEbsDefaultKmsKeyId",
    "ec2:GetEbsEncryptionByDefault",
    "ec2:GetHostReservationPurchasePreview",
    "ec2:GetLaunchTemplateData",
    "ec2:GetManagedPrefixListAssociations",
    "ec2:GetManagedPrefixListEntries",
    "ec2:GetPasswordData",
    "ec2:GetReservedInstancesExchangeQuote",
    "ec2:GetTransitGatewayAttachmentPropagations",
    "ec2:GetTransitGatewayMulticastDomainAssociations",
    "ec2:GetTransitGatewayPrefixListReferences",
    "ec2:GetTransitGatewayRouteTableAssociations",
    "ec2:GetTransitGatewayRouteTablePropagations",
    "ec2:ImportClientVpnClientCertificateRevocationList",
    "ec2:ImportImage",
    "ec2:ImportInstance",
    "ec2:ImportKeyPair",
    "ec2:ImportSnapshot",
    "ec2:ImportVolume",
    "ec2:ModifyCapacityReservation",
    "ec2:ModifyClientVpnEndpoint",
    "ec2:ModifyDefaultCreditSpecification",
    "ec2:ModifyEbsDefaultKmsKeyId",
    "ec2:ModifyFleet",
    "ec2:ModifyFpgaImageAttribute",
    "ec2:ModifyHosts",
    "ec2:ModifyIdFormat",
    "ec2:ModifyIdentityIdFormat",
    "ec2:ModifyImageAttribute",
    "ec2:ModifyInstanceAttribute",
    "ec2:ModifyInstanceCapacityReservationAttributes",
    "ec2:ModifyInstanceCreditSpecification",
    "ec2:ModifyInstanceEventStartTime",
    "ec2:ModifyInstanceMetadataOptions",
    "ec2:ModifyInstancePlacement",
    "ec2:ModifyLaunchTemplate",
    "ec2:ModifyManagedPrefixList",
    "ec2:ModifyNetworkInterfaceAttribute",
    "ec2:ModifyReservedInstances",
    "ec2:ModifySnapshotAttribute",
    "ec2:ModifySpotFleetRequest",
    "ec2:ModifySubnetAttribute",
    "ec2:ModifyTrafficMirrorFilterNetworkServices",
    "ec2:ModifyTrafficMirrorFilterRule",
    "ec2:ModifyTrafficMirrorSession",
    "ec2:ModifyTransitGateway",
    "ec2:ModifyTransitGatewayPrefixListReference",
    "ec2:ModifyTransitGatewayVpcAttachment",
    "ec2:ModifyVolume",
    "ec2:ModifyVolumeAttribute",
    "ec2:ModifyVpcAttribute",
    "ec2:ModifyVpcEndpoint",
    "ec2:ModifyVpcEndpointConnectionNotification",
    "ec2:ModifyVpcEndpointServiceConfiguration",
    "ec2:ModifyVpcEndpointServicePermissions",
    "ec2:ModifyVpcPeeringConnectionOptions",
    "ec2:ModifyVpcTenancy",
    "ec2:ModifyVpnConnection",
    "ec2:ModifyVpnTunnelCertificate",
    "ec2:ModifyVpnTunnelOptions",
    "ec2:MonitorInstances",
    "ec2:MoveAddressToVpc",
    "ec2:ProvisionByoipCidr",
    "ec2:PurchaseHostReservation",
    "ec2:PurchaseReservedInstancesOffering",
    "ec2:PurchaseScheduledInstances",
    "ec2:RebootInstances",
    "ec2:RegisterImage",
    "ec2:RegisterInstanceEventNotificationAttributes",
    "ec2:RegisterTransitGatewayMulticastGroupMembers",
    "ec2:RegisterTransitGatewayMulticastGroupSources",
    "ec2:RejectTransitGatewayPeeringAttachment",
    "ec2:RejectTransitGatewayVpcAttachment",
    "ec2:RejectVpcEndpointConnections",
    "ec2:RejectVpcPeeringConnection",
    "ec2:ReleaseAddress",
    "ec2:ReleaseHosts",
    "ec2:ReplaceIamInstanceProfileAssociation",
    "ec2:ReplaceNetworkAclAssociation",
    "ec2:ReplaceNetworkAclEntry",
    "ec2:ReplaceRoute",
    "ec2:ReplaceRouteTableAssociation",
    "ec2:ReplaceTransitGatewayRoute",
    "ec2:ReportInstanceStatus",
    "ec2:RequestSpotFleet",
    "ec2:RequestSpotInstances",
    "ec2:ResetEbsDefaultKmsKeyId",
    "ec2:ResetFpgaImageAttribute",
    "ec2:ResetImageAttribute",
    "ec2:ResetInstanceAttribute",
    "ec2:ResetNetworkInterfaceAttribute",
    "ec2:ResetSnapshotAttribute",
    "ec2:RestoreAddressToClassic",
    "ec2:RestoreManagedPrefixListVersion",
    "ec2:RevokeClientVpnIngress",
    "ec2:RevokeSecurityGroupEgress",
    "ec2:RevokeSecurityGroupIngress",
    "ec2:RunInstances",
    "ec2:RunScheduledInstances",
    "ec2:SearchLocalGatewayRoutes",
    "ec2:SearchTransitGatewayMulticastGroups",
    "ec2:SearchTransitGatewayRoutes",
    "ec2:SendDiagnosticInterrupt",
    "ec2:StartInstances",
    "ec2:StartVpcEndpointServicePrivateDnsVerification",
    "ec2:StopInstances",
    "ec2:TerminateClientVpnConnections",
    "ec2:TerminateInstances",
    "ec2:UnassignIpv6Addresses",
    "ec2:UnassignPrivateIpAddresses",
    "ec2:UnmonitorInstances",
    "ec2:UpdateSecurityGroupRuleDescriptionsEgress",
    "ec2:UpdateSecurityGroupRuleDescriptionsIngress",
    "ec2:WithdrawByoipCidr",
    "ec2messages:AcknowledgeMessage",
    "ec2messages:DeleteMessage",
    "ec2messages:FailMessage",
    "ec2messages:GetEndpoint",
    "ec2messages:GetMessages",
    "ec2messages:SendReply",
    "ecr:BatchCheckLayerAvailability",
    "ecr:BatchDeleteImage",
    "ecr:BatchGetImage",
    "ecr:CompleteLayerUpload",
    "ecr:CreateRepository",
    "ecr:DeleteLifecyclePolicy",
    "ecr:DeleteRepository",
    "ecr:DeleteRepositoryPolicy",
    "ecr:DescribeImageScanFindings",
    "ecr:DescribeImages",
    "ecr:DescribeRepositories",
    "ecr:GetAuthorizationToken",
    "ecr:GetDownloadUrlForLayer",
    "ecr:GetLifecyclePolicy",
    "ecr:GetLifecyclePolicyPreview",
    "ecr:GetRepositoryPolicy",
    "ecr:InitiateLayerUpload",
    "ecr:ListImages",
    "ecr:ListTagsForResource",
    "ecr:PutImage",
    "ecr:PutImageScanningConfiguration",
    "ecr:PutImageTagMutability",
    "ecr:PutLifecyclePolicy",
    "ecr:SetRepositoryPolicy",
    "ecr:StartImageScan",
    "ecr:StartLifecyclePolicyPreview",
    "ecr:TagResource",
    "ecr:UntagResource",
    "ecr:UploadLayerPart",
    "ecs:CreateCapacityProvider",
    "ecs:CreateCluster",
    "ecs:CreateService",
    "ecs:CreateTaskSet",
    "ecs:DeleteAccountSetting",
    "ecs:DeleteAttributes",
    "ecs:DeleteCapacityProvider",
    "ecs:DeleteCluster",
    "ecs:DeleteService",
    "ecs:DeleteTaskSet",
    "ecs:DeregisterContainerInstance",
    "ecs:DeregisterTaskDefinition",
    "ecs:DescribeCapacityProviders",
    "ecs:DescribeClusters",
    "ecs:DescribeContainerInstances",
    "ecs:DescribeServices",
    "ecs:DescribeTaskDefinition",
    "ecs:DescribeTaskSets",
    "ecs:DescribeTasks",
    "ecs:DiscoverPollEndpoint",
    "ecs:ListAccountSettings",
    "ecs:ListAttributes",
    "ecs:ListClusters",
    "ecs:ListContainerInstances",
    "ecs:ListServices",
    "ecs:ListTagsForResource",
    "ecs:ListTaskDefinitionFamilies",
    "ecs:ListTaskDefinitions",
    "ecs:ListTasks",
    "ecs:Poll",
    "ecs:PutAccountSetting",
    "ecs:PutAccountSettingDefault",
    "ecs:PutAttributes",
    "ecs:PutClusterCapacityProviders",
    "ecs:RegisterContainerInstance",
    "ecs:RegisterTaskDefinition",
    "ecs:RunTask",
    "ecs:StartTask",
    "ecs:StartTelemetrySession",
    "ecs:StopTask",
    "ecs:SubmitAttachmentStateChanges",
    "ecs:SubmitContainerStateChange",
    "ecs:SubmitTaskStateChange",
    "ecs:TagResource",
    "ecs:UntagResource",
    "ecs:UpdateClusterSettings",
    "ecs:UpdateContainerAgent",
    "ecs:UpdateContainerInstancesState",
    "ecs:UpdateService",
    "ecs:UpdateServicePrimaryTaskSet",
    "ecs:UpdateTaskSet",
    "eks:CreateCluster",
    "eks:CreateFargateProfile",
    "eks:CreateNodegroup",
    "eks:DeleteCluster",
    "eks:DeleteFargateProfile",
    "eks:DeleteNodegroup",
    "eks:DescribeCluster",
    "eks:DescribeFargateProfile",
    "eks:DescribeNodegroup",
    "eks:DescribeUpdate",
    "eks:ListClusters",
    "eks:ListFargateProfiles",
    "eks:ListNodegroups",
    "eks:ListTagsForResource",
    "eks:ListUpdates",
    "eks:TagResource",
    "eks:UntagResource",
    "eks:UpdateClusterConfig",
    "eks:UpdateClusterVersion",
    "eks:UpdateNodegroupConfig",
    "eks:UpdateNodegroupVersion",
    "elastic-inference:Connect",
    "elasticache:AddTagsToResource",
    "elasticache:AuthorizeCacheSecurityGroupIngress",
    "elasticache:BatchApplyUpdateAction",
    "elasticache:BatchStopUpdateAction",
    "elasticache:CompleteMigration",
    "elasticache:CopySnapshot",
    "elasticache:CreateCacheCluster",
    "elasticache:CreateCacheParameterGroup",
    "elasticache:CreateCacheSecurityGroup",
    "elasticache:CreateCacheSubnetGroup",
    "elasticache:CreateGlobalReplicationGroup",
    "elasticache:CreateReplicationGroup",
    "elasticache:CreateSnapshot",
    "elasticache:CreateUser",
    "elasticache:CreateUserGroup",
    "elasticache:DecreaseNodeGroupsInGlobalReplicationGroup",
    "elasticache:DecreaseReplicaCount",
    "elasticache:DeleteCacheCluster",
    "elasticache:DeleteCacheParameterGroup",
    "elasticache:DeleteCacheSecurityGroup",
    "elasticache:DeleteCacheSubnetGroup",
    "elasticache:DeleteGlobalReplicationGroup",
    "elasticache:DeleteReplicationGroup",
    "elasticache:DeleteSnapshot",
    "elasticache:DeleteUser",
    "elasticache:DeleteUserGroup",
    "elasticache:DescribeCacheClusters",
    "elasticache:DescribeCacheEngineVersions",
    "elasticache:DescribeCacheParameterGroups",
    "elasticache:DescribeCacheParameters",
    "elasticache:DescribeCacheSecurityGroups",
    "elasticache:DescribeCacheSubnetGroups",
    "elasticache:DescribeEngineDefaultParameters",
    "elasticache:DescribeEvents",
    "elasticache:DescribeGlobalReplicationGroups",
    "elasticache:DescribeReplicationGroups",
    "elasticache:DescribeReservedCacheNodes",
    "elasticache:DescribeReservedCacheNodesOfferings",
    "elasticache:DescribeServiceUpdates",
    "elasticache:DescribeSnapshots",
    "elasticache:DescribeUpdateActions",
    "elasticache:DescribeUserGroups",
    "elasticache:DescribeUsers",
    "elasticache:DisassociateGlobalReplicationGroup",
    "elasticache:FailoverGlobalReplicationGroup",
    "elasticache:IncreaseNodeGroupsInGlobalReplicationGroup",
    "elasticache:IncreaseReplicaCount",
    "elasticache:ListAllowedNodeTypeModifications",
    "elasticache:ListTagsForResource",
    "elasticache:ModifyCacheCluster",
    "elasticache:ModifyCacheParameterGroup",
    "elasticache:ModifyCacheSubnetGroup",
    "elasticache:ModifyGlobalReplicationGroup",
    "elasticache:ModifyReplicationGroup",
    "elasticache:ModifyReplicationGroupShardConfiguration",
    "elasticache:ModifyUser",
    "elasticache:ModifyUserGroup",
    "elasticache:PurchaseReservedCacheNodesOffering",
    "elasticache:RebalanceSlotsInGlobalReplicationGroup",
    "elasticache:RebootCacheCluster",
    "elasticache:RemoveTagsFromResource",
    "elasticache:ResetCacheParameterGroup",
    "elasticache:RevokeCacheSecurityGroupIngress",
    "elasticache:StartMigration",
    "elasticache:TestFailover",
    "elasticbeanstalk:AbortEnvironmentUpdate",
    "elasticbeanstalk:AddTags",
    "elasticbeanstalk:ApplyEnvironmentManagedAction",
    "elasticbeanstalk:AssociateEnvironmentOperationsRole",
    "elasticbeanstalk:CheckDNSAvailability",
    "elasticbeanstalk:ComposeEnvironments",
    "elasticbeanstalk:CreateApplication",
    "elasticbeanstalk:CreateApplicationVersion",
    "elasticbeanstalk:CreateConfigurationTemplate",
    "elasticbeanstalk:CreateEnvironment",
    "elasticbeanstalk:CreatePlatformVersion",
    "elasticbeanstalk:CreateStorageLocation",
    "elasticbeanstalk:DeleteApplication",
    "elasticbeanstalk:DeleteApplicationVersion",
    "elasticbeanstalk:DeleteConfigurationTemplate",
    "elasticbeanstalk:DeleteEnvironmentConfiguration",
    "elasticbeanstalk:DeletePlatformVersion",
    "elasticbeanstalk:DescribeAccountAttributes",
    "elasticbeanstalk:DescribeApplicationVersions",
    "elasticbeanstalk:DescribeApplications",
    "elasticbeanstalk:DescribeConfigurationOptions",
    "elasticbeanstalk:DescribeConfigurationSettings",
    "elasticbeanstalk:DescribeEnvironmentHealth",
    "elasticbeanstalk:DescribeEnvironmentManagedActionHistory",
    "elasticbeanstalk:DescribeEnvironmentManagedActions",
    "elasticbeanstalk:DescribeEnvironmentResources",
    "elasticbeanstalk:DescribeEnvironments",
    "elasticbeanstalk:DescribeEvents",
    "elasticbeanstalk:DescribeInstancesHealth",
    "elasticbeanstalk:DescribePlatformVersion",
    "elasticbeanstalk:DisassociateEnvironmentOperationsRole",
    "elasticbeanstalk:ListAvailableSolutionStacks",
    "elasticbeanstalk:ListPlatformBranches",
    "elasticbeanstalk:ListPlatformVersions",
    "elasticbeanstalk:ListTagsForResource",
    "elasticbeanstalk:PutInstanceStatistics",
    "elasticbeanstalk:RebuildEnvironment",
    "elasticbeanstalk:RemoveTags",
    "elasticbeanstalk:RequestEnvironmentInfo",
    "elasticbeanstalk:RestartAppServer",
    "elasticbeanstalk:RetrieveEnvironmentInfo",
    "elasticbeanstalk:SwapEnvironmentCNAMEs",
    "elasticbeanstalk:TerminateEnvironment",
    "elasticbeanstalk:UpdateApplication",
    "elasticbeanstalk:UpdateApplicationResourceLifecycle",
    "elasticbeanstalk:UpdateApplicationVersion",
    "elasticbeanstalk:UpdateConfigurationTemplate",
    "elasticbeanstalk:UpdateEnvironment",
    "elasticbeanstalk:ValidateConfigurationSettings",
    "elasticfilesystem:Backup",
    "elasticfilesystem:ClientMount",
    "elasticfilesystem:ClientRootAccess",
    "elasticfilesystem:ClientWrite",
    "elasticfilesystem:CreateAccessPoint",
    "elasticfilesystem:CreateFileSystem",
    "elasticfilesystem:CreateMountTarget",
    "elasticfilesystem:CreateTags",
    "elasticfilesystem:DeleteAccessPoint",
    "elasticfilesystem:DeleteFileSystem",
    "elasticfilesystem:DeleteFileSystemPolicy",
    "elasticfilesystem:DeleteMountTarget",
    "elasticfilesystem:DeleteTags",
    "elasticfilesystem:DescribeAccessPoints",
    "elasticfilesystem:DescribeBackupPolicy",
    "elasticfilesystem:DescribeFileSystemPolicy",
    "elasticfilesystem:DescribeFileSystems",
    "elasticfilesystem:DescribeLifecycleConfiguration",
    "elasticfilesystem:DescribeMountTargetSecurityGroups",
    "elasticfilesystem:DescribeMountTargets",
    "elasticfilesystem:DescribeTags",
    "elasticfilesystem:ListTagsForResource",
    "elasticfilesystem:ModifyMountTargetSecurityGroups",
    "elasticfilesystem:PutBackupPolicy",
    "elasticfilesystem:PutFileSystemPolicy",
    "elasticfilesystem:PutLifecycleConfiguration",
    "elasticfilesystem:Restore",
    "elasticfilesystem:TagResource",
    "elasticfilesystem:UntagResource",
    "elasticfilesystem:UpdateFileSystem",
    "elasticloadbalancing:AddListenerCertificates",
    "elasticloadbalancing:AddTags",
    "elasticloadbalancing:ApplySecurityGroupsToLoadBalancer",
    "elasticloadbalancing:AttachLoadBalancerToSubnets",
    "elasticloadbalancing:ConfigureHealthCheck",
    "elasticloadbalancing:CreateAppCookieStickinessPolicy",
    "elasticloadbalancing:CreateLBCookieStickinessPolicy",
    "elasticloadbalancing:CreateListener",
    "elasticloadbalancing:CreateLoadBalancer",
    "elasticloadbalancing:CreateLoadBalancerListeners",
    "elasticloadbalancing:CreateLoadBalancerPolicy",
    "elasticloadbalancing:CreateRule",
    "elasticloadbalancing:CreateTargetGroup",
    "elasticloadbalancing:DeleteListener",
    "elasticloadbalancing:DeleteLoadBalancer",
    "elasticloadbalancing:DeleteLoadBalancerListeners",
    "elasticloadbalancing:DeleteLoadBalancerPolicy",
    "elasticloadbalancing:DeleteRule",
    "elasticloadbalancing:DeleteTargetGroup",
    "elasticloadbalancing:DeregisterInstancesFromLoadBalancer",
    "elasticloadbalancing:DeregisterTargets",
    "elasticloadbalancing:DescribeAccountLimits",
    "elasticloadbalancing:DescribeInstanceHealth",
    "elasticloadbalancing:DescribeListenerCertificates",
    "elasticloadbalancing:DescribeListeners",
    "elasticloadbalancing:DescribeLoadBalancerAttributes",
    "elasticloadbalancing:DescribeLoadBalancerPolicies",
    "elasticloadbalancing:DescribeLoadBalancerPolicyTypes",
    "elasticloadbalancing:DescribeLoadBalancers",
    "elasticloadbalancing:DescribeRules",
    "elasticloadbalancing:DescribeSSLPolicies",
    "elasticloadbalancing:DescribeTags",
    "elasticloadbalancing:DescribeTargetGroupAttributes",
    "elasticloadbalancing:DescribeTargetGroups",
    "elasticloadbalancing:DescribeTargetHealth",
    "elasticloadbalancing:DetachLoadBalancerFromSubnets",
    "elasticloadbalancing:DisableAvailabilityZonesForLoadBalancer",
    "elasticloadbalancing:EnableAvailabilityZonesForLoadBalancer",
    "elasticloadbalancing:ModifyListener",
    "elasticloadbalancing:ModifyLoadBalancerAttributes",
    "elasticloadbalancing:ModifyRule",
    "elasticloadbalancing:ModifyTargetGroup",
    "elasticloadbalancing:ModifyTargetGroupAttributes",
    "elasticloadbalancing:RegisterInstancesWithLoadBalancer",
    "elasticloadbalancing:RegisterTargets",
    "elasticloadbalancing:RemoveListenerCertificates",
    "elasticloadbalancing:RemoveTags",
    "elasticloadbalancing:SetIpAddressType",
    "elasticloadbalancing:SetLoadBalancerListenerSSLCertificate",
    "elasticloadbalancing:SetLoadBalancerPoliciesForBackendServer",
    "elasticloadbalancing:SetLoadBalancerPoliciesOfListener",
    "elasticloadbalancing:SetRulePriorities",
    "elasticloadbalancing:SetSecurityGroups",
    "elasticloadbalancing:SetSubnets",
    "elasticloadbalancing:SetWebAcl",
    "elasticmapreduce:AddInstanceFleet",
    "elasticmapreduce:AddInstanceGroups",
    "elasticmapreduce:AddJobFlowSteps",
    "elasticmapreduce:AddTags",
    "elasticmapreduce:CancelSteps",
    "elasticmapreduce:CreateEditor",
    "elasticmapreduce:CreateSecurityConfiguration",
    "elasticmapreduce:DeleteEditor",
    "elasticmapreduce:DeleteSecurityConfiguration",
    "elasticmapreduce:DescribeCluster",
    "elasticmapreduce:DescribeEditor",
    "elasticmapreduce:DescribeJobFlows",
    "elasticmapreduce:DescribeSecurityConfiguration",
    "elasticmapreduce:DescribeStep",
    "elasticmapreduce:GetBlockPublicAccessConfiguration",
    "elasticmapreduce:GetManagedScalingPolicy",
    "elasticmapreduce:ListBootstrapActions",
    "elasticmapreduce:ListClusters",
    "elasticmapreduce:ListEditors",
    "elasticmapreduce:ListInstanceFleets",
    "elasticmapreduce:ListInstanceGroups",
    "elasticmapreduce:ListInstances",
    "elasticmapreduce:ListSecurityConfigurations",
    "elasticmapreduce:ListSteps",
    "elasticmapreduce:ModifyCluster",
    "elasticmapreduce:ModifyInstanceFleet",
    "elasticmapreduce:ModifyInstanceGroups",
    "elasticmapreduce:OpenEditorInConsole",
    "elasticmapreduce:PutAutoScalingPolicy",
    "elasticmapreduce:PutBlockPublicAccessConfiguration",
    "elasticmapreduce:PutManagedScalingPolicy",
    "elasticmapreduce:RemoveAutoScalingPolicy",
    "elasticmapreduce:RemoveManagedScalingPolicy",
    "elasticmapreduce:RemoveTags",
    "elasticmapreduce:RunJobFlow",
    "elasticmapreduce:SetTerminationProtection",
    "elasticmapreduce:StartEditor",
    "elasticmapreduce:StopEditor",
    "elasticmapreduce:TerminateJobFlows",
    "elasticmapreduce:ViewEventsFromAllClustersInConsole",
    "elastictranscoder:CancelJob",
    "elastictranscoder:CreateJob",
    "elastictranscoder:CreatePipeline",
    "elastictranscoder:CreatePreset",
    "elastictranscoder:DeletePipeline",
    "elastictranscoder:DeletePreset",
    "elastictranscoder:ListJobsByPipeline",
    "elastictranscoder:ListJobsByStatus",
    "elastictranscoder:ListPipelines",
    "elastictranscoder:ListPresets",
    "elastictranscoder:ReadJob",
    "elastictranscoder:ReadPipeline",
    "elastictranscoder:ReadPreset",
    "elastictranscoder:TestRole",
    "elastictranscoder:UpdatePipeline",
    "elastictranscoder:UpdatePipelineNotifications",
    "elastictranscoder:UpdatePipelineStatus",
    "elemental-activations:DownloadSoftware",
    "elemental-activations:GenerateLicenses",
    "elemental-activations:GetActivation",
    "elemental-activations:ListTagsForResource",
    "elemental-activations:TagResource",
    "elemental-activations:UntagResource",
    "elemental-appliances-software:CreateQuote",
    "elemental-appliances-software:GetQuote",
    "elemental-appliances-software:ListQuotes",
    "elemental-appliances-software:ListTagsForResource",
    "elemental-appliances-software:TagResource",
    "elemental-appliances-software:UntagResource",
    "elemental-appliances-software:UpdateQuote",
    "elemental-support-cases:CreateCase",
    "elemental-support-cases:GetCase",
    "elemental-support-cases:GetCases",
    "elemental-support-cases:UpdateCase",
    "elemental-support-content:Query",
    "es:AcceptInboundCrossClusterSearchConnection",
    "es:AddTags",
    "es:CreateElasticsearchDomain",
    "es:CreateElasticsearchServiceRole",
    "es:CreateOutboundCrossClusterSearchConnection",
    "es:DeleteElasticsearchDomain",
    "es:DeleteElasticsearchServiceRole",
    "es:DeleteInboundCrossClusterSearchConnection",
    "es:DeleteOutboundCrossClusterSearchConnection",
    "es:DescribeElasticsearchDomain",
    "es:DescribeElasticsearchDomainConfig",
    "es:DescribeElasticsearchDomains",
    "es:DescribeElasticsearchInstanceTypeLimits",
    "es:DescribeInboundCrossClusterSearchConnections",
    "es:DescribeOutboundCrossClusterSearchConnections",
    "es:DescribeReservedElasticsearchInstanceOfferings",
    "es:DescribeReservedElasticsearchInstances",
    "es:ESCrossClusterGet",
    "es:ESHttpDelete",
    "es:ESHttpGet",
    "es:ESHttpHead",
    "es:ESHttpPatch",
    "es:ESHttpPost",
    "es:ESHttpPut",
    "es:GetCompatibleElasticsearchVersions",
    "es:GetUpgradeHistory",
    "es:GetUpgradeStatus",
    "es:ListDomainNames",
    "es:ListElasticsearchInstanceTypeDetails",
    "es:ListElasticsearchInstanceTypes",
    "es:ListElasticsearchVersions",
    "es:ListTags",
    "es:PurchaseReservedElasticsearchInstanceOffering",
    "es:RejectInboundCrossClusterSearchConnection",
    "es:RemoveTags",
    "es:UpdateElasticsearchDomainConfig",
    "es:UpgradeElasticsearchDomain",
    "events:ActivateEventSource",
    "events:CancelReplay",
    "events:CreateArchive",
    "events:CreateEventBus",
    "events:CreatePartnerEventSource",
    "events:DeactivateEventSource",
    "events:DeleteArchive",
    "events:DeleteEventBus",
    "events:DeletePartnerEventSource",
    "events:DeleteRule",
    "events:DescribeArchive",
    "events:DescribeEventBus",
    "events:DescribeEventSource",
    "events:DescribePartnerEventSource",
    "events:DescribeReplay",
    "events:DescribeRule",
    "events:DisableRule",
    "events:EnableRule",
    "events:ListArchives",
    "events:ListEventBuses",
    "events:ListEventSources",
    "events:ListPartnerEventSourceAccounts",
    "events:ListPartnerEventSources",
    "events:ListReplays",
    "events:ListRuleNamesByTarget",
    "events:ListRules",
    "events:ListTagsForResource",
    "events:ListTargetsByRule",
    "events:PutEvents",
    "events:PutPartnerEvents",
    "events:PutPermission",
    "events:PutRule",
    "events:PutTargets",
    "events:RemovePermission",
    "events:RemoveTargets",
    "events:StartReplay",
    "events:TagResource",
    "events:TestEventPattern",
    "events:UntagResource",
    "events:UpdateArchive",
    "execute-api:InvalidateCache",
    "execute-api:Invoke",
    "execute-api:ManageConnections",
    "firehose:CreateDeliveryStream",
    "firehose:DeleteDeliveryStream",
    "firehose:DescribeDeliveryStream",
    "firehose:ListDeliveryStreams",
    "firehose:ListTagsForDeliveryStream",
    "firehose:PutRecord",
    "firehose:PutRecordBatch",
    "firehose:StartDeliveryStreamEncryption",
    "firehose:StopDeliveryStreamEncryption",
    "firehose:TagDeliveryStream",
    "firehose:UntagDeliveryStream",
    "firehose:UpdateDestination",
    "fms:AssociateAdminAccount",
    "fms:DeleteAppsList",
    "fms:DeleteNotificationChannel",
    "fms:DeletePolicy",
    "fms:DeleteProtocolsList",
    "fms:DisassociateAdminAccount",
    "fms:GetAdminAccount",
    "fms:GetAppsList",
    "fms:GetComplianceDetail",
    "fms:GetNotificationChannel",
    "fms:GetPolicy",
    "fms:GetProtectionStatus",
    "fms:GetProtocolsList",
    "fms:ListAppsLists",
    "fms:ListComplianceStatus",
    "fms:ListMemberAccounts",
    "fms:ListPolicies",
    "fms:ListProtocolsLists",
    "fms:ListTagsForResource",
    "fms:PutAppsList",
    "fms:PutNotificationChannel",
    "fms:PutPolicy",
    "fms:PutProtocolsList",
    "fms:TagResource",
    "fms:UntagResource",
    "forecast:CreateDataset",
    "forecast:CreateDatasetGroup",
    "forecast:CreateDatasetImportJob",
    "forecast:CreateForecast",
    "forecast:CreateForecastExportJob",
    "forecast:CreatePredictor",
    "forecast:CreatePredictorBacktestExportJob",
    "forecast:DeleteDataset",
    "forecast:DeleteDatasetGroup",
    "forecast:DeleteDatasetImportJob",
    "forecast:DeleteForecast",
    "forecast:DeleteForecastExportJob",
    "forecast:DeletePredictor",
    "forecast:DeletePredictorBacktestExportJob",
    "forecast:DescribeDataset",
    "forecast:DescribeDatasetGroup",
    "forecast:DescribeDatasetImportJob",
    "forecast:DescribeForecast",
    "forecast:DescribeForecastExportJob",
    "forecast:DescribePredictor",
    "forecast:DescribePredictorBacktestExportJob",
    "forecast:GetAccuracyMetrics",
    "forecast:ListDatasetGroups",
    "forecast:ListDatasetImportJobs",
    "forecast:ListDatasets",
    "forecast:ListForecastExportJobs",
    "forecast:ListForecasts",
    "forecast:ListPredictorBacktestExportJobs",
    "forecast:ListPredictors",
    "forecast:ListTagsForResource",
    "forecast:QueryForecast",
    "forecast:TagResource",
    "forecast:UntagResource",
    "forecast:UpdateDatasetGroup",
    "frauddetector:BatchCreateVariable",
    "frauddetector:BatchGetVariable",
    "frauddetector:CreateDetectorVersion",
    "frauddetector:CreateModel",
    "frauddetector:CreateModelVersion",
    "frauddetector:CreateRule",
    "frauddetector:CreateVariable",
    "frauddetector:DeleteDetector",
    "frauddetector:DeleteDetectorVersion",
    "frauddetector:DeleteEntityType",
    "frauddetector:DeleteEvent",
    "frauddetector:DeleteEventType",
    "frauddetector:DeleteExternalModel",
    "frauddetector:DeleteLabel",
    "frauddetector:DeleteModel",
    "frauddetector:DeleteModelVersion",
    "frauddetector:DeleteOutcome",
    "frauddetector:DeleteRule",
    "frauddetector:DeleteVariable",
    "frauddetector:DescribeDetector",
    "frauddetector:DescribeModelVersions",
    "frauddetector:GetDetectorVersion",
    "frauddetector:GetDetectors",
    "frauddetector:GetEntityTypes",
    "frauddetector:GetEventPrediction",
    "frauddetector:GetEventTypes",
    "frauddetector:GetExternalModels",
    "frauddetector:GetKMSEncryptionKey",
    "frauddetector:GetLabels",
    "frauddetector:GetModelVersion",
    "frauddetector:GetModels",
    "frauddetector:GetOutcomes",
    "frauddetector:GetRules",
    "frauddetector:GetVariables",
    "frauddetector:ListTagsForResource",
    "frauddetector:PutDetector",
    "frauddetector:PutEntityType",
    "frauddetector:PutEventType",
    "frauddetector:PutExternalModel",
    "frauddetector:PutKMSEncryptionKey",
    "frauddetector:PutLabel",
    "frauddetector:PutOutcome",
    "frauddetector:TagResource",
    "frauddetector:UntagResource",
    "frauddetector:UpdateDetectorVersion",
    "frauddetector:UpdateDetectorVersionMetadata",
    "frauddetector:UpdateDetectorVersionStatus",
    "frauddetector:UpdateModel",
    "frauddetector:UpdateModelVersion",
    "frauddetector:UpdateModelVersionStatus",
    "frauddetector:UpdateRuleMetadata",
    "frauddetector:UpdateRuleVersion",
    "frauddetector:UpdateVariable",
    "freertos:CreateSoftwareConfiguration",
    "freertos:DeleteSoftwareConfiguration",
    "freertos:DescribeHardwarePlatform",
    "freertos:DescribeSoftwareConfiguration",
    "freertos:GetSoftwareURL",
    "freertos:GetSoftwareURLForConfiguration",
    "freertos:ListFreeRTOSVersions",
    "freertos:ListHardwarePlatforms",
    "freertos:ListHardwareVendors",
    "freertos:ListSoftwareConfigurations",
    "freertos:UpdateSoftwareConfiguration",
    "fsx:CancelDataRepositoryTask",
    "fsx:CreateBackup",
    "fsx:CreateDataRepositoryTask",
    "fsx:CreateFileSystem",
    "fsx:CreateFileSystemFromBackup",
    "fsx:DeleteBackup",
    "fsx:DeleteFileSystem",
    "fsx:DescribeBackups",
    "fsx:DescribeDataRepositoryTasks",
    "fsx:DescribeFileSystems",
    "fsx:ListTagsForResource",
    "fsx:TagResource",
    "fsx:UntagResource",
    "fsx:UpdateFileSystem",
    "gamelift:AcceptMatch",
    "gamelift:ClaimGameServer",
    "gamelift:CreateAlias",
    "gamelift:CreateBuild",
    "gamelift:CreateFleet",
    "gamelift:CreateGameServerGroup",
    "gamelift:CreateGameSession",
    "gamelift:CreateGameSessionQueue",
    "gamelift:CreateMatchmakingConfiguration",
    "gamelift:CreateMatchmakingRuleSet",
    "gamelift:CreatePlayerSession",
    "gamelift:CreatePlayerSessions",
    "gamelift:CreateScript",
    "gamelift:CreateVpcPeeringAuthorization",
    "gamelift:CreateVpcPeeringConnection",
    "gamelift:DeleteAlias",
    "gamelift:DeleteBuild",
    "gamelift:DeleteFleet",
    "gamelift:DeleteGameServerGroup",
    "gamelift:DeleteGameSessionQueue",
    "gamelift:DeleteMatchmakingConfiguration",
    "gamelift:DeleteMatchmakingRuleSet",
    "gamelift:DeleteScalingPolicy",
    "gamelift:DeleteScript",
    "gamelift:DeleteVpcPeeringAuthorization",
    "gamelift:DeleteVpcPeeringConnection",
    "gamelift:DeregisterGameServer",
    "gamelift:DescribeAlias",
    "gamelift:DescribeBuild",
    "gamelift:DescribeEC2InstanceLimits",
    "gamelift:DescribeFleetAttributes",
    "gamelift:DescribeFleetCapacity",
    "gamelift:DescribeFleetEvents",
    "gamelift:DescribeFleetPortSettings",
    "gamelift:DescribeFleetUtilization",
    "gamelift:DescribeGameServer",
    "gamelift:DescribeGameServerGroup",
    "gamelift:DescribeGameServerInstances",
    "gamelift:DescribeGameSessionDetails",
    "gamelift:DescribeGameSessionPlacement",
    "gamelift:DescribeGameSessionQueues",
    "gamelift:DescribeGameSessions",
    "gamelift:DescribeInstances",
    "gamelift:DescribeMatchmaking",
    "gamelift:DescribeMatchmakingConfigurations",
    "gamelift:DescribeMatchmakingRuleSets",
    "gamelift:DescribePlayerSessions",
    "gamelift:DescribeRuntimeConfiguration",
    "gamelift:DescribeScalingPolicies",
    "gamelift:DescribeScript",
    "gamelift:DescribeVpcPeeringAuthorizations",
    "gamelift:DescribeVpcPeeringConnections",
    "gamelift:GetGameSessionLogUrl",
    "gamelift:GetInstanceAccess",
    "gamelift:ListAliases",
    "gamelift:ListBuilds",
    "gamelift:ListFleets",
    "gamelift:ListGameServerGroups",
    "gamelift:ListGameServers",
    "gamelift:ListScripts",
    "gamelift:ListTagsForResource",
    "gamelift:PutScalingPolicy",
    "gamelift:RegisterGameServer",
    "gamelift:RequestUploadCredentials",
    "gamelift:ResolveAlias",
    "gamelift:ResumeGameServerGroup",
    "gamelift:SearchGameSessions",
    "gamelift:StartFleetActions",
    "gamelift:StartGameSessionPlacement",
    "gamelift:StartMatchBackfill",
    "gamelift:StartMatchmaking",
    "gamelift:StopFleetActions",
    "gamelift:StopGameSessionPlacement",
    "gamelift:StopMatchmaking",
    "gamelift:SuspendGameServerGroup",
    "gamelift:TagResource",
    "gamelift:UntagResource",
    "gamelift:UpdateAlias",
    "gamelift:UpdateBuild",
    "gamelift:UpdateFleetAttributes",
    "gamelift:UpdateFleetCapacity",
    "gamelift:UpdateFleetPortSettings",
    "gamelift:UpdateGameServer",
    "gamelift:UpdateGameServerGroup",
    "gamelift:UpdateGameSession",
    "gamelift:UpdateGameSessionQueue",
    "gamelift:UpdateMatchmakingConfiguration",
    "gamelift:UpdateRuntimeConfiguration",
    "gamelift:UpdateScript",
    "gamelift:ValidateMatchmakingRuleSet",
    "glacier:AbortMultipartUpload",
    "glacier:AbortVaultLock",
    "glacier:AddTagsToVault",
    "glacier:CompleteMultipartUpload",
    "glacier:CompleteVaultLock",
    "glacier:CreateVault",
    "glacier:DeleteArchive",
    "glacier:DeleteVault",
    "glacier:DeleteVaultAccessPolicy",
    "glacier:DeleteVaultNotifications",
    "glacier:DescribeJob",
    "glacier:DescribeVault",
    "glacier:GetDataRetrievalPolicy",
    "glacier:GetJobOutput",
    "glacier:GetVaultAccessPolicy",
    "glacier:GetVaultLock",
    "glacier:GetVaultNotifications",
    "glacier:InitiateJob",
    "glacier:InitiateMultipartUpload",
    "glacier:InitiateVaultLock",
    "glacier:ListJobs",
    "glacier:ListMultipartUploads",
    "glacier:ListParts",
    "glacier:ListProvisionedCapacity",
    "glacier:ListTagsForVault",
    "glacier:ListVaults",
    "glacier:PurchaseProvisionedCapacity",
    "glacier:RemoveTagsFromVault",
    "glacier:SetDataRetrievalPolicy",
    "glacier:SetVaultAccessPolicy",
    "glacier:SetVaultNotifications",
    "glacier:UploadArchive",
    "glacier:UploadMultipartPart",
    "globalaccelerator:AdvertiseByoipCidr",
    "globalaccelerator:CreateAccelerator",
    "globalaccelerator:CreateEndpointGroup",
    "globalaccelerator:CreateListener",
    "globalaccelerator:DeleteAccelerator",
    "globalaccelerator:DeleteEndpointGroup",
    "globalaccelerator:DeleteListener",
    "globalaccelerator:DeprovisionByoipCidr",
    "globalaccelerator:DescribeAccelerator",
    "globalaccelerator:DescribeAcceleratorAttributes",
    "globalaccelerator:DescribeEndpointGroup",
    "globalaccelerator:DescribeListener",
    "globalaccelerator:ListAccelerators",
    "globalaccelerator:ListByoipCidrs",
    "globalaccelerator:ListEndpointGroups",
    "globalaccelerator:ListListeners",
    "globalaccelerator:ListTagsForResource",
    "globalaccelerator:ProvisionByoipCidr",
    "globalaccelerator:TagResource",
    "globalaccelerator:UntagResource",
    "globalaccelerator:UpdateAccelerator",
    "globalaccelerator:UpdateAcceleratorAttributes",
    "globalaccelerator:UpdateEndpointGroup",
    "globalaccelerator:UpdateListener",
    "globalaccelerator:WithdrawByoipCidr",
    "glue:BatchCreatePartition",
    "glue:BatchDeleteConnection",
    "glue:BatchDeletePartition",
    "glue:BatchDeleteTable",
    "glue:BatchDeleteTableVersion",
    "glue:BatchGetCrawlers",
    "glue:BatchGetDevEndpoints",
    "glue:BatchGetJobs",
    "glue:BatchGetPartition",
    "glue:BatchGetTriggers",
    "glue:BatchGetWorkflows",
    "glue:BatchStopJobRun",
    "glue:CancelMLTaskRun",
    "glue:CheckSchemaVersionValidity",
    "glue:CreateClassifier",
    "glue:CreateConnection",
    "glue:CreateCrawler",
    "glue:CreateDatabase",
    "glue:CreateDevEndpoint",
    "glue:CreateJob",
    "glue:CreateMLTransform",
    "glue:CreatePartition",
    "glue:CreateRegistry",
    "glue:CreateSchema",
    "glue:CreateScript",
    "glue:CreateSecurityConfiguration",
    "glue:CreateTable",
    "glue:CreateTrigger",
    "glue:CreateUserDefinedFunction",
    "glue:CreateWorkflow",
    "glue:DeleteClassifier",
    "glue:DeleteConnection",
    "glue:DeleteCrawler",
    "glue:DeleteDatabase",
    "glue:DeleteDevEndpoint",
    "glue:DeleteJob",
    "glue:DeleteMLTransform",
    "glue:DeletePartition",
    "glue:DeleteRegistry",
    "glue:DeleteResourcePolicy",
    "glue:DeleteSchema",
    "glue:DeleteSchemaVersions",
    "glue:DeleteSecurityConfiguration",
    "glue:DeleteTable",
    "glue:DeleteTableVersion",
    "glue:DeleteTrigger",
    "glue:DeleteUserDefinedFunction",
    "glue:DeleteWorkflow",
    "glue:GetCatalogImportStatus",
    "glue:GetClassifier",
    "glue:GetClassifiers",
    "glue:GetConnection",
    "glue:GetConnections",
    "glue:GetCrawler",
    "glue:GetCrawlerMetrics",
    "glue:GetCrawlers",
    "glue:GetDataCatalogEncryptionSettings",
    "glue:GetDatabase",
    "glue:GetDatabases",
    "glue:GetDataflowGraph",
    "glue:GetDevEndpoint",
    "glue:GetDevEndpoints",
    "glue:GetJob",
    "glue:GetJobBookmark",
    "glue:GetJobRun",
    "glue:GetJobRuns",
    "glue:GetJobs",
    "glue:GetMLTaskRun",
    "glue:GetMLTaskRuns",
    "glue:GetMLTransform",
    "glue:GetMLTransforms",
    "glue:GetMapping",
    "glue:GetPartition",
    "glue:GetPartitions",
    "glue:GetPlan",
    "glue:GetRegistry",
    "glue:GetResourcePolicy",
    "glue:GetSchema",
    "glue:GetSchemaByDefinition",
    "glue:GetSchemaVersion",
    "glue:GetSchemaVersionsDiff",
    "glue:GetSecurityConfiguration",
    "glue:GetSecurityConfigurations",
    "glue:GetTable",
    "glue:GetTableVersion",
    "glue:GetTableVersions",
    "glue:GetTables",
    "glue:GetTags",
    "glue:GetTrigger",
    "glue:GetTriggers",
    "glue:GetUserDefinedFunction",
    "glue:GetUserDefinedFunctions",
    "glue:GetWorkflow",
    "glue:GetWorkflowRun",
    "glue:GetWorkflowRunProperties",
    "glue:GetWorkflowRuns",
    "glue:ImportCatalogToGlue",
    "glue:ListCrawlers",
    "glue:ListDevEndpoints",
    "glue:ListJobs",
    "glue:ListMLTransforms",
    "glue:ListRegistries",
    "glue:ListSchemaVersions",
    "glue:ListSchemas",
    "glue:ListTriggers",
    "glue:ListWorkflows",
    "glue:PutDataCatalogEncryptionSettings",
    "glue:PutResourcePolicy",
    "glue:PutSchemaVersionMetadata",
    "glue:PutWorkflowRunProperties",
    "glue:QuerySchemaVersionMetadata",
    "glue:RegisterSchemaVersion",
    "glue:RemoveSchemaVersionMetadata",
    "glue:ResetJobBookmark",
    "glue:SearchTables",
    "glue:StartCrawler",
    "glue:StartCrawlerSchedule",
    "glue:StartExportLabelsTaskRun",
    "glue:StartImportLabelsTaskRun",
    "glue:StartJobRun",
    "glue:StartMLEvaluationTaskRun",
    "glue:StartMLLabelingSetGenerationTaskRun",
    "glue:StartTrigger",
    "glue:StartWorkflowRun",
    "glue:StopCrawler",
    "glue:StopCrawlerSchedule",
    "glue:StopTrigger",
    "glue:TagResource",
    "glue:UntagResource",
    "glue:UpdateClassifier",
    "glue:UpdateConnection",
    "glue:UpdateCrawler",
    "glue:UpdateCrawlerSchedule",
    "glue:UpdateDatabase",
    "glue:UpdateDevEndpoint",
    "glue:UpdateJob",
    "glue:UpdateMLTransform",
    "glue:UpdatePartition",
    "glue:UpdateRegistry",
    "glue:UpdateSchema",
    "glue:UpdateTable",
    "glue:UpdateTrigger",
    "glue:UpdateUserDefinedFunction",
    "glue:UpdateWorkflow",
    "glue:UseMLTransforms",
    "greengrass:AssociateRoleToGroup",
    "greengrass:AssociateServiceRoleToAccount",
    "greengrass:CreateConnectorDefinition",
    "greengrass:CreateConnectorDefinitionVersion",
    "greengrass:CreateCoreDefinition",
    "greengrass:CreateCoreDefinitionVersion",
    "greengrass:CreateDeployment",
    "greengrass:CreateDeviceDefinition",
    "greengrass:CreateDeviceDefinitionVersion",
    "greengrass:CreateFunctionDefinition",
    "greengrass:CreateFunctionDefinitionVersion",
    "greengrass:CreateGroup",
    "greengrass:CreateGroupCertificateAuthority",
    "greengrass:CreateGroupVersion",
    "greengrass:CreateLoggerDefinition",
    "greengrass:CreateLoggerDefinitionVersion",
    "greengrass:CreateResourceDefinition",
    "greengrass:CreateResourceDefinitionVersion",
    "greengrass:CreateSoftwareUpdateJob",
    "greengrass:CreateSubscriptionDefinition",
    "greengrass:CreateSubscriptionDefinitionVersion",
    "greengrass:DeleteConnectorDefinition",
    "greengrass:DeleteCoreDefinition",
    "greengrass:DeleteDeviceDefinition",
    "greengrass:DeleteFunctionDefinition",
    "greengrass:DeleteGroup",
    "greengrass:DeleteLoggerDefinition",
    "greengrass:DeleteResourceDefinition",
    "greengrass:DeleteSubscriptionDefinition",
    "greengrass:DisassociateRoleFromGroup",
    "greengrass:DisassociateServiceRoleFromAccount",
    "greengrass:Discover",
    "greengrass:GetAssociatedRole",
    "greengrass:GetBulkDeploymentStatus",
    "greengrass:GetConnectivityInfo",
    "greengrass:GetConnectorDefinition",
    "greengrass:GetConnectorDefinitionVersion",
    "greengrass:GetCoreDefinition",
    "greengrass:GetCoreDefinitionVersion",
    "greengrass:GetDeploymentStatus",
    "greengrass:GetDeviceDefinition",
    "greengrass:GetDeviceDefinitionVersion",
    "greengrass:GetFunctionDefinition",
    "greengrass:GetFunctionDefinitionVersion",
    "greengrass:GetGroup",
    "greengrass:GetGroupCertificateAuthority",
    "greengrass:GetGroupCertificateConfiguration",
    "greengrass:GetGroupVersion",
    "greengrass:GetLoggerDefinition",
    "greengrass:GetLoggerDefinitionVersion",
    "greengrass:GetResourceDefinition",
    "greengrass:GetResourceDefinitionVersion",
    "greengrass:GetServiceRoleForAccount",
    "greengrass:GetSubscriptionDefinition",
    "greengrass:GetSubscriptionDefinitionVersion",
    "greengrass:ListBulkDeploymentDetailedReports",
    "greengrass:ListBulkDeployments",
    "greengrass:ListConnectorDefinitionVersions",
    "greengrass:ListConnectorDefinitions",
    "greengrass:ListCoreDefinitionVersions",
    "greengrass:ListCoreDefinitions",
    "greengrass:ListDeployments",
    "greengrass:ListDeviceDefinitionVersions",
    "greengrass:ListDeviceDefinitions",
    "greengrass:ListFunctionDefinitionVersions",
    "greengrass:ListFunctionDefinitions",
    "greengrass:ListGroupCertificateAuthorities",
    "greengrass:ListGroupVersions",
    "greengrass:ListGroups",
    "greengrass:ListLoggerDefinitionVersions",
    "greengrass:ListLoggerDefinitions",
    "greengrass:ListResourceDefinitionVersions",
    "greengrass:ListResourceDefinitions",
    "greengrass:ListSubscriptionDefinitionVersions",
    "greengrass:ListSubscriptionDefinitions",
    "greengrass:ListTagsForResource",
    "greengrass:ResetDeployments",
    "greengrass:StartBulkDeployment",
    "greengrass:StopBulkDeployment",
    "greengrass:TagResource",
    "greengrass:UntagResource",
    "greengrass:UpdateConnectivityInfo",
    "greengrass:UpdateConnectorDefinition",
    "greengrass:UpdateCoreDefinition",
    "greengrass:UpdateDeviceDefinition",
    "greengrass:UpdateFunctionDefinition",
    "greengrass:UpdateGroup",
    "greengrass:UpdateGroupCertificateConfiguration",
    "greengrass:UpdateLoggerDefinition",
    "greengrass:UpdateResourceDefinition",
    "greengrass:UpdateSubscriptionDefinition",
    "groundstation:CancelContact",
    "groundstation:CreateConfig",
    "groundstation:CreateDataflowEndpointGroup",
    "groundstation:CreateMissionProfile",
    "groundstation:DeleteConfig",
    "groundstation:DeleteDataflowEndpointGroup",
    "groundstation:DeleteMissionProfile",
    "groundstation:DescribeContact",
    "groundstation:GetConfig",
    "groundstation:GetDataflowEndpointGroup",
    "groundstation:GetMinuteUsage",
    "groundstation:GetMissionProfile",
    "groundstation:GetSatellite",
    "groundstation:ListConfigs",
    "groundstation:ListContacts",
    "groundstation:ListDataflowEndpointGroups",
    "groundstation:ListGroundStations",
    "groundstation:ListMissionProfiles",
    "groundstation:ListSatellites",
    "groundstation:ListTagsForResource",
    "groundstation:ReserveContact",
    "groundstation:TagResource",
    "groundstation:UntagResource",
    "groundstation:UpdateConfig",
    "groundstation:UpdateMissionProfile",
    "groundtruthlabeling:DescribeConsoleJob",
    "groundtruthlabeling:ListDatasetObjects",
    "groundtruthlabeling:RunFilterOrSampleDatasetJob",
    "groundtruthlabeling:RunGenerateManifestByCrawlingJob",
    "guardduty:AcceptInvitation",
    "guardduty:ArchiveFindings",
    "guardduty:CreateDetector",
    "guardduty:CreateFilter",
    "guardduty:CreateIPSet",
    "guardduty:CreateMembers",
    "guardduty:CreatePublishingDestination",
    "guardduty:CreateSampleFindings",
    "guardduty:CreateThreatIntelSet",
    "guardduty:DeclineInvitations",
    "guardduty:DeleteDetector",
    "guardduty:DeleteFilter",
    "guardduty:DeleteIPSet",
    "guardduty:DeleteInvitations",
    "guardduty:DeleteMembers",
    "guardduty:DeletePublishingDestination",
    "guardduty:DeleteThreatIntelSet",
    "guardduty:DescribeOrganizationConfiguration",
    "guardduty:DescribePublishingDestination",
    "guardduty:DisableOrganizationAdminAccount",
    "guardduty:DisassociateFromMasterAccount",
    "guardduty:DisassociateMembers",
    "guardduty:EnableOrganizationAdminAccount",
    "guardduty:GetDetector",
    "guardduty:GetFilter",
    "guardduty:GetFindings",
    "guardduty:GetFindingsStatistics",
    "guardduty:GetIPSet",
    "guardduty:GetInvitationsCount",
    "guardduty:GetMasterAccount",
    "guardduty:GetMembers",
    "guardduty:GetThreatIntelSet",
    "guardduty:InviteMembers",
    "guardduty:ListDetectors",
    "guardduty:ListFilters",
    "guardduty:ListFindings",
    "guardduty:ListIPSets",
    "guardduty:ListInvitations",
    "guardduty:ListMembers",
    "guardduty:ListOrganizationAdminAccounts",
    "guardduty:ListPublishingDestinations",
    "guardduty:ListTagsForResource",
    "guardduty:ListThreatIntelSets",
    "guardduty:StartMonitoringMembers",
    "guardduty:StopMonitoringMembers",
    "guardduty:TagResource",
    "guardduty:UnarchiveFindings",
    "guardduty:UntagResource",
    "guardduty:UpdateDetector",
    "guardduty:UpdateFilter",
    "guardduty:UpdateFindingsFeedback",
    "guardduty:UpdateIPSet",
    "guardduty:UpdateOrganizationConfiguration",
    "guardduty:UpdatePublishingDestination",
    "guardduty:UpdateThreatIntelSet",
    "health:DescribeAffectedAccountsForOrganization",
    "health:DescribeAffectedEntities",
    "health:DescribeAffectedEntitiesForOrganization",
    "health:DescribeEntityAggregates",
    "health:DescribeEventAggregates",
    "health:DescribeEventDetails",
    "health:DescribeEventDetailsForOrganization",
    "health:DescribeEventTypes",
    "health:DescribeEvents",
    "health:DescribeEventsForOrganization",
    "health:DescribeHealthServiceStatusForOrganization",
    "health:DisableHealthServiceAccessForOrganization",
    "health:EnableHealthServiceAccessForOrganization",
    "honeycode:ApproveTeamAssociation",
    "honeycode:CreateTenant",
    "honeycode:GetScreenData",
    "honeycode:InvokeScreenAutomation",
    "honeycode:ListTeamAssociations",
    "honeycode:ListTenants",
    "honeycode:RejectTeamAssociation",
    "iam:AddClientIDToOpenIDConnectProvider",
    "iam:AddRoleToInstanceProfile",
    "iam:AddUserToGroup",
    "iam:AttachGroupPolicy",
    "iam:AttachRolePolicy",
    "iam:AttachUserPolicy",
    "iam:ChangePassword",
    "iam:CreateAccessKey",
    "iam:CreateAccountAlias",
    "iam:CreateGroup",
    "iam:CreateInstanceProfile",
    "iam:CreateLoginProfile",
    "iam:CreateOpenIDConnectProvider",
    "iam:CreatePolicy",
    "iam:CreatePolicyVersion",
    "iam:CreateRole",
    "iam:CreateSAMLProvider",
    "iam:CreateServiceLinkedRole",
    "iam:CreateServiceSpecificCredential",
    "iam:CreateUser",
    "iam:CreateVirtualMFADevice",
    "iam:DeactivateMFADevice",
    "iam:DeleteAccessKey",
    "iam:DeleteAccountAlias",
    "iam:DeleteAccountPasswordPolicy",
    "iam:DeleteGroup",
    "iam:DeleteGroupPolicy",
    "iam:DeleteInstanceProfile",
    "iam:DeleteLoginProfile",
    "iam:DeleteOpenIDConnectProvider",
    "iam:DeletePolicy",
    "iam:DeletePolicyVersion",
    "iam:DeleteRole",
    "iam:DeleteRolePermissionsBoundary",
    "iam:DeleteRolePolicy",
    "iam:DeleteSAMLProvider",
    "iam:DeleteSSHPublicKey",
    "iam:DeleteServerCertificate",
    "iam:DeleteServiceLinkedRole",
    "iam:DeleteServiceSpecificCredential",
    "iam:DeleteSigningCertificate",
    "iam:DeleteUser",
    "iam:DeleteUserPermissionsBoundary",
    "iam:DeleteUserPolicy",
    "iam:DeleteVirtualMFADevice",
    "iam:DetachGroupPolicy",
    "iam:DetachRolePolicy",
    "iam:DetachUserPolicy",
    "iam:EnableMFADevice",
    "iam:GenerateCredentialReport",
    "iam:GenerateOrganizationsAccessReport",
    "iam:GenerateServiceLastAccessedDetails",
    "iam:GetAccessKeyLastUsed",
    "iam:GetAccountAuthorizationDetails",
    "iam:GetAccountPasswordPolicy",
    "iam:GetAccountSummary",
    "iam:GetContextKeysForCustomPolicy",
    "iam:GetContextKeysForPrincipalPolicy",
    "iam:GetCredentialReport",
    "iam:GetGroup",
    "iam:GetGroupPolicy",
    "iam:GetInstanceProfile",
    "iam:GetLoginProfile",
    "iam:GetOpenIDConnectProvider",
    "iam:GetOrganizationsAccessReport",
    "iam:GetPolicy",
    "iam:GetPolicyVersion",
    "iam:GetRole",
    "iam:GetRolePolicy",
    "iam:GetSAMLProvider",
    "iam:GetSSHPublicKey",
    "iam:GetServerCertificate",
    "iam:GetServiceLastAccessedDetails",
    "iam:GetServiceLastAccessedDetailsWithEntities",
    "iam:GetServiceLinkedRoleDeletionStatus",
    "iam:GetUser",
    "iam:GetUserPolicy",
    "iam:ListAccessKeys",
    "iam:ListAccountAliases",
    "iam:ListAttachedGroupPolicies",
    "iam:ListAttachedRolePolicies",
    "iam:ListAttachedUserPolicies",
    "iam:ListEntitiesForPolicy",
    "iam:ListGroupPolicies",
    "iam:ListGroups",
    "iam:ListGroupsForUser",
    "iam:ListInstanceProfiles",
    "iam:ListInstanceProfilesForRole",
    "iam:ListMFADevices",
    "iam:ListOpenIDConnectProviders",
    "iam:ListPolicies",
    "iam:ListPoliciesGrantingServiceAccess",
    "iam:ListPolicyVersions",
    "iam:ListRolePolicies",
    "iam:ListRoleTags",
    "iam:ListRoles",
    "iam:ListSAMLProviders",
    "iam:ListSSHPublicKeys",
    "iam:ListServerCertificates",
    "iam:ListServiceSpecificCredentials",
    "iam:ListSigningCertificates",
    "iam:ListUserPolicies",
    "iam:ListUserTags",
    "iam:ListUsers",
    "iam:ListVirtualMFADevices",
    "iam:PassRole",
    "iam:PutGroupPolicy",
    "iam:PutRolePermissionsBoundary",
    "iam:PutRolePolicy",
    "iam:PutUserPermissionsBoundary",
    "iam:PutUserPolicy",
    "iam:RemoveClientIDFromOpenIDConnectProvider",
    "iam:RemoveRoleFromInstanceProfile",
    "iam:RemoveUserFromGroup",
    "iam:ResetServiceSpecificCredential",
    "iam:ResyncMFADevice",
    "iam:SetDefaultPolicyVersion",
    "iam:SetSecurityTokenServicePreferences",
    "iam:SimulateCustomPolicy",
    "iam:SimulatePrincipalPolicy",
    "iam:TagRole",
    "iam:TagUser",
    "iam:UntagRole",
    "iam:UntagUser",
    "iam:UpdateAccessKey",
    "iam:UpdateAccountPasswordPolicy",
    "iam:UpdateAssumeRolePolicy",
    "iam:UpdateGroup",
    "iam:UpdateLoginProfile",
    "iam:UpdateOpenIDConnectProviderThumbprint",
    "iam:UpdateRole",
    "iam:UpdateRoleDescription",
    "iam:UpdateSAMLProvider",
    "iam:UpdateSSHPublicKey",
    "iam:UpdateServerCertificate",
    "iam:UpdateServiceSpecificCredential",
    "iam:UpdateSigningCertificate",
    "iam:UpdateUser",
    "iam:UploadSSHPublicKey",
    "iam:UploadServerCertificate",
    "iam:UploadSigningCertificate",
    "identitystore:DescribeGroup",
    "identitystore:DescribeUser",
    "identitystore:ListGroups",
    "identitystore:ListUsers",
    "imagebuilder:CancelImageCreation",
    "imagebuilder:CreateComponent",
    "imagebuilder:CreateDistributionConfiguration",
    "imagebuilder:CreateImage",
    "imagebuilder:CreateImagePipeline",
    "imagebuilder:CreateImageRecipe",
    "imagebuilder:CreateInfrastructureConfiguration",
    "imagebuilder:DeleteComponent",
    "imagebuilder:DeleteDistributionConfiguration",
    "imagebuilder:DeleteImage",
    "imagebuilder:DeleteImagePipeline",
    "imagebuilder:DeleteImageRecipe",
    "imagebuilder:DeleteInfrastructureConfiguration",
    "imagebuilder:GetComponent",
    "imagebuilder:GetComponentPolicy",
    "imagebuilder:GetDistributionConfiguration",
    "imagebuilder:GetImage",
    "imagebuilder:GetImagePipeline",
    "imagebuilder:GetImagePolicy",
    "imagebuilder:GetImageRecipe",
    "imagebuilder:GetImageRecipePolicy",
    "imagebuilder:GetInfrastructureConfiguration",
    "imagebuilder:ListComponentBuildVersions",
    "imagebuilder:ListComponents",
    "imagebuilder:ListDistributionConfigurations",
    "imagebuilder:ListImageBuildVersions",
    "imagebuilder:ListImagePipelineImages",
    "imagebuilder:ListImagePipelines",
    "imagebuilder:ListImageRecipes",
    "imagebuilder:ListImages",
    "imagebuilder:ListInfrastructureConfigurations",
    "imagebuilder:ListTagsForResource",
    "imagebuilder:PutComponentPolicy",
    "imagebuilder:PutImagePolicy",
    "imagebuilder:PutImageRecipePolicy",
    "imagebuilder:StartImagePipelineExecution",
    "imagebuilder:TagResource",
    "imagebuilder:UntagResource",
    "imagebuilder:UpdateDistributionConfiguration",
    "imagebuilder:UpdateImagePipeline",
    "imagebuilder:UpdateInfrastructureConfiguration",
    "importexport:CancelJob",
    "importexport:CreateJob",
    "importexport:GetShippingLabel",
    "importexport:GetStatus",
    "importexport:ListJobs",
    "importexport:UpdateJob",
    "inspector:AddAttributesToFindings",
    "inspector:CreateAssessmentTarget",
    "inspector:CreateAssessmentTemplate",
    "inspector:CreateResourceGroup",
    "inspector:DeleteAssessmentRun",
    "inspector:DeleteAssessmentTarget",
    "inspector:DeleteAssessmentTemplate",
    "inspector:DescribeAssessmentRuns",
    "inspector:DescribeAssessmentTargets",
    "inspector:DescribeAssessmentTemplates",
    "inspector:DescribeCrossAccountAccessRole",
    "inspector:DescribeFindings",
    "inspector:DescribeResourceGroups",
    "inspector:DescribeRulesPackages",
    "inspector:GetTelemetryMetadata",
    "inspector:ListAssessmentRunAgents",
    "inspector:ListAssessmentRuns",
    "inspector:ListAssessmentTargets",
    "inspector:ListAssessmentTemplates",
    "inspector:ListEventSubscriptions",
    "inspector:ListFindings",
    "inspector:ListRulesPackages",
    "inspector:ListTagsForResource",
    "inspector:PreviewAgents",
    "inspector:RegisterCrossAccountAccessRole",
    "inspector:RemoveAttributesFromFindings",
    "inspector:SetTagsForResource",
    "inspector:StartAssessmentRun",
    "inspector:StopAssessmentRun",
    "inspector:SubscribeToEvent",
    "inspector:UnsubscribeFromEvent",
    "inspector:UpdateAssessmentTarget",
    "iot-device-tester:CheckVersion",
    "iot-device-tester:DownloadTestSuite",
    "iot-device-tester:LatestIdt",
    "iot-device-tester:SendMetrics",
    "iot-device-tester:SupportedVersion",
    "iot1click:AssociateDeviceWithPlacement",
    "iot1click:ClaimDevicesByClaimCode",
    "iot1click:CreatePlacement",
    "iot1click:CreateProject",
    "iot1click:DeletePlacement",
    "iot1click:DeleteProject",
    "iot1click:DescribeDevice",
    "iot1click:DescribePlacement",
    "iot1click:DescribeProject",
    "iot1click:DisassociateDeviceFromPlacement",
    "iot1click:FinalizeDeviceClaim",
    "iot1click:GetDeviceMethods",
    "iot1click:GetDevicesInPlacement",
    "iot1click:InitiateDeviceClaim",
    "iot1click:InvokeDeviceMethod",
    "iot1click:ListDeviceEvents",
    "iot1click:ListDevices",
    "iot1click:ListPlacements",
    "iot1click:ListProjects",
    "iot1click:ListTagsForResource",
    "iot1click:TagResource",
    "iot1click:UnclaimDevice",
    "iot1click:UntagResource",
    "iot1click:UpdateDeviceState",
    "iot1click:UpdatePlacement",
    "iot1click:UpdateProject",
    "iot:AcceptCertificateTransfer",
    "iot:AddThingToBillingGroup",
    "iot:AddThingToThingGroup",
    "iot:AssociateTargetsWithJob",
    "iot:AttachPolicy",
    "iot:AttachPrincipalPolicy",
    "iot:AttachSecurityProfile",
    "iot:AttachThingPrincipal",
    "iot:CancelAuditMitigationActionsTask",
    "iot:CancelAuditTask",
    "iot:CancelCertificateTransfer",
    "iot:CancelJob",
    "iot:CancelJobExecution",
    "iot:ClearDefaultAuthorizer",
    "iot:CloseTunnel",
    "iot:Connect",
    "iot:CreateAuditSuppression",
    "iot:CreateAuthorizer",
    "iot:CreateBillingGroup",
    "iot:CreateCertificateFromCsr",
    "iot:CreateDimension",
    "iot:CreateDomainConfiguration",
    "iot:CreateDynamicThingGroup",
    "iot:CreateJob",
    "iot:CreateKeysAndCertificate",
    "iot:CreateMitigationAction",
    "iot:CreateOTAUpdate",
    "iot:CreatePolicy",
    "iot:CreatePolicyVersion",
    "iot:CreateProvisioningClaim",
    "iot:CreateProvisioningTemplate",
    "iot:CreateProvisioningTemplateVersion",
    "iot:CreateRoleAlias",
    "iot:CreateScheduledAudit",
    "iot:CreateSecurityProfile",
    "iot:CreateStream",
    "iot:CreateThing",
    "iot:CreateThingGroup",
    "iot:CreateThingType",
    "iot:CreateTopicRule",
    "iot:DeleteAccountAuditConfiguration",
    "iot:DeleteAuditSuppression",
    "iot:DeleteAuthorizer",
    "iot:DeleteBillingGroup",
    "iot:DeleteCACertificate",
    "iot:DeleteCertificate",
    "iot:DeleteDimension",
    "iot:DeleteDomainConfiguration",
    "iot:DeleteDynamicThingGroup",
    "iot:DeleteJob",
    "iot:DeleteJobExecution",
    "iot:DeleteMitigationAction",
    "iot:DeleteOTAUpdate",
    "iot:DeletePolicy",
    "iot:DeletePolicyVersion",
    "iot:DeleteProvisioningTemplate",
    "iot:DeleteProvisioningTemplateVersion",
    "iot:DeleteRegistrationCode",
    "iot:DeleteRoleAlias",
    "iot:DeleteScheduledAudit",
    "iot:DeleteSecurityProfile",
    "iot:DeleteStream",
    "iot:DeleteThing",
    "iot:DeleteThingGroup",
    "iot:DeleteThingShadow",
    "iot:DeleteThingType",
    "iot:DeleteTopicRule",
    "iot:DeleteV2LoggingLevel",
    "iot:DeprecateThingType",
    "iot:DescribeAccountAuditConfiguration",
    "iot:DescribeAuditFinding",
    "iot:DescribeAuditMitigationActionsTask",
    "iot:DescribeAuditSuppression",
    "iot:DescribeAuditTask",
    "iot:DescribeAuthorizer",
    "iot:DescribeBillingGroup",
    "iot:DescribeCACertificate",
    "iot:DescribeCertificate",
    "iot:DescribeDefaultAuthorizer",
    "iot:DescribeDimension",
    "iot:DescribeDomainConfiguration",
    "iot:DescribeEndpoint",
    "iot:DescribeEventConfigurations",
    "iot:DescribeIndex",
    "iot:DescribeJob",
    "iot:DescribeJobExecution",
    "iot:DescribeMitigationAction",
    "iot:DescribeProvisioningTemplate",
    "iot:DescribeProvisioningTemplateVersion",
    "iot:DescribeRoleAlias",
    "iot:DescribeScheduledAudit",
    "iot:DescribeSecurityProfile",
    "iot:DescribeStream",
    "iot:DescribeThing",
    "iot:DescribeThingGroup",
    "iot:DescribeThingRegistrationTask",
    "iot:DescribeThingType",
    "iot:DescribeTunnel",
    "iot:DetachPolicy",
    "iot:DetachPrincipalPolicy",
    "iot:DetachSecurityProfile",
    "iot:DetachThingPrincipal",
    "iot:DisableTopicRule",
    "iot:EnableTopicRule",
    "iot:GetCardinality",
    "iot:GetEffectivePolicies",
    "iot:GetIndexingConfiguration",
    "iot:GetJobDocument",
    "iot:GetLoggingOptions",
    "iot:GetOTAUpdate",
    "iot:GetPendingJobExecutions",
    "iot:GetPercentiles",
    "iot:GetPolicy",
    "iot:GetPolicyVersion",
    "iot:GetRegistrationCode",
    "iot:GetStatistics",
    "iot:GetThingShadow",
    "iot:GetTopicRule",
    "iot:GetV2LoggingOptions",
    "iot:ListActiveViolations",
    "iot:ListAttachedPolicies",
    "iot:ListAuditFindings",
    "iot:ListAuditMitigationActionsExecutions",
    "iot:ListAuditMitigationActionsTasks",
    "iot:ListAuditSuppressions",
    "iot:ListAuditTasks",
    "iot:ListAuthorizers",
    "iot:ListBillingGroups",
    "iot:ListCACertificates",
    "iot:ListCertificates",
    "iot:ListCertificatesByCA",
    "iot:ListDimensions",
    "iot:ListDomainConfigurations",
    "iot:ListIndices",
    "iot:ListJobExecutionsForJob",
    "iot:ListJobExecutionsForThing",
    "iot:ListJobs",
    "iot:ListMitigationActions",
    "iot:ListNamedShadowsForThing",
    "iot:ListOTAUpdates",
    "iot:ListOutgoingCertificates",
    "iot:ListPolicies",
    "iot:ListPolicyPrincipals",
    "iot:ListPolicyVersions",
    "iot:ListPrincipalPolicies",
    "iot:ListPrincipalThings",
    "iot:ListProvisioningTemplateVersions",
    "iot:ListProvisioningTemplates",
    "iot:ListRoleAliases",
    "iot:ListScheduledAudits",
    "iot:ListSecurityProfiles",
    "iot:ListSecurityProfilesForTarget",
    "iot:ListStreams",
    "iot:ListTagsForResource",
    "iot:ListTargetsForPolicy",
    "iot:ListTargetsForSecurityProfile",
    "iot:ListThingGroups",
    "iot:ListThingGroupsForThing",
    "iot:ListThingPrincipals",
    "iot:ListThingRegistrationTaskReports",
    "iot:ListThingRegistrationTasks",
    "iot:ListThingTypes",
    "iot:ListThings",
    "iot:ListThingsInBillingGroup",
    "iot:ListThingsInThingGroup",
    "iot:ListTopicRules",
    "iot:ListTunnels",
    "iot:ListV2LoggingLevels",
    "iot:ListViolationEvents",
    "iot:OpenTunnel",
    "iot:Publish",
    "iot:Receive",
    "iot:RegisterCACertificate",
    "iot:RegisterCertificate",
    "iot:RegisterCertificateWithoutCA",
    "iot:RegisterThing",
    "iot:RejectCertificateTransfer",
    "iot:RemoveThingFromBillingGroup",
    "iot:RemoveThingFromThingGroup",
    "iot:ReplaceTopicRule",
    "iot:SearchIndex",
    "iot:SetDefaultAuthorizer",
    "iot:SetDefaultPolicyVersion",
    "iot:SetLoggingOptions",
    "iot:SetV2LoggingLevel",
    "iot:SetV2LoggingOptions",
    "iot:StartAuditMitigationActionsTask",
    "iot:StartNextPendingJobExecution",
    "iot:StartOnDemandAuditTask",
    "iot:StartThingRegistrationTask",
    "iot:StopThingRegistrationTask",
    "iot:Subscribe",
    "iot:TagResource",
    "iot:TestAuthorization",
    "iot:TestInvokeAuthorizer",
    "iot:TransferCertificate",
    "iot:UntagResource",
    "iot:UpdateAccountAuditConfiguration",
    "iot:UpdateAuditSuppression",
    "iot:UpdateAuthorizer",
    "iot:UpdateBillingGroup",
    "iot:UpdateCACertificate",
    "iot:UpdateCertificate",
    "iot:UpdateDimension",
    "iot:UpdateDomainConfiguration",
    "iot:UpdateDynamicThingGroup",
    "iot:UpdateEventConfigurations",
    "iot:UpdateIndexingConfiguration",
    "iot:UpdateJob",
    "iot:UpdateJobExecution",
    "iot:UpdateMitigationAction",
    "iot:UpdateProvisioningTemplate",
    "iot:UpdateRoleAlias",
    "iot:UpdateScheduledAudit",
    "iot:UpdateSecurityProfile",
    "iot:UpdateStream",
    "iot:UpdateThing",
    "iot:UpdateThingGroup",
    "iot:UpdateThingGroupsForThing",
    "iot:UpdateThingShadow",
    "iot:ValidateSecurityProfileBehaviors",
    "iotanalytics:BatchPutMessage",
    "iotanalytics:CancelPipelineReprocessing",
    "iotanalytics:CreateChannel",
    "iotanalytics:CreateDataset",
    "iotanalytics:CreateDatasetContent",
    "iotanalytics:CreateDatastore",
    "iotanalytics:CreatePipeline",
    "iotanalytics:DeleteChannel",
    "iotanalytics:DeleteDataset",
    "iotanalytics:DeleteDatasetContent",
    "iotanalytics:DeleteDatastore",
    "iotanalytics:DeletePipeline",
    "iotanalytics:DescribeChannel",
    "iotanalytics:DescribeDataset",
    "iotanalytics:DescribeDatastore",
    "iotanalytics:DescribeLoggingOptions",
    "iotanalytics:DescribePipeline",
    "iotanalytics:GetDatasetContent",
    "iotanalytics:ListChannels",
    "iotanalytics:ListDatasets",
    "iotanalytics:ListDatastores",
    "iotanalytics:ListPipelines",
    "iotanalytics:ListTagsForResource",
    "iotanalytics:PutLoggingOptions",
    "iotanalytics:RunPipelineActivity",
    "iotanalytics:SampleChannelData",
    "iotanalytics:StartPipelineReprocessing",
    "iotanalytics:TagResource",
    "iotanalytics:UntagResource",
    "iotanalytics:UpdateChannel",
    "iotanalytics:UpdateDataset",
    "iotanalytics:UpdateDatastore",
    "iotanalytics:UpdatePipeline",
    "iotevents:BatchPutMessage",
    "iotevents:BatchUpdateDetector",
    "iotevents:CreateDetectorModel",
    "iotevents:CreateInput",
    "iotevents:DeleteDetectorModel",
    "iotevents:DeleteInput",
    "iotevents:DescribeDetector",
    "iotevents:DescribeDetectorModel",
    "iotevents:DescribeInput",
    "iotevents:DescribeLoggingOptions",
    "iotevents:ListDetectorModelVersions",
    "iotevents:ListDetectorModels",
    "iotevents:ListDetectors",
    "iotevents:ListInputs",
    "iotevents:ListTagsForResource",
    "iotevents:PutLoggingOptions",
    "iotevents:TagResource",
    "iotevents:UntagResource",
    "iotevents:UpdateDetectorModel",
    "iotevents:UpdateInput",
    "iotevents:UpdateInputRouting",
    "iotsitewise:AssociateAssets",
    "iotsitewise:BatchAssociateProjectAssets",
    "iotsitewise:BatchDisassociateProjectAssets",
    "iotsitewise:BatchPutAssetPropertyValue",
    "iotsitewise:CreateAccessPolicy",
    "iotsitewise:CreateAsset",
    "iotsitewise:CreateAssetModel",
    "iotsitewise:CreateDashboard",
    "iotsitewise:CreateGateway",
    "iotsitewise:CreatePortal",
    "iotsitewise:CreateProject",
    "iotsitewise:DeleteAccessPolicy",
    "iotsitewise:DeleteAsset",
    "iotsitewise:DeleteAssetModel",
    "iotsitewise:DeleteDashboard",
    "iotsitewise:DeleteGateway",
    "iotsitewise:DeletePortal",
    "iotsitewise:DeleteProject",
    "iotsitewise:DescribeAccessPolicy",
    "iotsitewise:DescribeAsset",
    "iotsitewise:DescribeAssetModel",
    "iotsitewise:DescribeAssetProperty",
    "iotsitewise:DescribeDashboard",
    "iotsitewise:DescribeGateway",
    "iotsitewise:DescribeGatewayCapabilityConfiguration",
    "iotsitewise:DescribeLoggingOptions",
    "iotsitewise:DescribePortal",
    "iotsitewise:DescribeProject",
    "iotsitewise:DisassociateAssets",
    "iotsitewise:GetAssetPropertyAggregates",
    "iotsitewise:GetAssetPropertyValue",
    "iotsitewise:GetAssetPropertyValueHistory",
    "iotsitewise:ListAccessPolicies",
    "iotsitewise:ListAssetModels",
    "iotsitewise:ListAssets",
    "iotsitewise:ListAssociatedAssets",
    "iotsitewise:ListDashboards",
    "iotsitewise:ListGateways",
    "iotsitewise:ListPortals",
    "iotsitewise:ListProjectAssets",
    "iotsitewise:ListProjects",
    "iotsitewise:ListTagsForResource",
    "iotsitewise:PutLoggingOptions",
    "iotsitewise:TagResource",
    "iotsitewise:UntagResource",
    "iotsitewise:UpdateAccessPolicy",
    "iotsitewise:UpdateAsset",
    "iotsitewise:UpdateAssetModel",
    "iotsitewise:UpdateAssetProperty",
    "iotsitewise:UpdateDashboard",
    "iotsitewise:UpdateGateway",
    "iotsitewise:UpdateGatewayCapabilityConfiguration",
    "iotsitewise:UpdatePortal",
    "iotsitewise:UpdateProject",
    "iotthingsgraph:AssociateEntityToThing",
    "iotthingsgraph:CreateFlowTemplate",
    "iotthingsgraph:CreateSystemInstance",
    "iotthingsgraph:CreateSystemTemplate",
    "iotthingsgraph:DeleteFlowTemplate",
    "iotthingsgraph:DeleteNamespace",
    "iotthingsgraph:DeleteSystemInstance",
    "iotthingsgraph:DeleteSystemTemplate",
    "iotthingsgraph:DeploySystemInstance",
    "iotthingsgraph:DeprecateFlowTemplate",
    "iotthingsgraph:DeprecateSystemTemplate",
    "iotthingsgraph:DescribeNamespace",
    "iotthingsgraph:DissociateEntityFromThing",
    "iotthingsgraph:GetEntities",
    "iotthingsgraph:GetFlowTemplate",
    "iotthingsgraph:GetFlowTemplateRevisions",
    "iotthingsgraph:GetNamespaceDeletionStatus",
    "iotthingsgraph:GetSystemInstance",
    "iotthingsgraph:GetSystemTemplate",
    "iotthingsgraph:GetSystemTemplateRevisions",
    "iotthingsgraph:GetUploadStatus",
    "iotthingsgraph:ListFlowExecutionMessages",
    "iotthingsgraph:ListTagsForResource",
    "iotthingsgraph:SearchEntities",
    "iotthingsgraph:SearchFlowExecutions",
    "iotthingsgraph:SearchFlowTemplates",
    "iotthingsgraph:SearchSystemInstances",
    "iotthingsgraph:SearchSystemTemplates",
    "iotthingsgraph:SearchThings",
    "iotthingsgraph:TagResource",
    "iotthingsgraph:UndeploySystemInstance",
    "iotthingsgraph:UntagResource",
    "iotthingsgraph:UpdateFlowTemplate",
    "iotthingsgraph:UpdateSystemTemplate",
    "iotthingsgraph:UploadEntityDefinitions",
    "iq-permission:ApproveAccessGrant",
    "iq:CreateProject",
    "ivs:BatchGetChannel",
    "ivs:BatchGetStreamKey",
    "ivs:CreateChannel",
    "ivs:CreateStreamKey",
    "ivs:DeleteChannel",
    "ivs:DeletePlaybackKeyPair",
    "ivs:DeleteStreamKey",
    "ivs:GetChannel",
    "ivs:GetPlaybackKeyPair",
    "ivs:GetStream",
    "ivs:GetStreamKey",
    "ivs:ImportPlaybackKeyPair",
    "ivs:ListChannels",
    "ivs:ListPlaybackKeyPairs",
    "ivs:ListStreamKeys",
    "ivs:ListStreams",
    "ivs:ListTagsForResource",
    "ivs:PutMetadata",
    "ivs:StopStream",
    "ivs:TagResource",
    "ivs:UntagResource",
    "ivs:UpdateChannel",
    "kafka:BatchAssociateScramSecret",
    "kafka:BatchDisassociateScramSecret",
    "kafka:CreateCluster",
    "kafka:CreateConfiguration",
    "kafka:DeleteCluster",
    "kafka:DeleteConfiguration",
    "kafka:DescribeCluster",
    "kafka:DescribeClusterOperation",
    "kafka:DescribeConfiguration",
    "kafka:DescribeConfigurationRevision",
    "kafka:GetBootstrapBrokers",
    "kafka:GetCompatibleKafkaVersions",
    "kafka:ListClusterOperations",
    "kafka:ListClusters",
    "kafka:ListConfigurations",
    "kafka:ListNodes",
    "kafka:ListScramSecrets",
    "kafka:ListTagsForResource",
    "kafka:TagResource",
    "kafka:UntagResource",
    "kafka:UpdateBrokerCount",
    "kafka:UpdateBrokerStorage",
    "kafka:UpdateClusterConfiguration",
    "kafka:UpdateClusterKafkaVersion",
    "kafka:UpdateConfiguration",
    "kafka:UpdateMonitoring",
    "kendra:BatchDeleteDocument",
    "kendra:BatchPutDocument",
    "kendra:CreateDataSource",
    "kendra:CreateFaq",
    "kendra:CreateIndex",
    "kendra:DeleteDataSource",
    "kendra:DeleteFaq",
    "kendra:DeleteIndex",
    "kendra:DescribeDataSource",
    "kendra:DescribeFaq",
    "kendra:DescribeIndex",
    "kendra:ListDataSourceSyncJobs",
    "kendra:ListDataSources",
    "kendra:ListFaqs",
    "kendra:ListIndices",
    "kendra:ListTagsForResource",
    "kendra:Query",
    "kendra:StartDataSourceSyncJob",
    "kendra:StopDataSourceSyncJob",
    "kendra:SubmitFeedback",
    "kendra:TagResource",
    "kendra:UntagResource",
    "kendra:UpdateDataSource",
    "kendra:UpdateIndex",
    "kinesis:AddTagsToStream",
    "kinesis:CreateStream",
    "kinesis:DecreaseStreamRetentionPeriod",
    "kinesis:DeleteStream",
    "kinesis:DeregisterStreamConsumer",
    "kinesis:DescribeLimits",
    "kinesis:DescribeStream",
    "kinesis:DescribeStreamConsumer",
    "kinesis:DescribeStreamSummary",
    "kinesis:DisableEnhancedMonitoring",
    "kinesis:EnableEnhancedMonitoring",
    "kinesis:GetRecords",
    "kinesis:GetShardIterator",
    "kinesis:IncreaseStreamRetentionPeriod",
    "kinesis:ListShards",
    "kinesis:ListStreamConsumers",
    "kinesis:ListStreams",
    "kinesis:ListTagsForStream",
    "kinesis:MergeShards",
    "kinesis:PutRecord",
    "kinesis:PutRecords",
    "kinesis:RegisterStreamConsumer",
    "kinesis:RemoveTagsFromStream",
    "kinesis:SplitShard",
    "kinesis:StartStreamEncryption",
    "kinesis:StopStreamEncryption",
    "kinesis:SubscribeToShard",
    "kinesis:UpdateShardCount",
    "kinesisanalytics:AddApplicationCloudWatchLoggingOption",
    "kinesisanalytics:AddApplicationInput",
    "kinesisanalytics:AddApplicationInputProcessingConfiguration",
    "kinesisanalytics:AddApplicationOutput",
    "kinesisanalytics:AddApplicationReferenceDataSource",
    "kinesisanalytics:AddApplicationVpcConfiguration",
    "kinesisanalytics:CreateApplication",
    "kinesisanalytics:CreateApplicationSnapshot",
    "kinesisanalytics:DeleteApplication",
    "kinesisanalytics:DeleteApplicationCloudWatchLoggingOption",
    "kinesisanalytics:DeleteApplicationInputProcessingConfiguration",
    "kinesisanalytics:DeleteApplicationOutput",
    "kinesisanalytics:DeleteApplicationReferenceDataSource",
    "kinesisanalytics:DeleteApplicationSnapshot",
    "kinesisanalytics:DeleteApplicationVpcConfiguration",
    "kinesisanalytics:DescribeApplication",
    "kinesisanalytics:DescribeApplicationSnapshot",
    "kinesisanalytics:DiscoverInputSchema",
    "kinesisanalytics:GetApplicationState",
    "kinesisanalytics:ListApplicationSnapshots",
    "kinesisanalytics:ListApplications",
    "kinesisanalytics:ListTagsForResource",
    "kinesisanalytics:StartApplication",
    "kinesisanalytics:StopApplication",
    "kinesisanalytics:TagResource",
    "kinesisanalytics:UntagResource",
    "kinesisanalytics:UpdateApplication",
    "kinesisvideo:ConnectAsMaster",
    "kinesisvideo:ConnectAsViewer",
    "kinesisvideo:CreateSignalingChannel",
    "kinesisvideo:CreateStream",
    "kinesisvideo:DeleteSignalingChannel",
    "kinesisvideo:DeleteStream",
    "kinesisvideo:DescribeSignalingChannel",
    "kinesisvideo:DescribeStream",
    "kinesisvideo:GetClip",
    "kinesisvideo:GetDASHStreamingSessionURL",
    "kinesisvideo:GetDataEndpoint",
    "kinesisvideo:GetHLSStreamingSessionURL",
    "kinesisvideo:GetIceServerConfig",
    "kinesisvideo:GetMedia",
    "kinesisvideo:GetMediaForFragmentList",
    "kinesisvideo:GetSignalingChannelEndpoint",
    "kinesisvideo:ListFragments",
    "kinesisvideo:ListSignalingChannels",
    "kinesisvideo:ListStreams",
    "kinesisvideo:ListTagsForResource",
    "kinesisvideo:ListTagsForStream",
    "kinesisvideo:PutMedia",
    "kinesisvideo:SendAlexaOfferToMaster",
    "kinesisvideo:TagResource",
    "kinesisvideo:TagStream",
    "kinesisvideo:UntagResource",
    "kinesisvideo:UntagStream",
    "kinesisvideo:UpdateDataRetention",
    "kinesisvideo:UpdateSignalingChannel",
    "kinesisvideo:UpdateStream",
    "kms:CancelKeyDeletion",
    "kms:ConnectCustomKeyStore",
    "kms:CreateAlias",
    "kms:CreateCustomKeyStore",
    "kms:CreateGrant",
    "kms:CreateKey",
    "kms:Decrypt",
    "kms:DeleteAlias",
    "kms:DeleteCustomKeyStore",
    "kms:DeleteImportedKeyMaterial",
    "kms:DescribeCustomKeyStores",
    "kms:DescribeKey",
    "kms:DisableKey",
    "kms:DisableKeyRotation",
    "kms:DisconnectCustomKeyStore",
    "kms:EnableKey",
    "kms:EnableKeyRotation",
    "kms:Encrypt",
    "kms:GenerateDataKey",
    "kms:GenerateDataKeyPair",
    "kms:GenerateDataKeyPairWithoutPlaintext",
    "kms:GenerateDataKeyWithoutPlaintext",
    "kms:GenerateRandom",
    "kms:GetKeyPolicy",
    "kms:GetKeyRotationStatus",
    "kms:GetParametersForImport",
    "kms:GetPublicKey",
    "kms:ImportKeyMaterial",
    "kms:ListAliases",
    "kms:ListGrants",
    "kms:ListKeyPolicies",
    "kms:ListKeys",
    "kms:ListResourceTags",
    "kms:ListRetirableGrants",
    "kms:PutKeyPolicy",
    "kms:ReEncryptFrom",
    "kms:ReEncryptTo",
    "kms:RetireGrant",
    "kms:RevokeGrant",
    "kms:ScheduleKeyDeletion",
    "kms:Sign",
    "kms:TagResource",
    "kms:UntagResource",
    "kms:UpdateAlias",
    "kms:UpdateCustomKeyStore",
    "kms:UpdateKeyDescription",
    "kms:Verify",
    "lakeformation:BatchGrantPermissions",
    "lakeformation:BatchRevokePermissions",
    "lakeformation:DeregisterResource",
    "lakeformation:DescribeResource",
    "lakeformation:GetDataAccess",
    "lakeformation:GetDataLakeSettings",
    "lakeformation:GetEffectivePermissionsForPath",
    "lakeformation:GrantPermissions",
    "lakeformation:ListPermissions",
    "lakeformation:ListResources",
    "lakeformation:PutDataLakeSettings",
    "lakeformation:RegisterResource",
    "lakeformation:RevokePermissions",
    "lakeformation:UpdateResource",
    "lambda:AddLayerVersionPermission",
    "lambda:AddPermission",
    "lambda:CreateAlias",
    "lambda:CreateCodeSigningConfig",
    "lambda:CreateEventSourceMapping",
    "lambda:CreateFunction",
    "lambda:DeleteAlias",
    "lambda:DeleteCodeSigningConfig",
    "lambda:DeleteEventSourceMapping",
    "lambda:DeleteFunction",
    "lambda:DeleteFunctionCodeSigningConfig",
    "lambda:DeleteFunctionConcurrency",
    "lambda:DeleteFunctionEventInvokeConfig",
    "lambda:DeleteLayerVersion",
    "lambda:DeleteProvisionedConcurrencyConfig",
    "lambda:DisableReplication",
    "lambda:EnableReplication",
    "lambda:GetAccountSettings",
    "lambda:GetAlias",
    "lambda:GetCodeSigningConfig",
    "lambda:GetEventSourceMapping",
    "lambda:GetFunction",
    "lambda:GetFunctionCodeSigningConfig",
    "lambda:GetFunctionConcurrency",
    "lambda:GetFunctionConfiguration",
    "lambda:GetFunctionEventInvokeConfig",
    "lambda:GetLayerVersion",
    "lambda:GetLayerVersionPolicy",
    "lambda:GetPolicy",
    "lambda:GetProvisionedConcurrencyConfig",
    "lambda:InvokeAsync",
    "lambda:InvokeFunction",
    "lambda:ListAliases",
    "lambda:ListCodeSigningConfigs",
    "lambda:ListEventSourceMappings",
    "lambda:ListFunctionEventInvokeConfigs",
    "lambda:ListFunctions",
    "lambda:ListFunctionsByCodeSigningConfig",
    "lambda:ListLayerVersions",
    "lambda:ListLayers",
    "lambda:ListProvisionedConcurrencyConfigs",
    "lambda:ListTags",
    "lambda:ListVersionsByFunction",
    "lambda:PublishLayerVersion",
    "lambda:PublishVersion",
    "lambda:PutFunctionCodeSigningConfig",
    "lambda:PutFunctionConcurrency",
    "lambda:PutFunctionEventInvokeConfig",
    "lambda:PutProvisionedConcurrencyConfig",
    "lambda:RemoveLayerVersionPermission",
    "lambda:RemovePermission",
    "lambda:TagResource",
    "lambda:UntagResource",
    "lambda:UpdateAlias",
    "lambda:UpdateCodeSigningConfig",
    "lambda:UpdateEventSourceMapping",
    "lambda:UpdateFunctionCode",
    "lambda:UpdateFunctionCodeSigningConfig",
    "lambda:UpdateFunctionConfiguration",
    "lambda:UpdateFunctionEventInvokeConfig",
    "launchwizard:DeleteApp",
    "launchwizard:DescribeProvisionedApp",
    "launchwizard:DescribeProvisioningEvents",
    "launchwizard:GetInfrastructureSuggestion",
    "launchwizard:GetIpAddress",
    "launchwizard:GetResourceCostEstimate",
    "launchwizard:ListProvisionedApps",
    "launchwizard:StartProvisioning",
    "lex:CreateBotVersion",
    "lex:CreateIntentVersion",
    "lex:CreateSlotTypeVersion",
    "lex:DeleteBot",
    "lex:DeleteBotAlias",
    "lex:DeleteBotChannelAssociation",
    "lex:DeleteBotVersion",
    "lex:DeleteIntent",
    "lex:DeleteIntentVersion",
    "lex:DeleteSession",
    "lex:DeleteSlotType",
    "lex:DeleteSlotTypeVersion",
    "lex:DeleteUtterances",
    "lex:GetBot",
    "lex:GetBotAlias",
    "lex:GetBotAliases",
    "lex:GetBotChannelAssociation",
    "lex:GetBotChannelAssociations",
    "lex:GetBotVersions",
    "lex:GetBots",
    "lex:GetBuiltinIntent",
    "lex:GetBuiltinIntents",
    "lex:GetBuiltinSlotTypes",
    "lex:GetExport",
    "lex:GetImport",
    "lex:GetIntent",
    "lex:GetIntentVersions",
    "lex:GetIntents",
    "lex:GetSession",
    "lex:GetSlotType",
    "lex:GetSlotTypeVersions",
    "lex:GetSlotTypes",
    "lex:GetUtterancesView",
    "lex:ListTagsForResource",
    "lex:PostContent",
    "lex:PostText",
    "lex:PutBot",
    "lex:PutBotAlias",
    "lex:PutIntent",
    "lex:PutSession",
    "lex:PutSlotType",
    "lex:StartImport",
    "lex:TagResource",
    "lex:UntagResource",
    "license-manager:CreateLicenseConfiguration",
    "license-manager:DeleteLicenseConfiguration",
    "license-manager:GetLicenseConfiguration",
    "license-manager:GetServiceSettings",
    "license-manager:ListAssociationsForLicenseConfiguration",
    "license-manager:ListFailuresForLicenseConfigurationOperations",
    "license-manager:ListLicenseConfigurations",
    "license-manager:ListLicenseSpecificationsForResource",
    "license-manager:ListResourceInventory",
    "license-manager:ListTagsForResource",
    "license-manager:ListUsageForLicenseConfiguration",
    "license-manager:TagResource",
    "license-manager:UntagResource",
    "license-manager:UpdateLicenseConfiguration",
    "license-manager:UpdateLicenseSpecificationsForResource",
    "license-manager:UpdateServiceSettings",
    "lightsail:AllocateStaticIp",
    "lightsail:AttachDisk",
    "lightsail:AttachInstancesToLoadBalancer",
    "lightsail:AttachLoadBalancerTlsCertificate",
    "lightsail:AttachStaticIp",
    "lightsail:CloseInstancePublicPorts",
    "lightsail:CopySnapshot",
    "lightsail:CreateCloudFormationStack",
    "lightsail:CreateDisk",
    "lightsail:CreateDiskFromSnapshot",
    "lightsail:CreateDiskSnapshot",
    "lightsail:CreateDomain",
    "lightsail:CreateDomainEntry",
    "lightsail:CreateInstanceSnapshot",
    "lightsail:CreateInstances",
    "lightsail:CreateInstancesFromSnapshot",
    "lightsail:CreateKeyPair",
    "lightsail:CreateLoadBalancer",
    "lightsail:CreateLoadBalancerTlsCertificate",
    "lightsail:CreateRelationalDatabase",
    "lightsail:CreateRelationalDatabaseFromSnapshot",
    "lightsail:CreateRelationalDatabaseSnapshot",
    "lightsail:DeleteDisk",
    "lightsail:DeleteDiskSnapshot",
    "lightsail:DeleteDomain",
    "lightsail:DeleteDomainEntry",
    "lightsail:DeleteInstance",
    "lightsail:DeleteInstanceSnapshot",
    "lightsail:DeleteKeyPair",
    "lightsail:DeleteKnownHostKeys",
    "lightsail:DeleteLoadBalancer",
    "lightsail:DeleteLoadBalancerTlsCertificate",
    "lightsail:DeleteRelationalDatabase",
    "lightsail:DeleteRelationalDatabaseSnapshot",
    "lightsail:DetachDisk",
    "lightsail:DetachInstancesFromLoadBalancer",
    "lightsail:DetachStaticIp",
    "lightsail:DownloadDefaultKeyPair",
    "lightsail:ExportSnapshot",
    "lightsail:GetActiveNames",
    "lightsail:GetBlueprints",
    "lightsail:GetBundles",
    "lightsail:GetCloudFormationStackRecords",
    "lightsail:GetDisk",
    "lightsail:GetDiskSnapshot",
    "lightsail:GetDiskSnapshots",
    "lightsail:GetDisks",
    "lightsail:GetDomain",
    "lightsail:GetDomains",
    "lightsail:GetExportSnapshotRecords",
    "lightsail:GetInstance",
    "lightsail:GetInstanceAccessDetails",
    "lightsail:GetInstanceMetricData",
    "lightsail:GetInstancePortStates",
    "lightsail:GetInstanceSnapshot",
    "lightsail:GetInstanceSnapshots",
    "lightsail:GetInstanceState",
    "lightsail:GetInstances",
    "lightsail:GetKeyPair",
    "lightsail:GetKeyPairs",
    "lightsail:GetLoadBalancer",
    "lightsail:GetLoadBalancerMetricData",
    "lightsail:GetLoadBalancerTlsCertificates",
    "lightsail:GetLoadBalancers",
    "lightsail:GetOperation",
    "lightsail:GetOperations",
    "lightsail:GetOperationsForResource",
    "lightsail:GetRegions",
    "lightsail:GetRelationalDatabase",
    "lightsail:GetRelationalDatabaseBlueprints",
    "lightsail:GetRelationalDatabaseBundles",
    "lightsail:GetRelationalDatabaseEvents",
    "lightsail:GetRelationalDatabaseLogEvents",
    "lightsail:GetRelationalDatabaseLogStreams",
    "lightsail:GetRelationalDatabaseMasterUserPassword",
    "lightsail:GetRelationalDatabaseMetricData",
    "lightsail:GetRelationalDatabaseParameters",
    "lightsail:GetRelationalDatabaseSnapshot",
    "lightsail:GetRelationalDatabaseSnapshots",
    "lightsail:GetRelationalDatabases",
    "lightsail:GetStaticIp",
    "lightsail:GetStaticIps",
    "lightsail:ImportKeyPair",
    "lightsail:IsVpcPeered",
    "lightsail:OpenInstancePublicPorts",
    "lightsail:PeerVpc",
    "lightsail:PutInstancePublicPorts",
    "lightsail:RebootInstance",
    "lightsail:RebootRelationalDatabase",
    "lightsail:ReleaseStaticIp",
    "lightsail:StartInstance",
    "lightsail:StartRelationalDatabase",
    "lightsail:StopInstance",
    "lightsail:StopRelationalDatabase",
    "lightsail:TagResource",
    "lightsail:UnpeerVpc",
    "lightsail:UntagResource",
    "lightsail:UpdateDomainEntry",
    "lightsail:UpdateLoadBalancerAttribute",
    "lightsail:UpdateRelationalDatabase",
    "lightsail:UpdateRelationalDatabaseParameters",
    "logs:AssociateKmsKey",
    "logs:CancelExportTask",
    "logs:CreateExportTask",
    "logs:CreateLogDelivery",
    "logs:CreateLogGroup",
    "logs:CreateLogStream",
    "logs:DeleteDestination",
    "logs:DeleteLogDelivery",
    "logs:DeleteLogGroup",
    "logs:DeleteLogStream",
    "logs:DeleteMetricFilter",
    "logs:DeleteResourcePolicy",
    "logs:DeleteRetentionPolicy",
    "logs:DeleteSubscriptionFilter",
    "logs:DescribeDestinations",
    "logs:DescribeExportTasks",
    "logs:DescribeLogGroups",
    "logs:DescribeLogStreams",
    "logs:DescribeMetricFilters",
    "logs:DescribeQueries",
    "logs:DescribeResourcePolicies",
    "logs:DescribeSubscriptionFilters",
    "logs:DisassociateKmsKey",
    "logs:FilterLogEvents",
    "logs:GetLogDelivery",
    "logs:GetLogEvents",
    "logs:GetLogGroupFields",
    "logs:GetLogRecord",
    "logs:GetQueryResults",
    "logs:ListLogDeliveries",
    "logs:ListTagsLogGroup",
    "logs:PutDestination",
    "logs:PutDestinationPolicy",
    "logs:PutLogEvents",
    "logs:PutMetricFilter",
    "logs:PutResourcePolicy",
    "logs:PutRetentionPolicy",
    "logs:PutSubscriptionFilter",
    "logs:StartQuery",
    "logs:StopQuery",
    "logs:TagLogGroup",
    "logs:TestMetricFilter",
    "logs:UntagLogGroup",
    "logs:UpdateLogDelivery",
    "machinelearning:AddTags",
    "machinelearning:CreateBatchPrediction",
    "machinelearning:CreateDataSourceFromRDS",
    "machinelearning:CreateDataSourceFromRedshift",
    "machinelearning:CreateDataSourceFromS3",
    "machinelearning:CreateEvaluation",
    "machinelearning:CreateMLModel",
    "machinelearning:CreateRealtimeEndpoint",
    "machinelearning:DeleteBatchPrediction",
    "machinelearning:DeleteDataSource",
    "machinelearning:DeleteEvaluation",
    "machinelearning:DeleteMLModel",
    "machinelearning:DeleteRealtimeEndpoint",
    "machinelearning:DeleteTags",
    "machinelearning:DescribeBatchPredictions",
    "machinelearning:DescribeDataSources",
    "machinelearning:DescribeEvaluations",
    "machinelearning:DescribeMLModels",
    "machinelearning:DescribeTags",
    "machinelearning:GetBatchPrediction",
    "machinelearning:GetDataSource",
    "machinelearning:GetEvaluation",
    "machinelearning:GetMLModel",
    "machinelearning:Predict",
    "machinelearning:UpdateBatchPrediction",
    "machinelearning:UpdateDataSource",
    "machinelearning:UpdateEvaluation",
    "machinelearning:UpdateMLModel",
    "macie2:AcceptInvitation",
    "macie2:ArchiveFindings",
    "macie2:BatchGetCustomDataIdentifiers",
    "macie2:CreateClassificationJob",
    "macie2:CreateCustomDataIdentifier",
    "macie2:CreateFindingsFilter",
    "macie2:CreateInvitations",
    "macie2:CreateMember",
    "macie2:CreateSampleFindings",
    "macie2:DeclineInvitations",
    "macie2:DeleteCustomDataIdentifier",
    "macie2:DeleteFindingsFilter",
    "macie2:DeleteInvitations",
    "macie2:DeleteMember",
    "macie2:DescribeBuckets",
    "macie2:DescribeClassificationJob",
    "macie2:DescribeOrganizationConfiguration",
    "macie2:DisableMacie",
    "macie2:DisableOrganizationAdminAccount",
    "macie2:DisassociateFromMasterAccount",
    "macie2:DisassociateMember",
    "macie2:EnableMacie",
    "macie2:EnableOrganizationAdminAccount",
    "macie2:GetBucketStatistics",
    "macie2:GetClassificationExportConfiguration",
    "macie2:GetCustomDataIdentifier",
    "macie2:GetFindingStatistics",
    "macie2:GetFindings",
    "macie2:GetFindingsFilter",
    "macie2:GetInvitationsCount",
    "macie2:GetMacieSession",
    "macie2:GetMasterAccount",
    "macie2:GetMember",
    "macie2:GetUsageStatistics",
    "macie2:GetUsageTotals",
    "macie2:ListClassificationJobs",
    "macie2:ListCustomDataIdentifiers",
    "macie2:ListFindings",
    "macie2:ListFindingsFilters",
    "macie2:ListInvitations",
    "macie2:ListMembers",
    "macie2:ListOrganizationAdminAccounts",
    "macie2:ListTagsForResources",
    "macie2:PutClassificationExportConfiguration",
    "macie2:TagResource",
    "macie2:TestCustomDataIdentifier",
    "macie2:UnarchiveFindings",
    "macie2:UntagResource",
    "macie2:UpdateClassificationJob",
    "macie2:UpdateFindingsFilter",
    "macie2:UpdateMacieSession",
    "macie2:UpdateMemberSession",
    "macie2:UpdateOrganizationConfiguration",
    "macie:AssociateMemberAccount",
    "macie:AssociateS3Resources",
    "macie:DisassociateMemberAccount",
    "macie:DisassociateS3Resources",
    "macie:ListMemberAccounts",
    "macie:ListS3Resources",
    "macie:UpdateS3Resources",
    "managedblockchain:CreateMember",
    "managedblockchain:CreateNetwork",
    "managedblockchain:CreateNode",
    "managedblockchain:CreateProposal",
    "managedblockchain:DeleteMember",
    "managedblockchain:DeleteNode",
    "managedblockchain:GetMember",
    "managedblockchain:GetNetwork",
    "managedblockchain:GetNode",
    "managedblockchain:GetProposal",
    "managedblockchain:ListInvitations",
    "managedblockchain:ListMembers",
    "managedblockchain:ListNetworks",
    "managedblockchain:ListNodes",
    "managedblockchain:ListProposalVotes",
    "managedblockchain:ListProposals",
    "managedblockchain:RejectInvitation",
    "managedblockchain:UpdateMember",
    "managedblockchain:UpdateNode",
    "managedblockchain:VoteOnProposal",
    "mechanicalturk:AcceptQualificationRequest",
    "mechanicalturk:ApproveAssignment",
    "mechanicalturk:AssociateQualificationWithWorker",
    "mechanicalturk:CreateAdditionalAssignmentsForHIT",
    "mechanicalturk:CreateHIT",
    "mechanicalturk:CreateHITType",
    "mechanicalturk:CreateHITWithHITType",
    "mechanicalturk:CreateQualificationType",
    "mechanicalturk:CreateWorkerBlock",
    "mechanicalturk:DeleteHIT",
    "mechanicalturk:DeleteQualificationType",
    "mechanicalturk:DeleteWorkerBlock",
    "mechanicalturk:DisassociateQualificationFromWorker",
    "mechanicalturk:GetAccountBalance",
    "mechanicalturk:GetAssignment",
    "mechanicalturk:GetFileUploadURL",
    "mechanicalturk:GetHIT",
    "mechanicalturk:GetQualificationScore",
    "mechanicalturk:GetQualificationType",
    "mechanicalturk:ListAssignmentsForHIT",
    "mechanicalturk:ListBonusPayments",
    "mechanicalturk:ListHITs",
    "mechanicalturk:ListHITsForQualificationType",
    "mechanicalturk:ListQualificationRequests",
    "mechanicalturk:ListQualificationTypes",
    "mechanicalturk:ListReviewPolicyResultsForHIT",
    "mechanicalturk:ListReviewableHITs",
    "mechanicalturk:ListWorkerBlocks",
    "mechanicalturk:ListWorkersWithQualificationType",
    "mechanicalturk:NotifyWorkers",
    "mechanicalturk:RejectAssignment",
    "mechanicalturk:RejectQualificationRequest",
    "mechanicalturk:SendBonus",
    "mechanicalturk:SendTestEventNotification",
    "mechanicalturk:UpdateExpirationForHIT",
    "mechanicalturk:UpdateHITReviewStatus",
    "mechanicalturk:UpdateHITTypeOfHIT",
    "mechanicalturk:UpdateNotificationSettings",
    "mechanicalturk:UpdateQualificationType",
    "mediaconnect:AddFlowOutputs",
    "mediaconnect:CreateFlow",
    "mediaconnect:DeleteFlow",
    "mediaconnect:DescribeFlow",
    "mediaconnect:GrantFlowEntitlements",
    "mediaconnect:ListEntitlements",
    "mediaconnect:ListFlows",
    "mediaconnect:RemoveFlowOutput",
    "mediaconnect:RevokeFlowEntitlement",
    "mediaconnect:StartFlow",
    "mediaconnect:StopFlow",
    "mediaconnect:UpdateFlowEntitlement",
    "mediaconnect:UpdateFlowOutput",
    "mediaconnect:UpdateFlowSource",
    "mediaconvert:AssociateCertificate",
    "mediaconvert:CancelJob",
    "mediaconvert:CreateJob",
    "mediaconvert:CreateJobTemplate",
    "mediaconvert:CreatePreset",
    "mediaconvert:CreateQueue",
    "mediaconvert:DeleteJobTemplate",
    "mediaconvert:DeletePreset",
    "mediaconvert:DeleteQueue",
    "mediaconvert:DescribeEndpoints",
    "mediaconvert:DisassociateCertificate",
    "mediaconvert:GetJob",
    "mediaconvert:GetJobTemplate",
    "mediaconvert:GetPreset",
    "mediaconvert:GetQueue",
    "mediaconvert:ListJobTemplates",
    "mediaconvert:ListJobs",
    "mediaconvert:ListPresets",
    "mediaconvert:ListQueues",
    "mediaconvert:ListTagsForResource",
    "mediaconvert:TagResource",
    "mediaconvert:UntagResource",
    "mediaconvert:UpdateJobTemplate",
    "mediaconvert:UpdatePreset",
    "mediaconvert:UpdateQueue",
    "medialive:AcceptInputDeviceTransfer",
    "medialive:BatchDelete",
    "medialive:BatchStart",
    "medialive:BatchStop",
    "medialive:BatchUpdateSchedule",
    "medialive:CancelInputDeviceTransfer",
    "medialive:CreateChannel",
    "medialive:CreateInput",
    "medialive:CreateInputSecurityGroup",
    "medialive:CreateMultiplex",
    "medialive:CreateMultiplexProgram",
    "medialive:CreateTags",
    "medialive:DeleteChannel",
    "medialive:DeleteInput",
    "medialive:DeleteInputSecurityGroup",
    "medialive:DeleteMultiplex",
    "medialive:DeleteMultiplexProgram",
    "medialive:DeleteReservation",
    "medialive:DeleteTags",
    "medialive:DescribeChannel",
    "medialive:DescribeInput",
    "medialive:DescribeInputDevice",
    "medialive:DescribeInputDeviceThumbnail",
    "medialive:DescribeInputSecurityGroup",
    "medialive:DescribeMultiplex",
    "medialive:DescribeMultiplexProgram",
    "medialive:DescribeOffering",
    "medialive:DescribeReservation",
    "medialive:DescribeSchedule",
    "medialive:ListChannels",
    "medialive:ListInputDeviceTransfers",
    "medialive:ListInputDevices",
    "medialive:ListInputSecurityGroups",
    "medialive:ListInputs",
    "medialive:ListMultiplexPrograms",
    "medialive:ListMultiplexes",
    "medialive:ListOfferings",
    "medialive:ListReservations",
    "medialive:ListTagsForResource",
    "medialive:PurchaseOffering",
    "medialive:RejectInputDeviceTransfer",
    "medialive:StartChannel",
    "medialive:StartMultiplex",
    "medialive:StopChannel",
    "medialive:StopMultiplex",
    "medialive:TransferInputDevice",
    "medialive:UpdateChannel",
    "medialive:UpdateChannelClass",
    "medialive:UpdateInput",
    "medialive:UpdateInputDevice",
    "medialive:UpdateInputSecurityGroup",
    "medialive:UpdateMultiplex",
    "medialive:UpdateMultiplexProgram",
    "medialive:UpdateReservation",
    "mediapackage-vod:CreateAsset",
    "mediapackage-vod:CreatePackagingConfiguration",
    "mediapackage-vod:CreatePackagingGroup",
    "mediapackage-vod:DeleteAsset",
    "mediapackage-vod:DeletePackagingConfiguration",
    "mediapackage-vod:DeletePackagingGroup",
    "mediapackage-vod:DescribeAsset",
    "mediapackage-vod:DescribePackagingConfiguration",
    "mediapackage-vod:DescribePackagingGroup",
    "mediapackage-vod:ListAssets",
    "mediapackage-vod:ListPackagingConfigurations",
    "mediapackage-vod:ListPackagingGroups",
    "mediapackage:CreateChannel",
    "mediapackage:CreateHarvestJob",
    "mediapackage:CreateOriginEndpoint",
    "mediapackage:DeleteChannel",
    "mediapackage:DeleteOriginEndpoint",
    "mediapackage:DescribeChannel",
    "mediapackage:DescribeHarvestJob",
    "mediapackage:DescribeOriginEndpoint",
    "mediapackage:ListChannels",
    "mediapackage:ListHarvestJobs",
    "mediapackage:ListOriginEndpoints",
    "mediapackage:ListTagsForResource",
    "mediapackage:RotateIngestEndpointCredentials",
    "mediapackage:TagResource",
    "mediapackage:UntagResource",
    "mediapackage:UpdateChannel",
    "mediapackage:UpdateOriginEndpoint",
    "mediastore:CreateContainer",
    "mediastore:DeleteContainer",
    "mediastore:DeleteContainerPolicy",
    "mediastore:DeleteCorsPolicy",
    "mediastore:DeleteLifecyclePolicy",
    "mediastore:DeleteMetricPolicy",
    "mediastore:DeleteObject",
    "mediastore:DescribeContainer",
    "mediastore:DescribeObject",
    "mediastore:GetContainerPolicy",
    "mediastore:GetCorsPolicy",
    "mediastore:GetLifecyclePolicy",
    "mediastore:GetMetricPolicy",
    "mediastore:GetObject",
    "mediastore:ListContainers",
    "mediastore:ListItems",
    "mediastore:ListTagsForResource",
    "mediastore:PutContainerPolicy",
    "mediastore:PutCorsPolicy",
    "mediastore:PutLifecyclePolicy",
    "mediastore:PutMetricPolicy",
    "mediastore:PutObject",
    "mediastore:StartAccessLogging",
    "mediastore:StopAccessLogging",
    "mediastore:TagResource",
    "mediastore:UntagResource",
    "mediatailor:DeletePlaybackConfiguration",
    "mediatailor:GetPlaybackConfiguration",
    "mediatailor:ListPlaybackConfigurations",
    "mediatailor:ListTagsForResource",
    "mediatailor:PutPlaybackConfiguration",
    "mediatailor:TagResource",
    "mediatailor:UntagResource",
    "mgh:AssociateCreatedArtifact",
    "mgh:AssociateDiscoveredResource",
    "mgh:CreateHomeRegionControl",
    "mgh:CreateProgressUpdateStream",
    "mgh:DeleteProgressUpdateStream",
    "mgh:DescribeApplicationState",
    "mgh:DescribeHomeRegionControls",
    "mgh:DescribeMigrationTask",
    "mgh:DisassociateCreatedArtifact",
    "mgh:DisassociateDiscoveredResource",
    "mgh:GetHomeRegion",
    "mgh:ImportMigrationTask",
    "mgh:ListCreatedArtifacts",
    "mgh:ListDiscoveredResources",
    "mgh:ListMigrationTasks",
    "mgh:ListProgressUpdateStreams",
    "mgh:NotifyApplicationState",
    "mgh:NotifyMigrationTaskState",
    "mgh:PutResourceAttributes",
    "mobileanalytics:GetFinancialReports",
    "mobileanalytics:GetReports",
    "mobileanalytics:PutEvents",
    "mobilehub:CreateProject",
    "mobilehub:CreateServiceRole",
    "mobilehub:DeleteProject",
    "mobilehub:DeleteProjectSnapshot",
    "mobilehub:DeployToStage",
    "mobilehub:DescribeBundle",
    "mobilehub:ExportBundle",
    "mobilehub:ExportProject",
    "mobilehub:GenerateProjectParameters",
    "mobilehub:GetProject",
    "mobilehub:GetProjectSnapshot",
    "mobilehub:ImportProject",
    "mobilehub:InstallBundle",
    "mobilehub:ListAvailableConnectors",
    "mobilehub:ListAvailableFeatures",
    "mobilehub:ListAvailableRegions",
    "mobilehub:ListBundles",
    "mobilehub:ListProjectSnapshots",
    "mobilehub:ListProjects",
    "mobilehub:SynchronizeProject",
    "mobilehub:UpdateProject",
    "mobilehub:ValidateProject",
    "mobilehub:VerifyServiceRole",
    "mobiletargeting:CreateApp",
    "mobiletargeting:CreateCampaign",
    "mobiletargeting:CreateEmailTemplate",
    "mobiletargeting:CreateExportJob",
    "mobiletargeting:CreateImportJob",
    "mobiletargeting:CreateJourney",
    "mobiletargeting:CreatePushTemplate",
    "mobiletargeting:CreateRecommenderConfiguration",
    "mobiletargeting:CreateSegment",
    "mobiletargeting:CreateSmsTemplate",
    "mobiletargeting:CreateVoiceTemplate",
    "mobiletargeting:DeleteAdmChannel",
    "mobiletargeting:DeleteApnsChannel",
    "mobiletargeting:DeleteApnsSandboxChannel",
    "mobiletargeting:DeleteApnsVoipChannel",
    "mobiletargeting:DeleteApnsVoipSandboxChannel",
    "mobiletargeting:DeleteApp",
    "mobiletargeting:DeleteBaiduChannel",
    "mobiletargeting:DeleteCampaign",
    "mobiletargeting:DeleteEmailChannel",
    "mobiletargeting:DeleteEmailTemplate",
    "mobiletargeting:DeleteEndpoint",
    "mobiletargeting:DeleteEventStream",
    "mobiletargeting:DeleteGcmChannel",
    "mobiletargeting:DeleteJourney",
    "mobiletargeting:DeletePushTemplate",
    "mobiletargeting:DeleteRecommenderConfiguration",
    "mobiletargeting:DeleteSegment",
    "mobiletargeting:DeleteSmsChannel",
    "mobiletargeting:DeleteSmsTemplate",
    "mobiletargeting:DeleteUserEndpoints",
    "mobiletargeting:DeleteVoiceChannel",
    "mobiletargeting:DeleteVoiceTemplate",
    "mobiletargeting:GetAdmChannel",
    "mobiletargeting:GetApnsChannel",
    "mobiletargeting:GetApnsSandboxChannel",
    "mobiletargeting:GetApnsVoipChannel",
    "mobiletargeting:GetApnsVoipSandboxChannel",
    "mobiletargeting:GetApp",
    "mobiletargeting:GetApplicationSettings",
    "mobiletargeting:GetApps",
    "mobiletargeting:GetBaiduChannel",
    "mobiletargeting:GetCampaign",
    "mobiletargeting:GetCampaignActivities",
    "mobiletargeting:GetCampaignVersion",
    "mobiletargeting:GetCampaignVersions",
    "mobiletargeting:GetCampaigns",
    "mobiletargeting:GetChannels",
    "mobiletargeting:GetEmailChannel",
    "mobiletargeting:GetEmailTemplate",
    "mobiletargeting:GetEndpoint",
    "mobiletargeting:GetEventStream",
    "mobiletargeting:GetExportJob",
    "mobiletargeting:GetExportJobs",
    "mobiletargeting:GetGcmChannel",
    "mobiletargeting:GetImportJob",
    "mobiletargeting:GetImportJobs",
    "mobiletargeting:GetJourney",
    "mobiletargeting:GetPushTemplate",
    "mobiletargeting:GetRecommenderConfiguration",
    "mobiletargeting:GetRecommenderConfigurations",
    "mobiletargeting:GetSegment",
    "mobiletargeting:GetSegmentExportJobs",
    "mobiletargeting:GetSegmentImportJobs",
    "mobiletargeting:GetSegmentVersion",
    "mobiletargeting:GetSegmentVersions",
    "mobiletargeting:GetSegments",
    "mobiletargeting:GetSmsChannel",
    "mobiletargeting:GetSmsTemplate",
    "mobiletargeting:GetUserEndpoints",
    "mobiletargeting:GetVoiceChannel",
    "mobiletargeting:GetVoiceTemplate",
    "mobiletargeting:ListJourneys",
    "mobiletargeting:ListTagsForResource",
    "mobiletargeting:ListTemplateVersions",
    "mobiletargeting:ListTemplates",
    "mobiletargeting:PhoneNumberValidate",
    "mobiletargeting:PutEventStream",
    "mobiletargeting:PutEvents",
    "mobiletargeting:RemoveAttributes",
    "mobiletargeting:SendMessages",
    "mobiletargeting:SendUsersMessages",
    "mobiletargeting:TagResource",
    "mobiletargeting:UntagResource",
    "mobiletargeting:UpdateAdmChannel",
    "mobiletargeting:UpdateApnsChannel",
    "mobiletargeting:UpdateApnsSandboxChannel",
    "mobiletargeting:UpdateApnsVoipChannel",
    "mobiletargeting:UpdateApnsVoipSandboxChannel",
    "mobiletargeting:UpdateApplicationSettings",
    "mobiletargeting:UpdateBaiduChannel",
    "mobiletargeting:UpdateCampaign",
    "mobiletargeting:UpdateEmailChannel",
    "mobiletargeting:UpdateEmailTemplate",
    "mobiletargeting:UpdateEndpoint",
    "mobiletargeting:UpdateEndpointsBatch",
    "mobiletargeting:UpdateGcmChannel",
    "mobiletargeting:UpdateJourney",
    "mobiletargeting:UpdateJourneyState",
    "mobiletargeting:UpdatePushTemplate",
    "mobiletargeting:UpdateRecommenderConfiguration",
    "mobiletargeting:UpdateSegment",
    "mobiletargeting:UpdateSmsChannel",
    "mobiletargeting:UpdateSmsTemplate",
    "mobiletargeting:UpdateTemplateActiveVersion",
    "mobiletargeting:UpdateVoiceChannel",
    "mobiletargeting:UpdateVoiceTemplate",
    "mq:CreateBroker",
    "mq:CreateConfiguration",
    "mq:CreateTags",
    "mq:CreateUser",
    "mq:DeleteBroker",
    "mq:DeleteTags",
    "mq:DeleteUser",
    "mq:DescribeBroker",
    "mq:DescribeBrokerEngineTypes",
    "mq:DescribeBrokerInstanceOptions",
    "mq:DescribeConfiguration",
    "mq:DescribeConfigurationRevision",
    "mq:DescribeUser",
    "mq:ListBrokers",
    "mq:ListConfigurationRevisions",
    "mq:ListConfigurations",
    "mq:ListTags",
    "mq:ListUsers",
    "mq:RebootBroker",
    "mq:UpdateBroker",
    "mq:UpdateConfiguration",
    "mq:UpdateUser",
    "neptune-db:connect",
    "network-firewall:AssociateFirewallPolicy",
    "network-firewall:AssociateSubnets",
    "network-firewall:CreateFirewall",
    "network-firewall:CreateFirewallPolicy",
    "network-firewall:CreateRuleGroup",
    "network-firewall:DeleteFirewall",
    "network-firewall:DeleteFirewallPolicy",
    "network-firewall:DeleteResourcePolicy",
    "network-firewall:DeleteRuleGroup",
    "network-firewall:DescribeFirewall",
    "network-firewall:DescribeFirewallPolicy",
    "network-firewall:DescribeLoggingConfiguration",
    "network-firewall:DescribeResourcePolicy",
    "network-firewall:DescribeRuleGroup",
    "network-firewall:DisassociateSubnets",
    "network-firewall:ListFirewallPolicies",
    "network-firewall:ListFirewalls",
    "network-firewall:ListRuleGroups",
    "network-firewall:ListTagsForResource",
    "network-firewall:PutResourcePolicy",
    "network-firewall:TagResource",
    "network-firewall:UntagResource",
    "network-firewall:UpdateFirewallDeleteProtection",
    "network-firewall:UpdateFirewallDescription",
    "network-firewall:UpdateFirewallPolicy",
    "network-firewall:UpdateFirewallPolicyChangeProtection",
    "network-firewall:UpdateLoggingConfiguration",
    "network-firewall:UpdateRuleGroup",
    "network-firewall:UpdateSubnetChangeProtection",
    "networkmanager:AssociateCustomerGateway",
    "networkmanager:AssociateLink",
    "networkmanager:CreateDevice",
    "networkmanager:CreateGlobalNetwork",
    "networkmanager:CreateLink",
    "networkmanager:CreateSite",
    "networkmanager:DeleteDevice",
    "networkmanager:DeleteGlobalNetwork",
    "networkmanager:DeleteLink",
    "networkmanager:DeleteSite",
    "networkmanager:DeregisterTransitGateway",
    "networkmanager:DescribeGlobalNetworks",
    "networkmanager:DisassociateCustomerGateway",
    "networkmanager:DisassociateLink",
    "networkmanager:GetCustomerGatewayAssociations",
    "networkmanager:GetDevices",
    "networkmanager:GetLinkAssociations",
    "networkmanager:GetLinks",
    "networkmanager:GetSites",
    "networkmanager:GetTransitGatewayRegistrations",
    "networkmanager:ListTagsForResource",
    "networkmanager:RegisterTransitGateway",
    "networkmanager:TagResource",
    "networkmanager:UntagResource",
    "networkmanager:UpdateDevice",
    "networkmanager:UpdateGlobalNetwork",
    "networkmanager:UpdateLink",
    "networkmanager:UpdateSite",
    "opsworks-cm:AssociateNode",
    "opsworks-cm:CreateBackup",
    "opsworks-cm:CreateServer",
    "opsworks-cm:DeleteBackup",
    "opsworks-cm:DeleteServer",
    "opsworks-cm:DescribeAccountAttributes",
    "opsworks-cm:DescribeBackups",
    "opsworks-cm:DescribeEvents",
    "opsworks-cm:DescribeNodeAssociationStatus",
    "opsworks-cm:DescribeServers",
    "opsworks-cm:DisassociateNode",
    "opsworks-cm:ListTagsForResource",
    "opsworks-cm:RestoreServer",
    "opsworks-cm:StartMaintenance",
    "opsworks-cm:TagResource",
    "opsworks-cm:UntagResource",
    "opsworks-cm:UpdateServer",
    "opsworks-cm:UpdateServerEngineAttributes",
    "opsworks:AssignInstance",
    "opsworks:AssignVolume",
    "opsworks:AssociateElasticIp",
    "opsworks:AttachElasticLoadBalancer",
    "opsworks:CloneStack",
    "opsworks:CreateApp",
    "opsworks:CreateDeployment",
    "opsworks:CreateInstance",
    "opsworks:CreateLayer",
    "opsworks:CreateStack",
    "opsworks:CreateUserProfile",
    "opsworks:DeleteApp",
    "opsworks:DeleteInstance",
    "opsworks:DeleteLayer",
    "opsworks:DeleteStack",
    "opsworks:DeleteUserProfile",
    "opsworks:DeregisterEcsCluster",
    "opsworks:DeregisterElasticIp",
    "opsworks:DeregisterInstance",
    "opsworks:DeregisterRdsDbInstance",
    "opsworks:DeregisterVolume",
    "opsworks:DescribeAgentVersions",
    "opsworks:DescribeApps",
    "opsworks:DescribeCommands",
    "opsworks:DescribeDeployments",
    "opsworks:DescribeEcsClusters",
    "opsworks:DescribeElasticIps",
    "opsworks:DescribeElasticLoadBalancers",
    "opsworks:DescribeInstances",
    "opsworks:DescribeLayers",
    "opsworks:DescribeLoadBasedAutoScaling",
    "opsworks:DescribeMyUserProfile",
    "opsworks:DescribePermissions",
    "opsworks:DescribeRaidArrays",
    "opsworks:DescribeRdsDbInstances",
    "opsworks:DescribeServiceErrors",
    "opsworks:DescribeStackProvisioningParameters",
    "opsworks:DescribeStackSummary",
    "opsworks:DescribeStacks",
    "opsworks:DescribeTimeBasedAutoScaling",
    "opsworks:DescribeUserProfiles",
    "opsworks:DescribeVolumes",
    "opsworks:DetachElasticLoadBalancer",
    "opsworks:DisassociateElasticIp",
    "opsworks:GetHostnameSuggestion",
    "opsworks:GrantAccess",
    "opsworks:ListTags",
    "opsworks:RebootInstance",
    "opsworks:RegisterEcsCluster",
    "opsworks:RegisterElasticIp",
    "opsworks:RegisterInstance",
    "opsworks:RegisterRdsDbInstance",
    "opsworks:RegisterVolume",
    "opsworks:SetLoadBasedAutoScaling",
    "opsworks:SetPermission",
    "opsworks:SetTimeBasedAutoScaling",
    "opsworks:StartInstance",
    "opsworks:StartStack",
    "opsworks:StopInstance",
    "opsworks:StopStack",
    "opsworks:TagResource",
    "opsworks:UnassignInstance",
    "opsworks:UnassignVolume",
    "opsworks:UntagResource",
    "opsworks:UpdateApp",
    "opsworks:UpdateElasticIp",
    "opsworks:UpdateInstance",
    "opsworks:UpdateLayer",
    "opsworks:UpdateMyUserProfile",
    "opsworks:UpdateRdsDbInstance",
    "opsworks:UpdateStack",
    "opsworks:UpdateUserProfile",
    "opsworks:UpdateVolume",
    "organizations:AcceptHandshake",
    "organizations:AttachPolicy",
    "organizations:CancelHandshake",
    "organizations:CreateAccount",
    "organizations:CreateGovCloudAccount",
    "organizations:CreateOrganization",
    "organizations:CreateOrganizationalUnit",
    "organizations:CreatePolicy",
    "organizations:DeclineHandshake",
    "organizations:DeleteOrganization",
    "organizations:DeleteOrganizationalUnit",
    "organizations:DeletePolicy",
    "organizations:DeregisterDelegatedAdministrator",
    "organizations:DescribeAccount",
    "organizations:DescribeCreateAccountStatus",
    "organizations:DescribeEffectivePolicy",
    "organizations:DescribeHandshake",
    "organizations:DescribeOrganization",
    "organizations:DescribeOrganizationalUnit",
    "organizations:DescribePolicy",
    "organizations:DetachPolicy",
    "organizations:DisableAWSServiceAccess",
    "organizations:DisablePolicyType",
    "organizations:EnableAWSServiceAccess",
    "organizations:EnableAllFeatures",
    "organizations:EnablePolicyType",
    "organizations:InviteAccountToOrganization",
    "organizations:LeaveOrganization",
    "organizations:ListAWSServiceAccessForOrganization",
    "organizations:ListAccounts",
    "organizations:ListAccountsForParent",
    "organizations:ListChildren",
    "organizations:ListCreateAccountStatus",
    "organizations:ListDelegatedAdministrators",
    "organizations:ListDelegatedServicesForAccount",
    "organizations:ListHandshakesForAccount",
    "organizations:ListHandshakesForOrganization",
    "organizations:ListOrganizationalUnitsForParent",
    "organizations:ListParents",
    "organizations:ListPolicies",
    "organizations:ListPoliciesForTarget",
    "organizations:ListRoots",
    "organizations:ListTagsForResource",
    "organizations:ListTargetsForPolicy",
    "organizations:MoveAccount",
    "organizations:RegisterDelegatedAdministrator",
    "organizations:RemoveAccountFromOrganization",
    "organizations:TagResource",
    "organizations:UntagResource",
    "organizations:UpdateOrganizationalUnit",
    "organizations:UpdatePolicy",
    "outposts:CreateOutpost",
    "outposts:DeleteOutpost",
    "outposts:DeleteSite",
    "outposts:GetOutpost",
    "outposts:GetOutpostInstanceTypes",
    "outposts:ListOutposts",
    "outposts:ListSites",
    "personalize:CreateBatchInferenceJob",
    "personalize:CreateCampaign",
    "personalize:CreateDataset",
    "personalize:CreateDatasetGroup",
    "personalize:CreateDatasetImportJob",
    "personalize:CreateEventTracker",
    "personalize:CreateFilter",
    "personalize:CreateSchema",
    "personalize:CreateSolution",
    "personalize:CreateSolutionVersion",
    "personalize:DeleteCampaign",
    "personalize:DeleteDataset",
    "personalize:DeleteDatasetGroup",
    "personalize:DeleteEventTracker",
    "personalize:DeleteFilter",
    "personalize:DeleteSchema",
    "personalize:DeleteSolution",
    "personalize:DescribeAlgorithm",
    "personalize:DescribeBatchInferenceJob",
    "personalize:DescribeCampaign",
    "personalize:DescribeDataset",
    "personalize:DescribeDatasetGroup",
    "personalize:DescribeDatasetImportJob",
    "personalize:DescribeEventTracker",
    "personalize:DescribeFeatureTransformation",
    "personalize:DescribeFilter",
    "personalize:DescribeRecipe",
    "personalize:DescribeSchema",
    "personalize:DescribeSolution",
    "personalize:DescribeSolutionVersion",
    "personalize:GetPersonalizedRanking",
    "personalize:GetRecommendations",
    "personalize:GetSolutionMetrics",
    "personalize:ListBatchInferenceJobs",
    "personalize:ListCampaigns",
    "personalize:ListDatasetGroups",
    "personalize:ListDatasetImportJobs",
    "personalize:ListDatasets",
    "personalize:ListEventTrackers",
    "personalize:ListFilters",
    "personalize:ListRecipes",
    "personalize:ListSchemas",
    "personalize:ListSolutionVersions",
    "personalize:ListSolutions",
    "personalize:PutEvents",
    "personalize:PutItems",
    "personalize:PutUsers",
    "personalize:UpdateCampaign",
    "pi:DescribeDimensionKeys",
    "pi:GetResourceMetrics",
    "polly:DeleteLexicon",
    "polly:DescribeVoices",
    "polly:GetLexicon",
    "polly:GetSpeechSynthesisTask",
    "polly:ListLexicons",
    "polly:ListSpeechSynthesisTasks",
    "polly:PutLexicon",
    "polly:StartSpeechSynthesisTask",
    "polly:SynthesizeSpeech",
    "pricing:DescribeServices",
    "pricing:GetAttributeValues",
    "pricing:GetProducts",
    "purchase-orders:ModifyPurchaseOrders",
    "purchase-orders:ViewPurchaseOrders",
    "qldb:CancelJournalKinesisStream",
    "qldb:CreateLedger",
    "qldb:DeleteLedger",
    "qldb:DescribeJournalKinesisStream",
    "qldb:DescribeJournalS3Export",
    "qldb:DescribeLedger",
    "qldb:ExecuteStatement",
    "qldb:ExportJournalToS3",
    "qldb:GetBlock",
    "qldb:GetDigest",
    "qldb:GetRevision",
    "qldb:InsertSampleData",
    "qldb:ListJournalKinesisStreamsForLedger",
    "qldb:ListJournalS3Exports",
    "qldb:ListJournalS3ExportsForLedger",
    "qldb:ListLedgers",
    "qldb:ListTagsForResource",
    "qldb:SendCommand",
    "qldb:ShowCatalog",
    "qldb:StreamJournalToKinesis",
    "qldb:TagResource",
    "qldb:UntagResource",
    "qldb:UpdateLedger",
    "quicksight:CancelIngestion",
    "quicksight:CreateAccountCustomization",
    "quicksight:CreateAdmin",
    "quicksight:CreateAnalysis",
    "quicksight:CreateCustomPermissions",
    "quicksight:CreateDashboard",
    "quicksight:CreateDataSet",
    "quicksight:CreateDataSource",
    "quicksight:CreateGroup",
    "quicksight:CreateGroupMembership",
    "quicksight:CreateIAMPolicyAssignment",
    "quicksight:CreateIngestion",
    "quicksight:CreateNamespace",
    "quicksight:CreateReader",
    "quicksight:CreateTemplate",
    "quicksight:CreateTemplateAlias",
    "quicksight:CreateTheme",
    "quicksight:CreateThemeAlias",
    "quicksight:CreateUser",
    "quicksight:DeleteAccountCustomization",
    "quicksight:DeleteAnalysis",
    "quicksight:DeleteDashboard",
    "quicksight:DeleteDataSet",
    "quicksight:DeleteDataSource",
    "quicksight:DeleteGroup",
    "quicksight:DeleteGroupMembership",
    "quicksight:DeleteIAMPolicyAssignment",
    "quicksight:DeleteNamespace",
    "quicksight:DeleteTemplate",
    "quicksight:DeleteTemplateAlias",
    "quicksight:DeleteTheme",
    "quicksight:DeleteThemeAlias",
    "quicksight:DeleteUser",
    "quicksight:DeleteUserByPrincipalId",
    "quicksight:DescribeAccountCustomization",
    "quicksight:DescribeAccountSettings",
    "quicksight:DescribeAnalysis",
    "quicksight:DescribeAnalysisPermissions",
    "quicksight:DescribeCustomPermissions",
    "quicksight:DescribeDashboard",
    "quicksight:DescribeDashboardPermissions",
    "quicksight:DescribeDataSet",
    "quicksight:DescribeDataSetPermissions",
    "quicksight:DescribeDataSource",
    "quicksight:DescribeDataSourcePermissions",
    "quicksight:DescribeGroup",
    "quicksight:DescribeIAMPolicyAssignment",
    "quicksight:DescribeIngestion",
    "quicksight:DescribeNamespace",
    "quicksight:DescribeTemplate",
    "quicksight:DescribeTemplateAlias",
    "quicksight:DescribeTemplatePermissions",
    "quicksight:DescribeTheme",
    "quicksight:DescribeThemeAlias",
    "quicksight:DescribeThemePermissions",
    "quicksight:DescribeUser",
    "quicksight:GetAuthCode",
    "quicksight:GetDashboardEmbedUrl",
    "quicksight:GetGroupMapping",
    "quicksight:GetSessionEmbedUrl",
    "quicksight:ListAnalyses",
    "quicksight:ListCustomPermissions",
    "quicksight:ListDashboardVersions",
    "quicksight:ListDashboards",
    "quicksight:ListDataSets",
    "quicksight:ListDataSources",
    "quicksight:ListGroupMemberships",
    "quicksight:ListGroups",
    "quicksight:ListIAMPolicyAssignments",
    "quicksight:ListIAMPolicyAssignmentsForUser",
    "quicksight:ListIngestions",
    "quicksight:ListNamespaces",
    "quicksight:ListTagsForResource",
    "quicksight:ListTemplateAliases",
    "quicksight:ListTemplateVersions",
    "quicksight:ListTemplates",
    "quicksight:ListThemeAliases",
    "quicksight:ListThemeVersions",
    "quicksight:ListThemes",
    "quicksight:ListUserGroups",
    "quicksight:ListUsers",
    "quicksight:PassDataSet",
    "quicksight:PassDataSource",
    "quicksight:RegisterUser",
    "quicksight:RestoreAnalysis",
    "quicksight:SearchAnalyses",
    "quicksight:SearchDashboards",
    "quicksight:SearchDirectoryGroups",
    "quicksight:SetGroupMapping",
    "quicksight:Subscribe",
    "quicksight:TagResource",
    "quicksight:Unsubscribe",
    "quicksight:UntagResource",
    "quicksight:UpdateAccountCustomization",
    "quicksight:UpdateAccountSettings",
    "quicksight:UpdateAnalysis",
    "quicksight:UpdateAnalysisPermissions",
    "quicksight:UpdateCustomPermissions",
    "quicksight:UpdateDashboard",
    "quicksight:UpdateDashboardPermissions",
    "quicksight:UpdateDashboardPublishedVersion",
    "quicksight:UpdateDataSet",
    "quicksight:UpdateDataSetPermissions",
    "quicksight:UpdateDataSource",
    "quicksight:UpdateDataSourcePermissions",
    "quicksight:UpdateGroup",
    "quicksight:UpdateIAMPolicyAssignment",
    "quicksight:UpdateTemplate",
    "quicksight:UpdateTemplateAlias",
    "quicksight:UpdateTemplatePermissions",
    "quicksight:UpdateTheme",
    "quicksight:UpdateThemeAlias",
    "quicksight:UpdateThemePermissions",
    "quicksight:UpdateUser",
    "ram:AcceptResourceShareInvitation",
    "ram:AssociateResourceShare",
    "ram:AssociateResourceSharePermission",
    "ram:CreateResourceShare",
    "ram:DeleteResourceShare",
    "ram:DisassociateResourceShare",
    "ram:DisassociateResourceSharePermission",
    "ram:EnableSharingWithAwsOrganization",
    "ram:GetPermission",
    "ram:GetResourcePolicies",
    "ram:GetResourceShareAssociations",
    "ram:GetResourceShareInvitations",
    "ram:GetResourceShares",
    "ram:ListPendingInvitationResources",
    "ram:ListPermissions",
    "ram:ListPrincipals",
    "ram:ListResourceSharePermissions",
    "ram:ListResourceTypes",
    "ram:ListResources",
    "ram:PromoteResourceShareCreatedFromPolicy",
    "ram:RejectResourceShareInvitation",
    "ram:TagResource",
    "ram:UntagResource",
    "ram:UpdateResourceShare",
    "rds-data:BatchExecuteStatement",
    "rds-data:BeginTransaction",
    "rds-data:CommitTransaction",
    "rds-data:ExecuteSql",
    "rds-data:ExecuteStatement",
    "rds-data:RollbackTransaction",
    "rds-db:connect",
    "rds:AddRoleToDBCluster",
    "rds:AddRoleToDBInstance",
    "rds:AddSourceIdentifierToSubscription",
    "rds:AddTagsToResource",
    "rds:ApplyPendingMaintenanceAction",
    "rds:AuthorizeDBSecurityGroupIngress",
    "rds:BacktrackDBCluster",
    "rds:CancelExportTask",
    "rds:CopyDBClusterParameterGroup",
    "rds:CopyDBClusterSnapshot",
    "rds:CopyDBParameterGroup",
    "rds:CopyDBSnapshot",
    "rds:CopyOptionGroup",
    "rds:CreateDBCluster",
    "rds:CreateDBClusterEndpoint",
    "rds:CreateDBClusterParameterGroup",
    "rds:CreateDBClusterSnapshot",
    "rds:CreateDBInstance",
    "rds:CreateDBInstanceReadReplica",
    "rds:CreateDBParameterGroup",
    "rds:CreateDBProxy",
    "rds:CreateDBSecurityGroup",
    "rds:CreateDBSnapshot",
    "rds:CreateDBSubnetGroup",
    "rds:CreateEventSubscription",
    "rds:CreateGlobalCluster",
    "rds:CreateOptionGroup",
    "rds:CrossRegionCommunication",
    "rds:DeleteDBCluster",
    "rds:DeleteDBClusterEndpoint",
    "rds:DeleteDBClusterParameterGroup",
    "rds:DeleteDBClusterSnapshot",
    "rds:DeleteDBInstance",
    "rds:DeleteDBInstanceAutomatedBackup",
    "rds:DeleteDBParameterGroup",
    "rds:DeleteDBProxy",
    "rds:DeleteDBSecurityGroup",
    "rds:DeleteDBSnapshot",
    "rds:DeleteDBSubnetGroup",
    "rds:DeleteEventSubscription",
    "rds:DeleteGlobalCluster",
    "rds:DeleteOptionGroup",
    "rds:DeregisterDBProxyTargets",
    "rds:DescribeAccountAttributes",
    "rds:DescribeCertificates",
    "rds:DescribeDBClusterBacktracks",
    "rds:DescribeDBClusterEndpoints",
    "rds:DescribeDBClusterParameterGroups",
    "rds:DescribeDBClusterParameters",
    "rds:DescribeDBClusterSnapshotAttributes",
    "rds:DescribeDBClusterSnapshots",
    "rds:DescribeDBClusters",
    "rds:DescribeDBEngineVersions",
    "rds:DescribeDBInstanceAutomatedBackups",
    "rds:DescribeDBInstances",
    "rds:DescribeDBLogFiles",
    "rds:DescribeDBParameterGroups",
    "rds:DescribeDBParameters",
    "rds:DescribeDBProxies",
    "rds:DescribeDBProxyTargetGroups",
    "rds:DescribeDBProxyTargets",
    "rds:DescribeDBSecurityGroups",
    "rds:DescribeDBSnapshotAttributes",
    "rds:DescribeDBSnapshots",
    "rds:DescribeDBSubnetGroups",
    "rds:DescribeEngineDefaultClusterParameters",
    "rds:DescribeEngineDefaultParameters",
    "rds:DescribeEventCategories",
    "rds:DescribeEventSubscriptions",
    "rds:DescribeEvents",
    "rds:DescribeExportTasks",
    "rds:DescribeGlobalClusters",
    "rds:DescribeOptionGroupOptions",
    "rds:DescribeOptionGroups",
    "rds:DescribeOrderableDBInstanceOptions",
    "rds:DescribePendingMaintenanceActions",
    "rds:DescribeReservedDBInstances",
    "rds:DescribeReservedDBInstancesOfferings",
    "rds:DescribeSourceRegions",
    "rds:DescribeValidDBInstanceModifications",
    "rds:DownloadDBLogFilePortion",
    "rds:FailoverDBCluster",
    "rds:ListTagsForResource",
    "rds:ModifyCurrentDBClusterCapacity",
    "rds:ModifyDBCluster",
    "rds:ModifyDBClusterEndpoint",
    "rds:ModifyDBClusterParameterGroup",
    "rds:ModifyDBClusterSnapshotAttribute",
    "rds:ModifyDBInstance",
    "rds:ModifyDBParameterGroup",
    "rds:ModifyDBProxy",
    "rds:ModifyDBProxyTargetGroup",
    "rds:ModifyDBSnapshot",
    "rds:ModifyDBSnapshotAttribute",
    "rds:ModifyDBSubnetGroup",
    "rds:ModifyEventSubscription",
    "rds:ModifyGlobalCluster",
    "rds:ModifyOptionGroup",
    "rds:PromoteReadReplica",
    "rds:PromoteReadReplicaDBCluster",
    "rds:PurchaseReservedDBInstancesOffering",
    "rds:RebootDBInstance",
    "rds:RegisterDBProxyTargets",
    "rds:RemoveFromGlobalCluster",
    "rds:RemoveRoleFromDBCluster",
    "rds:RemoveRoleFromDBInstance",
    "rds:RemoveSourceIdentifierFromSubscription",
    "rds:RemoveTagsFromResource",
    "rds:ResetDBClusterParameterGroup",
    "rds:ResetDBParameterGroup",
    "rds:RestoreDBClusterFromS3",
    "rds:RestoreDBClusterFromSnapshot",
    "rds:RestoreDBClusterToPointInTime",
    "rds:RestoreDBInstanceFromDBSnapshot",
    "rds:RestoreDBInstanceFromS3",
    "rds:RestoreDBInstanceToPointInTime",
    "rds:RevokeDBSecurityGroupIngress",
    "rds:StartActivityStream",
    "rds:StartDBCluster",
    "rds:StartDBInstance",
    "rds:StartExportTask",
    "rds:StopActivityStream",
    "rds:StopDBCluster",
    "rds:StopDBInstance",
    "redshift-data:CancelStatement",
    "redshift-data:DescribeStatement",
    "redshift-data:DescribeTable",
    "redshift-data:ExecuteStatement",
    "redshift-data:GetStatementResult",
    "redshift-data:ListDatabases",
    "redshift-data:ListSchemas",
    "redshift-data:ListStatements",
    "redshift-data:ListTables",
    "redshift:AcceptReservedNodeExchange",
    "redshift:AuthorizeClusterSecurityGroupIngress",
    "redshift:AuthorizeSnapshotAccess",
    "redshift:BatchDeleteClusterSnapshots",
    "redshift:BatchModifyClusterSnapshots",
    "redshift:CancelQuery",
    "redshift:CancelQuerySession",
    "redshift:CancelResize",
    "redshift:CopyClusterSnapshot",
    "redshift:CreateCluster",
    "redshift:CreateClusterParameterGroup",
    "redshift:CreateClusterSecurityGroup",
    "redshift:CreateClusterSnapshot",
    "redshift:CreateClusterSubnetGroup",
    "redshift:CreateClusterUser",
    "redshift:CreateEventSubscription",
    "redshift:CreateHsmClientCertificate",
    "redshift:CreateHsmConfiguration",
    "redshift:CreateSavedQuery",
    "redshift:CreateScheduledAction",
    "redshift:CreateSnapshotCopyGrant",
    "redshift:CreateSnapshotSchedule",
    "redshift:CreateTags",
    "redshift:DeleteCluster",
    "redshift:DeleteClusterParameterGroup",
    "redshift:DeleteClusterSecurityGroup",
    "redshift:DeleteClusterSnapshot",
    "redshift:DeleteClusterSubnetGroup",
    "redshift:DeleteEventSubscription",
    "redshift:DeleteHsmClientCertificate",
    "redshift:DeleteHsmConfiguration",
    "redshift:DeleteSavedQueries",
    "redshift:DeleteScheduledAction",
    "redshift:DeleteSnapshotCopyGrant",
    "redshift:DeleteSnapshotSchedule",
    "redshift:DeleteTags",
    "redshift:DescribeAccountAttributes",
    "redshift:DescribeClusterDbRevisions",
    "redshift:DescribeClusterParameterGroups",
    "redshift:DescribeClusterParameters",
    "redshift:DescribeClusterSecurityGroups",
    "redshift:DescribeClusterSnapshots",
    "redshift:DescribeClusterSubnetGroups",
    "redshift:DescribeClusterTracks",
    "redshift:DescribeClusterVersions",
    "redshift:DescribeClusters",
    "redshift:DescribeDefaultClusterParameters",
    "redshift:DescribeEventCategories",
    "redshift:DescribeEventSubscriptions",
    "redshift:DescribeEvents",
    "redshift:DescribeHsmClientCertificates",
    "redshift:DescribeHsmConfigurations",
    "redshift:DescribeLoggingStatus",
    "redshift:DescribeNodeConfigurationOptions",
    "redshift:DescribeOrderableClusterOptions",
    "redshift:DescribeQuery",
    "redshift:DescribeReservedNodeOfferings",
    "redshift:DescribeReservedNodes",
    "redshift:DescribeResize",
    "redshift:DescribeSavedQueries",
    "redshift:DescribeScheduledActions",
    "redshift:DescribeSnapshotCopyGrants",
    "redshift:DescribeSnapshotSchedules",
    "redshift:DescribeStorage",
    "redshift:DescribeTable",
    "redshift:DescribeTableRestoreStatus",
    "redshift:DescribeTags",
    "redshift:DisableLogging",
    "redshift:DisableSnapshotCopy",
    "redshift:EnableLogging",
    "redshift:EnableSnapshotCopy",
    "redshift:ExecuteQuery",
    "redshift:FetchResults",
    "redshift:GetClusterCredentials",
    "redshift:GetReservedNodeExchangeOfferings",
    "redshift:JoinGroup",
    "redshift:ListDatabases",
    "redshift:ListSavedQueries",
    "redshift:ListSchemas",
    "redshift:ListTables",
    "redshift:ModifyCluster",
    "redshift:ModifyClusterDbRevision",
    "redshift:ModifyClusterIamRoles",
    "redshift:ModifyClusterMaintenance",
    "redshift:ModifyClusterParameterGroup",
    "redshift:ModifyClusterSnapshot",
    "redshift:ModifyClusterSnapshotSchedule",
    "redshift:ModifyClusterSubnetGroup",
    "redshift:ModifyEventSubscription",
    "redshift:ModifySavedQuery",
    "redshift:ModifyScheduledAction",
    "redshift:ModifySnapshotCopyRetentionPeriod",
    "redshift:ModifySnapshotSchedule",
    "redshift:PauseCluster",
    "redshift:PurchaseReservedNodeOffering",
    "redshift:RebootCluster",
    "redshift:ResetClusterParameterGroup",
    "redshift:ResizeCluster",
    "redshift:RestoreFromClusterSnapshot",
    "redshift:RestoreTableFromClusterSnapshot",
    "redshift:ResumeCluster",
    "redshift:RevokeClusterSecurityGroupIngress",
    "redshift:RevokeSnapshotAccess",
    "redshift:RotateEncryptionKey",
    "redshift:ViewQueriesFromConsole",
    "redshift:ViewQueriesInConsole",
    "rekognition:CompareFaces",
    "rekognition:CreateCollection",
    "rekognition:CreateProject",
    "rekognition:CreateProjectVersion",
    "rekognition:CreateStreamProcessor",
    "rekognition:DeleteCollection",
    "rekognition:DeleteFaces",
    "rekognition:DeleteProject",
    "rekognition:DeleteProjectVersion",
    "rekognition:DeleteStreamProcessor",
    "rekognition:DescribeCollection",
    "rekognition:DescribeProjectVersions",
    "rekognition:DescribeProjects",
    "rekognition:DescribeStreamProcessor",
    "rekognition:DetectCustomLabels",
    "rekognition:DetectFaces",
    "rekognition:DetectLabels",
    "rekognition:DetectModerationLabels",
    "rekognition:DetectProtectiveEquipment",
    "rekognition:DetectText",
    "rekognition:GetCelebrityInfo",
    "rekognition:GetCelebrityRecognition",
    "rekognition:GetContentModeration",
    "rekognition:GetFaceDetection",
    "rekognition:GetFaceSearch",
    "rekognition:GetLabelDetection",
    "rekognition:GetPersonTracking",
    "rekognition:GetSegmentDetection",
    "rekognition:GetTextDetection",
    "rekognition:IndexFaces",
    "rekognition:ListCollections",
    "rekognition:ListFaces",
    "rekognition:ListStreamProcessors",
    "rekognition:RecognizeCelebrities",
    "rekognition:SearchFaces",
    "rekognition:SearchFacesByImage",
    "rekognition:StartCelebrityRecognition",
    "rekognition:StartContentModeration",
    "rekognition:StartFaceDetection",
    "rekognition:StartFaceSearch",
    "rekognition:StartLabelDetection",
    "rekognition:StartPersonTracking",
    "rekognition:StartProjectVersion",
    "rekognition:StartSegmentDetection",
    "rekognition:StartStreamProcessor",
    "rekognition:StartTextDetection",
    "rekognition:StopProjectVersion",
    "rekognition:StopStreamProcessor",
    "resource-explorer:ListResourceTypes",
    "resource-explorer:ListResources",
    "resource-explorer:ListTags",
    "resource-groups:CreateGroup",
    "resource-groups:DeleteGroup",
    "resource-groups:GetGroup",
    "resource-groups:GetGroupQuery",
    "resource-groups:GetTags",
    "resource-groups:ListGroupResources",
    "resource-groups:ListGroups",
    "resource-groups:SearchResources",
    "resource-groups:Tag",
    "resource-groups:Untag",
    "resource-groups:UpdateGroup",
    "resource-groups:UpdateGroupQuery",
    "robomaker:BatchDeleteWorlds",
    "robomaker:BatchDescribeSimulationJob",
    "robomaker:CancelDeploymentJob",
    "robomaker:CancelSimulationJob",
    "robomaker:CancelSimulationJobBatch",
    "robomaker:CancelWorldExportJob",
    "robomaker:CancelWorldGenerationJob",
    "robomaker:CreateDeploymentJob",
    "robomaker:CreateFleet",
    "robomaker:CreateRobot",
    "robomaker:CreateRobotApplication",
    "robomaker:CreateRobotApplicationVersion",
    "robomaker:CreateSimulationApplication",
    "robomaker:CreateSimulationApplicationVersion",
    "robomaker:CreateSimulationJob",
    "robomaker:CreateWorldExportJob",
    "robomaker:CreateWorldGenerationJob",
    "robomaker:CreateWorldTemplate",
    "robomaker:DeleteFleet",
    "robomaker:DeleteRobot",
    "robomaker:DeleteRobotApplication",
    "robomaker:DeleteSimulationApplication",
    "robomaker:DeleteWorldTemplate",
    "robomaker:DeregisterRobot",
    "robomaker:DescribeDeploymentJob",
    "robomaker:DescribeFleet",
    "robomaker:DescribeRobot",
    "robomaker:DescribeRobotApplication",
    "robomaker:DescribeSimulationApplication",
    "robomaker:DescribeSimulationJob",
    "robomaker:DescribeSimulationJobBatch",
    "robomaker:DescribeWorld",
    "robomaker:DescribeWorldExportJob",
    "robomaker:DescribeWorldGenerationJob",
    "robomaker:DescribeWorldTemplate",
    "robomaker:GetWorldTemplateBody",
    "robomaker:ListDeploymentJobs",
    "robomaker:ListFleets",
    "robomaker:ListRobotApplications",
    "robomaker:ListRobots",
    "robomaker:ListSimulationApplications",
    "robomaker:ListSimulationJobBatches",
    "robomaker:ListSimulationJobs",
    "robomaker:ListSupportedAvailabilityZones",
    "robomaker:ListTagsForResource",
    "robomaker:ListWorldExportJobs",
    "robomaker:ListWorldGenerationJobs",
    "robomaker:ListWorldTemplates",
    "robomaker:ListWorlds",
    "robomaker:RegisterRobot",
    "robomaker:RestartSimulationJob",
    "robomaker:StartSimulationJobBatch",
    "robomaker:SyncDeploymentJob",
    "robomaker:TagResource",
    "robomaker:UntagResource",
    "robomaker:UpdateRobotApplication",
    "robomaker:UpdateRobotDeployment",
    "robomaker:UpdateSimulationApplication",
    "robomaker:UpdateWorldTemplate",
    "route53:AssociateVPCWithHostedZone",
    "route53:ChangeResourceRecordSets",
    "route53:ChangeTagsForResource",
    "route53:CreateHealthCheck",
    "route53:CreateHostedZone",
    "route53:CreateQueryLoggingConfig",
    "route53:CreateReusableDelegationSet",
    "route53:CreateTrafficPolicy",
    "route53:CreateTrafficPolicyInstance",
    "route53:CreateTrafficPolicyVersion",
    "route53:CreateVPCAssociationAuthorization",
    "route53:DeleteHealthCheck",
    "route53:DeleteHostedZone",
    "route53:DeleteQueryLoggingConfig",
    "route53:DeleteReusableDelegationSet",
    "route53:DeleteTrafficPolicy",
    "route53:DeleteTrafficPolicyInstance",
    "route53:DeleteVPCAssociationAuthorization",
    "route53:DisassociateVPCFromHostedZone",
    "route53:GetAccountLimit",
    "route53:GetChange",
    "route53:GetCheckerIpRanges",
    "route53:GetGeoLocation",
    "route53:GetHealthCheck",
    "route53:GetHealthCheckCount",
    "route53:GetHealthCheckLastFailureReason",
    "route53:GetHealthCheckStatus",
    "route53:GetHostedZone",
    "route53:GetHostedZoneCount",
    "route53:GetHostedZoneLimit",
    "route53:GetQueryLoggingConfig",
    "route53:GetReusableDelegationSet",
    "route53:GetReusableDelegationSetLimit",
    "route53:GetTrafficPolicy",
    "route53:GetTrafficPolicyInstance",
    "route53:GetTrafficPolicyInstanceCount",
    "route53:ListGeoLocations",
    "route53:ListHealthChecks",
    "route53:ListHostedZones",
    "route53:ListHostedZonesByName",
    "route53:ListHostedZonesByVPC",
    "route53:ListQueryLoggingConfigs",
    "route53:ListResourceRecordSets",
    "route53:ListReusableDelegationSets",
    "route53:ListTagsForResource",
    "route53:ListTagsForResources",
    "route53:ListTrafficPolicies",
    "route53:ListTrafficPolicyInstances",
    "route53:ListTrafficPolicyInstancesByHostedZone",
    "route53:ListTrafficPolicyInstancesByPolicy",
    "route53:ListTrafficPolicyVersions",
    "route53:ListVPCAssociationAuthorizations",
    "route53:TestDNSAnswer",
    "route53:UpdateHealthCheck",
    "route53:UpdateHostedZoneComment",
    "route53:UpdateTrafficPolicyComment",
    "route53:UpdateTrafficPolicyInstance",
    "route53domains:CheckDomainAvailability",
    "route53domains:DeleteTagsForDomain",
    "route53domains:DisableDomainAutoRenew",
    "route53domains:DisableDomainTransferLock",
    "route53domains:EnableDomainAutoRenew",
    "route53domains:EnableDomainTransferLock",
    "route53domains:GetContactReachabilityStatus",
    "route53domains:GetDomainDetail",
    "route53domains:GetDomainSuggestions",
    "route53domains:GetOperationDetail",
    "route53domains:ListDomains",
    "route53domains:ListOperations",
    "route53domains:ListTagsForDomain",
    "route53domains:RegisterDomain",
    "route53domains:RenewDomain",
    "route53domains:ResendContactReachabilityEmail",
    "route53domains:RetrieveDomainAuthCode",
    "route53domains:TransferDomain",
    "route53domains:UpdateDomainContact",
    "route53domains:UpdateDomainContactPrivacy",
    "route53domains:UpdateDomainNameservers",
    "route53domains:UpdateTagsForDomain",
    "route53domains:ViewBilling",
    "route53resolver:AssociateResolverEndpointIpAddress",
    "route53resolver:AssociateResolverQueryLogConfig",
    "route53resolver:AssociateResolverRule",
    "route53resolver:CreateResolverEndpoint",
    "route53resolver:CreateResolverQueryLogConfig",
    "route53resolver:CreateResolverRule",
    "route53resolver:DeleteResolverEndpoint",
    "route53resolver:DeleteResolverQueryLogConfig",
    "route53resolver:DeleteResolverRule",
    "route53resolver:DisassociateResolverEndpointIpAddress",
    "route53resolver:DisassociateResolverQueryLogConfig",
    "route53resolver:DisassociateResolverRule",
    "route53resolver:GetResolverEndpoint",
    "route53resolver:GetResolverQueryLogConfig",
    "route53resolver:GetResolverQueryLogConfigAssociation",
    "route53resolver:GetResolverQueryLogConfigPolicy",
    "route53resolver:GetResolverRule",
    "route53resolver:GetResolverRuleAssociation",
    "route53resolver:GetResolverRulePolicy",
    "route53resolver:ListResolverEndpointIpAddresses",
    "route53resolver:ListResolverEndpoints",
    "route53resolver:ListResolverQueryLogConfigAssociations",
    "route53resolver:ListResolverQueryLogConfigs",
    "route53resolver:ListResolverRuleAssociations",
    "route53resolver:ListResolverRules",
    "route53resolver:ListTagsForResource",
    "route53resolver:PutResolverQueryLogConfigPolicy",
    "route53resolver:PutResolverRulePolicy",
    "route53resolver:TagResource",
    "route53resolver:UntagResource",
    "route53resolver:UpdateResolverEndpoint",
    "route53resolver:UpdateResolverRule",
    "s3-outposts:AbortMultipartUpload",
    "s3-outposts:CreateAccessPoint",
    "s3-outposts:CreateBucket",
    "s3-outposts:CreateEndpoint",
    "s3-outposts:DeleteAccessPoint",
    "s3-outposts:DeleteAccessPointPolicy",
    "s3-outposts:DeleteBucket",
    "s3-outposts:DeleteBucketPolicy",
    "s3-outposts:DeleteEndpoint",
    "s3-outposts:DeleteObject",
    "s3-outposts:DeleteObjectTagging",
    "s3-outposts:GetAccessPoint",
    "s3-outposts:GetAccessPointPolicy",
    "s3-outposts:GetBucket",
    "s3-outposts:GetBucketPolicy",
    "s3-outposts:GetBucketTagging",
    "s3-outposts:GetLifecycleConfiguration",
    "s3-outposts:GetObject",
    "s3-outposts:GetObjectTagging",
    "s3-outposts:ListAccessPoints",
    "s3-outposts:ListBucket",
    "s3-outposts:ListBucketMultipartUploads",
    "s3-outposts:ListEndpoints",
    "s3-outposts:ListMultipartUploadParts",
    "s3-outposts:ListRegionalBuckets",
    "s3-outposts:PutAccessPointPolicy",
    "s3-outposts:PutBucketPolicy",
    "s3-outposts:PutBucketTagging",
    "s3-outposts:PutLifecycleConfiguration",
    "s3-outposts:PutObject",
    "s3-outposts:PutObjectAcl",
    "s3-outposts:PutObjectTagging",
    "s3:AbortMultipartUpload",
    "s3:BypassGovernanceRetention",
    "s3:CreateAccessPoint",
    "s3:CreateBucket",
    "s3:CreateJob",
    "s3:DeleteAccessPoint",
    "s3:DeleteAccessPointPolicy",
    "s3:DeleteBucket",
    "s3:DeleteBucketOwnershipControls",
    "s3:DeleteBucketPolicy",
    "s3:DeleteBucketWebsite",
    "s3:DeleteJobTagging",
    "s3:DeleteObject",
    "s3:DeleteObjectTagging",
    "s3:DeleteObjectVersion",
    "s3:DeleteObjectVersionTagging",
    "s3:DeleteStorageLensConfiguration",
    "s3:DeleteStorageLensConfigurationTagging",
    "s3:DescribeJob",
    "s3:GetAccelerateConfiguration",
    "s3:GetAccessPoint",
    "s3:GetAccessPointPolicy",
    "s3:GetAccessPointPolicyStatus",
    "s3:GetAccountPublicAccessBlock",
    "s3:GetAnalyticsConfiguration",
    "s3:GetBucketAcl",
    "s3:GetBucketCORS",
    "s3:GetBucketLocation",
    "s3:GetBucketLogging",
    "s3:GetBucketNotification",
    "s3:GetBucketObjectLockConfiguration",
    "s3:GetBucketOwnershipControls",
    "s3:GetBucketPolicy",
    "s3:GetBucketPolicyStatus",
    "s3:GetBucketPublicAccessBlock",
    "s3:GetBucketRequestPayment",
    "s3:GetBucketTagging",
    "s3:GetBucketVersioning",
    "s3:GetBucketWebsite",
    "s3:GetEncryptionConfiguration",
    "s3:GetInventoryConfiguration",
    "s3:GetJobTagging",
    "s3:GetLifecycleConfiguration",
    "s3:GetMetricsConfiguration",
    "s3:GetObject",
    "s3:GetObjectAcl",
    "s3:GetObjectLegalHold",
    "s3:GetObjectRetention",
    "s3:GetObjectTagging",
    "s3:GetObjectTorrent",
    "s3:GetObjectVersion",
    "s3:GetObjectVersionAcl",
    "s3:GetObjectVersionForReplication",
    "s3:GetObjectVersionTagging",
    "s3:GetObjectVersionTorrent",
    "s3:GetReplicationConfiguration",
    "s3:GetStorageLensConfiguration",
    "s3:GetStorageLensConfigurationTagging",
    "s3:GetStorageLensDashboard",
    "s3:ListAccessPoints",
    "s3:ListAllMyBuckets",
    "s3:ListBucket",
    "s3:ListBucketMultipartUploads",
    "s3:ListBucketVersions",
    "s3:ListJobs",
    "s3:ListMultipartUploadParts",
    "s3:ListStorageLensConfigurations",
    "s3:ObjectOwnerOverrideToBucketOwner",
    "s3:PutAccelerateConfiguration",
    "s3:PutAccessPointPolicy",
    "s3:PutAccountPublicAccessBlock",
    "s3:PutAnalyticsConfiguration",
    "s3:PutBucketAcl",
    "s3:PutBucketCORS",
    "s3:PutBucketLogging",
    "s3:PutBucketNotification",
    "s3:PutBucketObjectLockConfiguration",
    "s3:PutBucketOwnershipControls",
    "s3:PutBucketPolicy",
    "s3:PutBucketPublicAccessBlock",
    "s3:PutBucketRequestPayment",
    "s3:PutBucketTagging",
    "s3:PutBucketVersioning",
    "s3:PutBucketWebsite",
    "s3:PutEncryptionConfiguration",
    "s3:PutInventoryConfiguration",
    "s3:PutJobTagging",
    "s3:PutLifecycleConfiguration",
    "s3:PutMetricsConfiguration",
    "s3:PutObject",
    "s3:PutObjectAcl",
    "s3:PutObjectLegalHold",
    "s3:PutObjectRetention",
    "s3:PutObjectTagging",
    "s3:PutObjectVersionAcl",
    "s3:PutObjectVersionTagging",
    "s3:PutReplicationConfiguration",
    "s3:PutStorageLensConfiguration",
    "s3:PutStorageLensConfigurationTagging",
    "s3:ReplicateDelete",
    "s3:ReplicateObject",
    "s3:ReplicateTags",
    "s3:RestoreObject",
    "s3:UpdateJobPriority",
    "s3:UpdateJobStatus",
    "sagemaker:AddTags",
    "sagemaker:AssociateTrialComponent",
    "sagemaker:BatchGetMetrics",
    "sagemaker:BatchPutMetrics",
    "sagemaker:CreateAlgorithm",
    "sagemaker:CreateApp",
    "sagemaker:CreateAppImageConfig",
    "sagemaker:CreateAutoMLJob",
    "sagemaker:CreateCodeRepository",
    "sagemaker:CreateCompilationJob",
    "sagemaker:CreateDomain",
    "sagemaker:CreateEndpoint",
    "sagemaker:CreateEndpointConfig",
    "sagemaker:CreateExperiment",
    "sagemaker:CreateFlowDefinition",
    "sagemaker:CreateHumanTaskUi",
    "sagemaker:CreateHyperParameterTuningJob",
    "sagemaker:CreateImage",
    "sagemaker:CreateImageVersion",
    "sagemaker:CreateLabelingJob",
    "sagemaker:CreateModel",
    "sagemaker:CreateModelPackage",
    "sagemaker:CreateMonitoringSchedule",
    "sagemaker:CreateNotebookInstance",
    "sagemaker:CreateNotebookInstanceLifecycleConfig",
    "sagemaker:CreatePresignedDomainUrl",
    "sagemaker:CreatePresignedNotebookInstanceUrl",
    "sagemaker:CreateProcessingJob",
    "sagemaker:CreateTrainingJob",
    "sagemaker:CreateTransformJob",
    "sagemaker:CreateTrial",
    "sagemaker:CreateTrialComponent",
    "sagemaker:CreateUserProfile",
    "sagemaker:CreateWorkforce",
    "sagemaker:CreateWorkteam",
    "sagemaker:DeleteAlgorithm",
    "sagemaker:DeleteApp",
    "sagemaker:DeleteAppImageConfig",
    "sagemaker:DeleteCodeRepository",
    "sagemaker:DeleteDomain",
    "sagemaker:DeleteEndpoint",
    "sagemaker:DeleteEndpointConfig",
    "sagemaker:DeleteExperiment",
    "sagemaker:DeleteFlowDefinition",
    "sagemaker:DeleteHumanLoop",
    "sagemaker:DeleteImage",
    "sagemaker:DeleteImageVersion",
    "sagemaker:DeleteModel",
    "sagemaker:DeleteModelPackage",
    "sagemaker:DeleteMonitoringSchedule",
    "sagemaker:DeleteNotebookInstance",
    "sagemaker:DeleteNotebookInstanceLifecycleConfig",
    "sagemaker:DeleteTags",
    "sagemaker:DeleteTrial",
    "sagemaker:DeleteTrialComponent",
    "sagemaker:DeleteUserProfile",
    "sagemaker:DeleteWorkforce",
    "sagemaker:DeleteWorkteam",
    "sagemaker:DescribeAlgorithm",
    "sagemaker:DescribeApp",
    "sagemaker:DescribeAppImageConfig",
    "sagemaker:DescribeAutoMLJob",
    "sagemaker:DescribeCodeRepository",
    "sagemaker:DescribeCompilationJob",
    "sagemaker:DescribeDomain",
    "sagemaker:DescribeEndpoint",
    "sagemaker:DescribeEndpointConfig",
    "sagemaker:DescribeExperiment",
    "sagemaker:DescribeFlowDefinition",
    "sagemaker:DescribeHumanLoop",
    "sagemaker:DescribeHumanTaskUi",
    "sagemaker:DescribeHyperParameterTuningJob",
    "sagemaker:DescribeImage",
    "sagemaker:DescribeImageVersion",
    "sagemaker:DescribeLabelingJob",
    "sagemaker:DescribeModel",
    "sagemaker:DescribeModelPackage",
    "sagemaker:DescribeMonitoringSchedule",
    "sagemaker:DescribeNotebookInstance",
    "sagemaker:DescribeNotebookInstanceLifecycleConfig",
    "sagemaker:DescribeProcessingJob",
    "sagemaker:DescribeSubscribedWorkteam",
    "sagemaker:DescribeTrainingJob",
    "sagemaker:DescribeTransformJob",
    "sagemaker:DescribeTrial",
    "sagemaker:DescribeTrialComponent",
    "sagemaker:DescribeUserProfile",
    "sagemaker:DescribeWorkforce",
    "sagemaker:DescribeWorkteam",
    "sagemaker:DisassociateTrialComponent",
    "sagemaker:GetSearchSuggestions",
    "sagemaker:InvokeEndpoint",
    "sagemaker:ListAlgorithms",
    "sagemaker:ListAppImageConfigs",
    "sagemaker:ListApps",
    "sagemaker:ListAutoMLJobs",
    "sagemaker:ListCandidatesForAutoMLJob",
    "sagemaker:ListCodeRepositories",
    "sagemaker:ListCompilationJobs",
    "sagemaker:ListDomains",
    "sagemaker:ListEndpointConfigs",
    "sagemaker:ListEndpoints",
    "sagemaker:ListExperiments",
    "sagemaker:ListFlowDefinitions",
    "sagemaker:ListHumanLoops",
    "sagemaker:ListHumanTaskUis",
    "sagemaker:ListHyperParameterTuningJobs",
    "sagemaker:ListImageVersions",
    "sagemaker:ListImages",
    "sagemaker:ListLabelingJobs",
    "sagemaker:ListLabelingJobsForWorkteam",
    "sagemaker:ListModelPackages",
    "sagemaker:ListModels",
    "sagemaker:ListMonitoringExecutions",
    "sagemaker:ListMonitoringSchedules",
    "sagemaker:ListNotebookInstanceLifecycleConfigs",
    "sagemaker:ListNotebookInstances",
    "sagemaker:ListProcessingJobs",
    "sagemaker:ListSubscribedWorkteams",
    "sagemaker:ListTags",
    "sagemaker:ListTrainingJobs",
    "sagemaker:ListTrainingJobsForHyperParameterTuningJob",
    "sagemaker:ListTransformJobs",
    "sagemaker:ListTrialComponents",
    "sagemaker:ListTrials",
    "sagemaker:ListUserProfiles",
    "sagemaker:ListWorkforces",
    "sagemaker:ListWorkteams",
    "sagemaker:RenderUiTemplate",
    "sagemaker:Search",
    "sagemaker:StartHumanLoop",
    "sagemaker:StartMonitoringSchedule",
    "sagemaker:StartNotebookInstance",
    "sagemaker:StopAutoMLJob",
    "sagemaker:StopCompilationJob",
    "sagemaker:StopHumanLoop",
    "sagemaker:StopHyperParameterTuningJob",
    "sagemaker:StopLabelingJob",
    "sagemaker:StopMonitoringSchedule",
    "sagemaker:StopNotebookInstance",
    "sagemaker:StopProcessingJob",
    "sagemaker:StopTrainingJob",
    "sagemaker:StopTransformJob",
    "sagemaker:UpdateAppImageConfig",
    "sagemaker:UpdateCodeRepository",
    "sagemaker:UpdateDomain",
    "sagemaker:UpdateEndpoint",
    "sagemaker:UpdateEndpointWeightsAndCapacities",
    "sagemaker:UpdateExperiment",
    "sagemaker:UpdateImage",
    "sagemaker:UpdateMonitoringSchedule",
    "sagemaker:UpdateNotebookInstance",
    "sagemaker:UpdateNotebookInstanceLifecycleConfig",
    "sagemaker:UpdateTrial",
    "sagemaker:UpdateTrialComponent",
    "sagemaker:UpdateUserProfile",
    "sagemaker:UpdateWorkforce",
    "sagemaker:UpdateWorkteam",
    "savingsplans:CreateSavingsPlan",
    "savingsplans:DeleteQueuedSavingsPlan",
    "savingsplans:DescribeSavingsPlanRates",
    "savingsplans:DescribeSavingsPlans",
    "savingsplans:DescribeSavingsPlansOfferingRates",
    "savingsplans:DescribeSavingsPlansOfferings",
    "savingsplans:ListTagsForResource",
    "savingsplans:TagResource",
    "savingsplans:UntagResource",
    "schemas:CreateDiscoverer",
    "schemas:CreateRegistry",
    "schemas:CreateSchema",
    "schemas:DeleteDiscoverer",
    "schemas:DeleteRegistry",
    "schemas:DeleteResourcePolicy",
    "schemas:DeleteSchema",
    "schemas:DeleteSchemaVersion",
    "schemas:DescribeCodeBinding",
    "schemas:DescribeDiscoverer",
    "schemas:DescribeRegistry",
    "schemas:DescribeSchema",
    "schemas:ExportSchema",
    "schemas:GetCodeBindingSource",
    "schemas:GetDiscoveredSchema",
    "schemas:GetResourcePolicy",
    "schemas:ListDiscoverers",
    "schemas:ListRegistries",
    "schemas:ListSchemaVersions",
    "schemas:ListSchemas",
    "schemas:ListTagsForResource",
    "schemas:PutCodeBinding",
    "schemas:PutResourcePolicy",
    "schemas:SearchSchemas",
    "schemas:StartDiscoverer",
    "schemas:StopDiscoverer",
    "schemas:TagResource",
    "schemas:UntagResource",
    "schemas:UpdateDiscoverer",
    "schemas:UpdateRegistry",
    "schemas:UpdateSchema",
    "sdb:BatchDeleteAttributes",
    "sdb:BatchPutAttributes",
    "sdb:CreateDomain",
    "sdb:DeleteAttributes",
    "sdb:DeleteDomain",
    "sdb:DomainMetadata",
    "sdb:GetAttributes",
    "sdb:ListDomains",
    "sdb:PutAttributes",
    "sdb:Select",
    "secretsmanager:CancelRotateSecret",
    "secretsmanager:CreateSecret",
    "secretsmanager:DeleteResourcePolicy",
    "secretsmanager:DeleteSecret",
    "secretsmanager:DescribeSecret",
    "secretsmanager:GetRandomPassword",
    "secretsmanager:GetResourcePolicy",
    "secretsmanager:GetSecretValue",
    "secretsmanager:ListSecretVersionIds",
    "secretsmanager:ListSecrets",
    "secretsmanager:PutResourcePolicy",
    "secretsmanager:PutSecretValue",
    "secretsmanager:RestoreSecret",
    "secretsmanager:RotateSecret",
    "secretsmanager:TagResource",
    "secretsmanager:UntagResource",
    "secretsmanager:UpdateSecret",
    "secretsmanager:UpdateSecretVersionStage",
    "secretsmanager:ValidateResourcePolicy",
    "securityhub:AcceptInvitation",
    "securityhub:BatchDisableStandards",
    "securityhub:BatchEnableStandards",
    "securityhub:BatchImportFindings",
    "securityhub:BatchUpdateFindings",
    "securityhub:CreateActionTarget",
    "securityhub:CreateInsight",
    "securityhub:CreateMembers",
    "securityhub:DeclineInvitations",
    "securityhub:DeleteActionTarget",
    "securityhub:DeleteInsight",
    "securityhub:DeleteInvitations",
    "securityhub:DeleteMembers",
    "securityhub:DescribeActionTargets",
    "securityhub:DescribeHub",
    "securityhub:DescribeOrganizationConfiguration",
    "securityhub:DescribeProducts",
    "securityhub:DescribeStandards",
    "securityhub:DescribeStandardsControls",
    "securityhub:DisableImportFindingsForProduct",
    "securityhub:DisableOrganizationAdminAccount",
    "securityhub:DisableSecurityHub",
    "securityhub:DisassociateFromMasterAccount",
    "securityhub:DisassociateMembers",
    "securityhub:EnableImportFindingsForProduct",
    "securityhub:EnableOrganizationAdminAccount",
    "securityhub:EnableSecurityHub",
    "securityhub:GetEnabledStandards",
    "securityhub:GetFindings",
    "securityhub:GetInsightResults",
    "securityhub:GetInsights",
    "securityhub:GetInvitationsCount",
    "securityhub:GetMasterAccount",
    "securityhub:GetMembers",
    "securityhub:InviteMembers",
    "securityhub:ListEnabledProductsForImport",
    "securityhub:ListInvitations",
    "securityhub:ListMembers",
    "securityhub:ListOrganizationAdminAccounts",
    "securityhub:ListTagsForResource",
    "securityhub:TagResource",
    "securityhub:UntagResource",
    "securityhub:UpdateActionTarget",
    "securityhub:UpdateFindings",
    "securityhub:UpdateInsight",
    "securityhub:UpdateOrganizationConfiguration",
    "securityhub:UpdateSecurityHubConfiguration",
    "securityhub:UpdateStandardsControl",
    "serverlessrepo:CreateApplication",
    "serverlessrepo:CreateApplicationVersion",
    "serverlessrepo:CreateCloudFormationChangeSet",
    "serverlessrepo:CreateCloudFormationTemplate",
    "serverlessrepo:DeleteApplication",
    "serverlessrepo:GetApplication",
    "serverlessrepo:GetApplicationPolicy",
    "serverlessrepo:GetCloudFormationTemplate",
    "serverlessrepo:ListApplicationDependencies",
    "serverlessrepo:ListApplicationVersions",
    "serverlessrepo:ListApplications",
    "serverlessrepo:PutApplicationPolicy",
    "serverlessrepo:SearchApplications",
    "serverlessrepo:UnshareApplication",
    "serverlessrepo:UpdateApplication",
    "servicecatalog:AcceptPortfolioShare",
    "servicecatalog:AssociateAttributeGroup",
    "servicecatalog:AssociateBudgetWithResource",
    "servicecatalog:AssociatePrincipalWithPortfolio",
    "servicecatalog:AssociateProductWithPortfolio",
    "servicecatalog:AssociateResource",
    "servicecatalog:AssociateServiceActionWithProvisioningArtifact",
    "servicecatalog:AssociateTagOptionWithResource",
    "servicecatalog:BatchAssociateServiceActionWithProvisioningArtifact",
    "servicecatalog:BatchDisassociateServiceActionFromProvisioningArtifact",
    "servicecatalog:CopyProduct",
    "servicecatalog:CreateApplication",
    "servicecatalog:CreateAttributeGroup",
    "servicecatalog:CreateConstraint",
    "servicecatalog:CreatePortfolio",
    "servicecatalog:CreatePortfolioShare",
    "servicecatalog:CreateProduct",
    "servicecatalog:CreateProvisionedProductPlan",
    "servicecatalog:CreateProvisioningArtifact",
    "servicecatalog:CreateServiceAction",
    "servicecatalog:CreateTagOption",
    "servicecatalog:DeleteApplication",
    "servicecatalog:DeleteAttributeGroup",
    "servicecatalog:DeleteConstraint",
    "servicecatalog:DeletePortfolio",
    "servicecatalog:DeletePortfolioShare",
    "servicecatalog:DeleteProduct",
    "servicecatalog:DeleteProvisionedProductPlan",
    "servicecatalog:DeleteProvisioningArtifact",
    "servicecatalog:DeleteServiceAction",
    "servicecatalog:DeleteTagOption",
    "servicecatalog:DescribeConstraint",
    "servicecatalog:DescribeCopyProductStatus",
    "servicecatalog:DescribePortfolio",
    "servicecatalog:DescribePortfolioShareStatus",
    "servicecatalog:DescribeProduct",
    "servicecatalog:DescribeProductAsAdmin",
    "servicecatalog:DescribeProductView",
    "servicecatalog:DescribeProvisionedProduct",
    "servicecatalog:DescribeProvisionedProductPlan",
    "servicecatalog:DescribeProvisioningArtifact",
    "servicecatalog:DescribeProvisioningParameters",
    "servicecatalog:DescribeRecord",
    "servicecatalog:DescribeServiceAction",
    "servicecatalog:DescribeServiceActionExecutionParameters",
    "servicecatalog:DescribeTagOption",
    "servicecatalog:DisableAWSOrganizationsAccess",
    "servicecatalog:DisassociateAttributeGroup",
    "servicecatalog:DisassociateBudgetFromResource",
    "servicecatalog:DisassociatePrincipalFromPortfolio",
    "servicecatalog:DisassociateProductFromPortfolio",
    "servicecatalog:DisassociateResource",
    "servicecatalog:DisassociateServiceActionFromProvisioningArtifact",
    "servicecatalog:DisassociateTagOptionFromResource",
    "servicecatalog:EnableAWSOrganizationsAccess",
    "servicecatalog:ExecuteProvisionedProductPlan",
    "servicecatalog:ExecuteProvisionedProductServiceAction",
    "servicecatalog:GetAWSOrganizationsAccessStatus",
    "servicecatalog:GetApplication",
    "servicecatalog:GetAttributeGroup",
    "servicecatalog:ImportAsProvisionedProduct",
    "servicecatalog:ListAcceptedPortfolioShares",
    "servicecatalog:ListApplications",
    "servicecatalog:ListAssociatedAttributeGroups",
    "servicecatalog:ListAssociatedResources",
    "servicecatalog:ListAttributeGroups",
    "servicecatalog:ListBudgetsForResource",
    "servicecatalog:ListConstraintsForPortfolio",
    "servicecatalog:ListLaunchPaths",
    "servicecatalog:ListOrganizationPortfolioAccess",
    "servicecatalog:ListPortfolioAccess",
    "servicecatalog:ListPortfolios",
    "servicecatalog:ListPortfoliosForProduct",
    "servicecatalog:ListPrincipalsForPortfolio",
    "servicecatalog:ListProvisionedProductPlans",
    "servicecatalog:ListProvisioningArtifacts",
    "servicecatalog:ListProvisioningArtifactsForServiceAction",
    "servicecatalog:ListRecordHistory",
    "servicecatalog:ListResourcesForTagOption",
    "servicecatalog:ListServiceActions",
    "servicecatalog:ListServiceActionsForProvisioningArtifact",
    "servicecatalog:ListStackInstancesForProvisionedProduct",
    "servicecatalog:ListTagOptions",
    "servicecatalog:ProvisionProduct",
    "servicecatalog:RejectPortfolioShare",
    "servicecatalog:ScanProvisionedProducts",
    "servicecatalog:SearchProducts",
    "servicecatalog:SearchProductsAsAdmin",
    "servicecatalog:SearchProvisionedProducts",
    "servicecatalog:TerminateProvisionedProduct",
    "servicecatalog:UpdateApplication",
    "servicecatalog:UpdateAttributeGroup",
    "servicecatalog:UpdateConstraint",
    "servicecatalog:UpdatePortfolio",
    "servicecatalog:UpdateProduct",
    "servicecatalog:UpdateProvisionedProduct",
    "servicecatalog:UpdateProvisionedProductProperties",
    "servicecatalog:UpdateProvisioningArtifact",
    "servicecatalog:UpdateServiceAction",
    "servicecatalog:UpdateTagOption",
    "servicediscovery:CreateHttpNamespace",
    "servicediscovery:CreatePrivateDnsNamespace",
    "servicediscovery:CreatePublicDnsNamespace",
    "servicediscovery:CreateService",
    "servicediscovery:DeleteNamespace",
    "servicediscovery:DeleteService",
    "servicediscovery:DeregisterInstance",
    "servicediscovery:DiscoverInstances",
    "servicediscovery:GetInstance",
    "servicediscovery:GetInstancesHealthStatus",
    "servicediscovery:GetNamespace",
    "servicediscovery:GetOperation",
    "servicediscovery:GetService",
    "servicediscovery:ListInstances",
    "servicediscovery:ListNamespaces",
    "servicediscovery:ListOperations",
    "servicediscovery:ListServices",
    "servicediscovery:ListTagsForResource",
    "servicediscovery:RegisterInstance",
    "servicediscovery:TagResource",
    "servicediscovery:UntagResource",
    "servicediscovery:UpdateInstanceCustomHealthStatus",
    "servicediscovery:UpdateService",
    "servicequotas:AssociateServiceQuotaTemplate",
    "servicequotas:DeleteServiceQuotaIncreaseRequestFromTemplate",
    "servicequotas:DisassociateServiceQuotaTemplate",
    "servicequotas:GetAWSDefaultServiceQuota",
    "servicequotas:GetAssociationForServiceQuotaTemplate",
    "servicequotas:GetRequestedServiceQuotaChange",
    "servicequotas:GetServiceQuota",
    "servicequotas:GetServiceQuotaIncreaseRequestFromTemplate",
    "servicequotas:ListAWSDefaultServiceQuotas",
    "servicequotas:ListRequestedServiceQuotaChangeHistory",
    "servicequotas:ListRequestedServiceQuotaChangeHistoryByQuota",
    "servicequotas:ListServiceQuotaIncreaseRequestsInTemplate",
    "servicequotas:ListServiceQuotas",
    "servicequotas:ListServices",
    "servicequotas:PutServiceQuotaIncreaseRequestIntoTemplate",
    "servicequotas:RequestServiceQuotaIncrease",
    "ses:CloneReceiptRuleSet",
    "ses:CreateConfigurationSet",
    "ses:CreateConfigurationSetEventDestination",
    "ses:CreateConfigurationSetTrackingOptions",
    "ses:CreateCustomVerificationEmailTemplate",
    "ses:CreateDedicatedIpPool",
    "ses:CreateDeliverabilityTestReport",
    "ses:CreateEmailIdentity",
    "ses:CreateReceiptFilter",
    "ses:CreateReceiptRule",
    "ses:CreateReceiptRuleSet",
    "ses:CreateTemplate",
    "ses:DeleteConfigurationSet",
    "ses:DeleteConfigurationSetEventDestination",
    "ses:DeleteConfigurationSetTrackingOptions",
    "ses:DeleteCustomVerificationEmailTemplate",
    "ses:DeleteDedicatedIpPool",
    "ses:DeleteEmailIdentity",
    "ses:DeleteIdentity",
    "ses:DeleteIdentityPolicy",
    "ses:DeleteReceiptFilter",
    "ses:DeleteReceiptRule",
    "ses:DeleteReceiptRuleSet",
    "ses:DeleteTemplate",
    "ses:DeleteVerifiedEmailAddress",
    "ses:DescribeActiveReceiptRuleSet",
    "ses:DescribeConfigurationSet",
    "ses:DescribeReceiptRule",
    "ses:DescribeReceiptRuleSet",
    "ses:GetAccount",
    "ses:GetAccountSendingEnabled",
    "ses:GetBlacklistReports",
    "ses:GetConfigurationSet",
    "ses:GetConfigurationSetEventDestinations",
    "ses:GetCustomVerificationEmailTemplate",
    "ses:GetDedicatedIp",
    "ses:GetDedicatedIps",
    "ses:GetDeliverabilityDashboardOptions",
    "ses:GetDeliverabilityTestReport",
    "ses:GetDomainStatisticsReport",
    "ses:GetEmailIdentity",
    "ses:GetIdentityDkimAttributes",
    "ses:GetIdentityMailFromDomainAttributes",
    "ses:GetIdentityNotificationAttributes",
    "ses:GetIdentityPolicies",
    "ses:GetIdentityVerificationAttributes",
    "ses:GetSendQuota",
    "ses:GetSendStatistics",
    "ses:GetTemplate",
    "ses:ListConfigurationSets",
    "ses:ListCustomVerificationEmailTemplates",
    "ses:ListDedicatedIpPools",
    "ses:ListDeliverabilityTestReports",
    "ses:ListEmailIdentities",
    "ses:ListIdentities",
    "ses:ListIdentityPolicies",
    "ses:ListReceiptFilters",
    "ses:ListReceiptRuleSets",
    "ses:ListTagsForResource",
    "ses:ListTemplates",
    "ses:ListVerifiedEmailAddresses",
    "ses:PutAccountDedicatedIpWarmupAttributes",
    "ses:PutAccountSendingAttributes",
    "ses:PutConfigurationSetDeliveryOptions",
    "ses:PutConfigurationSetReputationOptions",
    "ses:PutConfigurationSetSendingOptions",
    "ses:PutConfigurationSetTrackingOptions",
    "ses:PutDedicatedIpInPool",
    "ses:PutDedicatedIpWarmupAttributes",
    "ses:PutDeliverabilityDashboardOption",
    "ses:PutEmailIdentityDkimAttributes",
    "ses:PutEmailIdentityFeedbackAttributes",
    "ses:PutEmailIdentityMailFromAttributes",
    "ses:PutIdentityPolicy",
    "ses:ReorderReceiptRuleSet",
    "ses:SendBounce",
    "ses:SendBulkTemplatedEmail",
    "ses:SendCustomVerificationEmail",
    "ses:SendEmail",
    "ses:SendRawEmail",
    "ses:SendTemplatedEmail",
    "ses:SetActiveReceiptRuleSet",
    "ses:SetIdentityDkimEnabled",
    "ses:SetIdentityFeedbackForwardingEnabled",
    "ses:SetIdentityHeadersInNotificationsEnabled",
    "ses:SetIdentityMailFromDomain",
    "ses:SetIdentityNotificationTopic",
    "ses:SetReceiptRulePosition",
    "ses:TagResource",
    "ses:TestRenderTemplate",
    "ses:UntagResource",
    "ses:UpdateAccountSendingEnabled",
    "ses:UpdateConfigurationSetEventDestination",
    "ses:UpdateConfigurationSetReputationMetricsEnabled",
    "ses:UpdateConfigurationSetSendingEnabled",
    "ses:UpdateConfigurationSetTrackingOptions",
    "ses:UpdateCustomVerificationEmailTemplate",
    "ses:UpdateReceiptRule",
    "ses:UpdateTemplate",
    "ses:VerifyDomainDkim",
    "ses:VerifyDomainIdentity",
    "ses:VerifyEmailAddress",
    "ses:VerifyEmailIdentity",
    "shield:AssociateDRTLogBucket",
    "shield:AssociateDRTRole",
    "shield:CreateProtection",
    "shield:CreateSubscription",
    "shield:DeleteProtection",
    "shield:DeleteSubscription",
    "shield:DescribeAttack",
    "shield:DescribeDRTAccess",
    "shield:DescribeEmergencyContactSettings",
    "shield:DescribeProtection",
    "shield:DescribeSubscription",
    "shield:DisassociateDRTLogBucket",
    "shield:DisassociateDRTRole",
    "shield:GetSubscriptionState",
    "shield:ListAttacks",
    "shield:ListProtections",
    "shield:UpdateEmergencyContactSettings",
    "shield:UpdateSubscription",
    "signer:AddProfilePermission",
    "signer:CancelSigningProfile",
    "signer:DescribeSigningJob",
    "signer:GetSigningPlatform",
    "signer:GetSigningProfile",
    "signer:ListProfilePermissions",
    "signer:ListSigningJobs",
    "signer:ListSigningPlatforms",
    "signer:ListSigningProfiles",
    "signer:ListTagsForResource",
    "signer:PutSigningProfile",
    "signer:RemoveProfilePermission",
    "signer:RevokeSignature",
    "signer:RevokeSigningProfile",
    "signer:StartSigningJob",
    "signer:TagResource",
    "signer:UntagResource",
    "sms-voice:CreateConfigurationSet",
    "sms-voice:CreateConfigurationSetEventDestination",
    "sms-voice:DeleteConfigurationSet",
    "sms-voice:DeleteConfigurationSetEventDestination",
    "sms-voice:GetConfigurationSetEventDestinations",
    "sms-voice:ListConfigurationSets",
    "sms-voice:SendVoiceMessage",
    "sms-voice:UpdateConfigurationSetEventDestination",
    "sms:CreateApp",
    "sms:CreateReplicationJob",
    "sms:DeleteApp",
    "sms:DeleteAppLaunchConfiguration",
    "sms:DeleteAppReplicationConfiguration",
    "sms:DeleteAppValidationConfiguration",
    "sms:DeleteReplicationJob",
    "sms:DeleteServerCatalog",
    "sms:DisassociateConnector",
    "sms:GenerateChangeSet",
    "sms:GenerateTemplate",
    "sms:GetApp",
    "sms:GetAppLaunchConfiguration",
    "sms:GetAppReplicationConfiguration",
    "sms:GetAppValidationConfiguration",
    "sms:GetAppValidationOutput",
    "sms:GetConnectors",
    "sms:GetMessages",
    "sms:GetReplicationJobs",
    "sms:GetReplicationRuns",
    "sms:GetServers",
    "sms:ImportAppCatalog",
    "sms:ImportServerCatalog",
    "sms:LaunchApp",
    "sms:ListApps",
    "sms:NotifyAppValidationOutput",
    "sms:PutAppLaunchConfiguration",
    "sms:PutAppReplicationConfiguration",
    "sms:PutAppValidationConfiguration",
    "sms:SendMessage",
    "sms:StartAppReplication",
    "sms:StartOnDemandAppReplication",
    "sms:StartOnDemandReplicationRun",
    "sms:StopAppReplication",
    "sms:TerminateApp",
    "sms:UpdateApp",
    "sms:UpdateReplicationJob",
    "snowball:CancelCluster",
    "snowball:CancelJob",
    "snowball:CreateAddress",
    "snowball:CreateCluster",
    "snowball:CreateJob",
    "snowball:DescribeAddress",
    "snowball:DescribeAddresses",
    "snowball:DescribeCluster",
    "snowball:DescribeJob",
    "snowball:GetJobManifest",
    "snowball:GetJobUnlockCode",
    "snowball:GetSnowballUsage",
    "snowball:ListClusterJobs",
    "snowball:ListClusters",
    "snowball:ListJobs",
    "snowball:UpdateCluster",
    "snowball:UpdateJob",
    "sns:AddPermission",
    "sns:CheckIfPhoneNumberIsOptedOut",
    "sns:ConfirmSubscription",
    "sns:CreatePlatformApplication",
    "sns:CreatePlatformEndpoint",
    "sns:CreateTopic",
    "sns:DeleteEndpoint",
    "sns:DeletePlatformApplication",
    "sns:DeleteTopic",
    "sns:GetEndpointAttributes",
    "sns:GetPlatformApplicationAttributes",
    "sns:GetSMSAttributes",
    "sns:GetSubscriptionAttributes",
    "sns:GetTopicAttributes",
    "sns:ListEndpointsByPlatformApplication",
    "sns:ListPhoneNumbersOptedOut",
    "sns:ListPlatformApplications",
    "sns:ListSubscriptions",
    "sns:ListSubscriptionsByTopic",
    "sns:ListTagsForResource",
    "sns:ListTopics",
    "sns:OptInPhoneNumber",
    "sns:Publish",
    "sns:RemovePermission",
    "sns:SetEndpointAttributes",
    "sns:SetPlatformApplicationAttributes",
    "sns:SetSMSAttributes",
    "sns:SetSubscriptionAttributes",
    "sns:SetTopicAttributes",
    "sns:Subscribe",
    "sns:TagResource",
    "sns:Unsubscribe",
    "sns:UntagResource",
    "sqs:AddPermission",
    "sqs:ChangeMessageVisibility",
    "sqs:ChangeMessageVisibilityBatch",
    "sqs:CreateQueue",
    "sqs:DeleteMessage",
    "sqs:DeleteMessageBatch",
    "sqs:DeleteQueue",
    "sqs:GetQueueAttributes",
    "sqs:GetQueueUrl",
    "sqs:ListDeadLetterSourceQueues",
    "sqs:ListQueueTags",
    "sqs:ListQueues",
    "sqs:PurgeQueue",
    "sqs:ReceiveMessage",
    "sqs:RemovePermission",
    "sqs:SendMessage",
    "sqs:SendMessageBatch",
    "sqs:SetQueueAttributes",
    "sqs:TagQueue",
    "sqs:UntagQueue",
    "ssm:AddTagsToResource",
    "ssm:CancelCommand",
    "ssm:CancelMaintenanceWindowExecution",
    "ssm:CreateActivation",
    "ssm:CreateAssociation",
    "ssm:CreateAssociationBatch",
    "ssm:CreateDocument",
    "ssm:CreateMaintenanceWindow",
    "ssm:CreateOpsItem",
    "ssm:CreatePatchBaseline",
    "ssm:CreateResourceDataSync",
    "ssm:DeleteActivation",
    "ssm:DeleteAssociation",
    "ssm:DeleteDocument",
    "ssm:DeleteInventory",
    "ssm:DeleteMaintenanceWindow",
    "ssm:DeleteParameter",
    "ssm:DeleteParameters",
    "ssm:DeletePatchBaseline",
    "ssm:DeleteResourceDataSync",
    "ssm:DeregisterManagedInstance",
    "ssm:DeregisterPatchBaselineForPatchGroup",
    "ssm:DeregisterTargetFromMaintenanceWindow",
    "ssm:DeregisterTaskFromMaintenanceWindow",
    "ssm:DescribeActivations",
    "ssm:DescribeAssociation",
    "ssm:DescribeAssociationExecutionTargets",
    "ssm:DescribeAssociationExecutions",
    "ssm:DescribeAutomationExecutions",
    "ssm:DescribeAutomationStepExecutions",
    "ssm:DescribeAvailablePatches",
    "ssm:DescribeDocument",
    "ssm:DescribeDocumentParameters",
    "ssm:DescribeDocumentPermission",
    "ssm:DescribeEffectiveInstanceAssociations",
    "ssm:DescribeEffectivePatchesForPatchBaseline",
    "ssm:DescribeInstanceAssociationsStatus",
    "ssm:DescribeInstanceInformation",
    "ssm:DescribeInstancePatchStates",
    "ssm:DescribeInstancePatchStatesForPatchGroup",
    "ssm:DescribeInstancePatches",
    "ssm:DescribeInstanceProperties",
    "ssm:DescribeInventoryDeletions",
    "ssm:DescribeMaintenanceWindowExecutionTaskInvocations",
    "ssm:DescribeMaintenanceWindowExecutionTasks",
    "ssm:DescribeMaintenanceWindowExecutions",
    "ssm:DescribeMaintenanceWindowSchedule",
    "ssm:DescribeMaintenanceWindowTargets",
    "ssm:DescribeMaintenanceWindowTasks",
    "ssm:DescribeMaintenanceWindows",
    "ssm:DescribeMaintenanceWindowsForTarget",
    "ssm:DescribeOpsItems",
    "ssm:DescribeParameters",
    "ssm:DescribePatchBaselines",
    "ssm:DescribePatchGroupState",
    "ssm:DescribePatchGroups",
    "ssm:DescribePatchProperties",
    "ssm:DescribeSessions",
    "ssm:GetAutomationExecution",
    "ssm:GetCalendarState",
    "ssm:GetCommandInvocation",
    "ssm:GetConnectionStatus",
    "ssm:GetDefaultPatchBaseline",
    "ssm:GetDeployablePatchSnapshotForInstance",
    "ssm:GetDocument",
    "ssm:GetInventory",
    "ssm:GetInventorySchema",
    "ssm:GetMaintenanceWindow",
    "ssm:GetMaintenanceWindowExecution",
    "ssm:GetMaintenanceWindowExecutionTask",
    "ssm:GetMaintenanceWindowExecutionTaskInvocation",
    "ssm:GetMaintenanceWindowTask",
    "ssm:GetManifest",
    "ssm:GetOpsItem",
    "ssm:GetOpsSummary",
    "ssm:GetParameter",
    "ssm:GetParameterHistory",
    "ssm:GetParameters",
    "ssm:GetParametersByPath",
    "ssm:GetPatchBaseline",
    "ssm:GetPatchBaselineForPatchGroup",
    "ssm:GetServiceSetting",
    "ssm:LabelParameterVersion",
    "ssm:ListAssociationVersions",
    "ssm:ListAssociations",
    "ssm:ListCommandInvocations",
    "ssm:ListCommands",
    "ssm:ListComplianceItems",
    "ssm:ListComplianceSummaries",
    "ssm:ListDocumentVersions",
    "ssm:ListDocuments",
    "ssm:ListInstanceAssociations",
    "ssm:ListInventoryEntries",
    "ssm:ListResourceComplianceSummaries",
    "ssm:ListResourceDataSync",
    "ssm:ListTagsForResource",
    "ssm:ModifyDocumentPermission",
    "ssm:PutComplianceItems",
    "ssm:PutConfigurePackageResult",
    "ssm:PutInventory",
    "ssm:PutParameter",
    "ssm:RegisterDefaultPatchBaseline",
    "ssm:RegisterPatchBaselineForPatchGroup",
    "ssm:RegisterTargetWithMaintenanceWindow",
    "ssm:RegisterTaskWithMaintenanceWindow",
    "ssm:RemoveTagsFromResource",
    "ssm:ResetServiceSetting",
    "ssm:ResumeSession",
    "ssm:SendAutomationSignal",
    "ssm:SendCommand",
    "ssm:StartAssociationsOnce",
    "ssm:StartAutomationExecution",
    "ssm:StartSession",
    "ssm:StopAutomationExecution",
    "ssm:TerminateSession",
    "ssm:UpdateAssociation",
    "ssm:UpdateAssociationStatus",
    "ssm:UpdateDocument",
    "ssm:UpdateDocumentDefaultVersion",
    "ssm:UpdateInstanceAssociationStatus",
    "ssm:UpdateInstanceInformation",
    "ssm:UpdateMaintenanceWindow",
    "ssm:UpdateMaintenanceWindowTarget",
    "ssm:UpdateMaintenanceWindowTask",
    "ssm:UpdateManagedInstanceRole",
    "ssm:UpdateOpsItem",
    "ssm:UpdatePatchBaseline",
    "ssm:UpdateResourceDataSync",
    "ssm:UpdateServiceSetting",
    "ssmmessages:CreateControlChannel",
    "ssmmessages:CreateDataChannel",
    "ssmmessages:OpenControlChannel",
    "ssmmessages:OpenDataChannel",
    "sso-directory:AddMemberToGroup",
    "sso-directory:CompleteVirtualMfaDeviceRegistration",
    "sso-directory:CompleteWebAuthnDeviceRegistration",
    "sso-directory:CreateAlias",
    "sso-directory:CreateBearerToken",
    "sso-directory:CreateExternalIdPConfigurationForDirectory",
    "sso-directory:CreateGroup",
    "sso-directory:CreateProvisioningTenant",
    "sso-directory:CreateUser",
    "sso-directory:DeleteBearerToken",
    "sso-directory:DeleteExternalIdPCertificate",
    "sso-directory:DeleteExternalIdPConfigurationForDirectory",
    "sso-directory:DeleteGroup",
    "sso-directory:DeleteMfaDeviceForUser",
    "sso-directory:DeleteProvisioningTenant",
    "sso-directory:DeleteUser",
    "sso-directory:DescribeDirectory",
    "sso-directory:DescribeGroups",
    "sso-directory:DescribeUser",
    "sso-directory:DescribeUsers",
    "sso-directory:DisableExternalIdPConfigurationForDirectory",
    "sso-directory:DisableUser",
    "sso-directory:EnableExternalIdPConfigurationForDirectory",
    "sso-directory:EnableUser",
    "sso-directory:GetAWSSPConfigurationForDirectory",
    "sso-directory:ImportExternalIdPCertificate",
    "sso-directory:IsMemberInGroup",
    "sso-directory:ListBearerTokens",
    "sso-directory:ListExternalIdPCertificates",
    "sso-directory:ListExternalIdPConfigurationsForDirectory",
    "sso-directory:ListGroupsForUser",
    "sso-directory:ListMembersInGroup",
    "sso-directory:ListMfaDevicesForUser",
    "sso-directory:ListProvisioningTenants",
    "sso-directory:RemoveMemberFromGroup",
    "sso-directory:SearchGroups",
    "sso-directory:SearchUsers",
    "sso-directory:StartVirtualMfaDeviceRegistration",
    "sso-directory:StartWebAuthnDeviceRegistration",
    "sso-directory:UpdateExternalIdPConfigurationForDirectory",
    "sso-directory:UpdateGroup",
    "sso-directory:UpdateMfaDeviceForUser",
    "sso-directory:UpdatePassword",
    "sso-directory:UpdateUser",
    "sso-directory:VerifyEmail",
    "sso:AssociateDirectory",
    "sso:AssociateProfile",
    "sso:AttachManagedPolicyToPermissionSet",
    "sso:CreateAccountAssignment",
    "sso:CreateApplicationInstance",
    "sso:CreateApplicationInstanceCertificate",
    "sso:CreateInstanceAccessControlAttributeConfiguration",
    "sso:CreateManagedApplicationInstance",
    "sso:CreatePermissionSet",
    "sso:CreateProfile",
    "sso:CreateTrust",
    "sso:DeleteAccountAssignment",
    "sso:DeleteApplicationInstance",
    "sso:DeleteApplicationInstanceCertificate",
    "sso:DeleteInlinePolicyFromPermissionSet",
    "sso:DeleteInstanceAccessControlAttributeConfiguration",
    "sso:DeleteManagedApplicationInstance",
    "sso:DeletePermissionSet",
    "sso:DeletePermissionsPolicy",
    "sso:DeleteProfile",
    "sso:DescribeAccountAssignmentCreationStatus",
    "sso:DescribeAccountAssignmentDeletionStatus",
    "sso:DescribeInstanceAccessControlAttributeConfiguration",
    "sso:DescribePermissionSet",
    "sso:DescribePermissionSetProvisioningStatus",
    "sso:DescribePermissionsPolicies",
    "sso:DescribeRegisteredRegions",
    "sso:DetachManagedPolicyFromPermissionSet",
    "sso:DisassociateDirectory",
    "sso:DisassociateProfile",
    "sso:GetApplicationInstance",
    "sso:GetApplicationTemplate",
    "sso:GetInlinePolicyForPermissionSet",
    "sso:GetManagedApplicationInstance",
    "sso:GetMfaDeviceManagementForDirectory",
    "sso:GetPermissionSet",
    "sso:GetPermissionsPolicy",
    "sso:GetProfile",
    "sso:GetSSOStatus",
    "sso:GetSharedSsoConfiguration",
    "sso:GetSsoConfiguration",
    "sso:GetTrust",
    "sso:ImportApplicationInstanceServiceProviderMetadata",
    "sso:ListAccountAssignmentCreationStatus",
    "sso:ListAccountAssignmentDeletionStatus",
    "sso:ListAccountAssignments",
    "sso:ListAccountsForProvisionedPermissionSet",
    "sso:ListApplicationInstanceCertificates",
    "sso:ListApplicationInstances",
    "sso:ListApplicationTemplates",
    "sso:ListApplications",
    "sso:ListDirectoryAssociations",
    "sso:ListInstances",
    "sso:ListManagedPoliciesInPermissionSet",
    "sso:ListPermissionSetProvisioningStatus",
    "sso:ListPermissionSets",
    "sso:ListPermissionSetsProvisionedToAccount",
    "sso:ListProfileAssociations",
    "sso:ListProfiles",
    "sso:ListTagsForResource",
    "sso:ProvisionPermissionSet",
    "sso:PutInlinePolicyToPermissionSet",
    "sso:PutMfaDeviceManagementForDirectory",
    "sso:PutPermissionsPolicy",
    "sso:SearchGroups",
    "sso:SearchUsers",
    "sso:StartSSO",
    "sso:TagResource",
    "sso:UntagResource",
    "sso:UpdateApplicationInstanceActiveCertificate",
    "sso:UpdateApplicationInstanceDisplayData",
    "sso:UpdateApplicationInstanceResponseConfiguration",
    "sso:UpdateApplicationInstanceResponseSchemaConfiguration",
    "sso:UpdateApplicationInstanceSecurityConfiguration",
    "sso:UpdateApplicationInstanceServiceProviderConfiguration",
    "sso:UpdateApplicationInstanceStatus",
    "sso:UpdateDirectoryAssociation",
    "sso:UpdateInstanceAccessControlAttributeConfiguration",
    "sso:UpdateManagedApplicationInstanceStatus",
    "sso:UpdatePermissionSet",
    "sso:UpdateProfile",
    "sso:UpdateSSOConfiguration",
    "sso:UpdateTrust",
    "states:CreateActivity",
    "states:CreateStateMachine",
    "states:DeleteActivity",
    "states:DeleteStateMachine",
    "states:DescribeActivity",
    "states:DescribeExecution",
    "states:DescribeStateMachine",
    "states:DescribeStateMachineForExecution",
    "states:GetActivityTask",
    "states:GetExecutionHistory",
    "states:ListActivities",
    "states:ListExecutions",
    "states:ListStateMachines",
    "states:ListTagsForResource",
    "states:SendTaskFailure",
    "states:SendTaskHeartbeat",
    "states:SendTaskSuccess",
    "states:StartExecution",
    "states:StopExecution",
    "states:TagResource",
    "states:UntagResource",
    "states:UpdateStateMachine",
    "storagegateway:ActivateGateway",
    "storagegateway:AddCache",
    "storagegateway:AddTagsToResource",
    "storagegateway:AddUploadBuffer",
    "storagegateway:AddWorkingStorage",
    "storagegateway:AssignTapePool",
    "storagegateway:AttachVolume",
    "storagegateway:BypassGovernanceRetention",
    "storagegateway:CancelArchival",
    "storagegateway:CancelRetrieval",
    "storagegateway:CreateCachediSCSIVolume",
    "storagegateway:CreateNFSFileShare",
    "storagegateway:CreateSMBFileShare",
    "storagegateway:CreateSnapshot",
    "storagegateway:CreateSnapshotFromVolumeRecoveryPoint",
    "storagegateway:CreateStorediSCSIVolume",
    "storagegateway:CreateTapePool",
    "storagegateway:CreateTapeWithBarcode",
    "storagegateway:CreateTapes",
    "storagegateway:DeleteAutomaticTapeCreationPolicy",
    "storagegateway:DeleteBandwidthRateLimit",
    "storagegateway:DeleteChapCredentials",
    "storagegateway:DeleteFileShare",
    "storagegateway:DeleteGateway",
    "storagegateway:DeleteSnapshotSchedule",
    "storagegateway:DeleteTape",
    "storagegateway:DeleteTapeArchive",
    "storagegateway:DeleteTapePool",
    "storagegateway:DeleteVolume",
    "storagegateway:DescribeBandwidthRateLimit",
    "storagegateway:DescribeCache",
    "storagegateway:DescribeCachediSCSIVolumes",
    "storagegateway:DescribeChapCredentials",
    "storagegateway:DescribeGatewayInformation",
    "storagegateway:DescribeMaintenanceStartTime",
    "storagegateway:DescribeNFSFileShares",
    "storagegateway:DescribeSMBFileShares",
    "storagegateway:DescribeSMBSettings",
    "storagegateway:DescribeSnapshotSchedule",
    "storagegateway:DescribeStorediSCSIVolumes",
    "storagegateway:DescribeTapeArchives",
    "storagegateway:DescribeTapeRecoveryPoints",
    "storagegateway:DescribeTapes",
    "storagegateway:DescribeUploadBuffer",
    "storagegateway:DescribeVTLDevices",
    "storagegateway:DescribeWorkingStorage",
    "storagegateway:DetachVolume",
    "storagegateway:DisableGateway",
    "storagegateway:JoinDomain",
    "storagegateway:ListAutomaticTapeCreationPolicies",
    "storagegateway:ListFileShares",
    "storagegateway:ListGateways",
    "storagegateway:ListLocalDisks",
    "storagegateway:ListTagsForResource",
    "storagegateway:ListTapePools",
    "storagegateway:ListTapes",
    "storagegateway:ListVolumeInitiators",
    "storagegateway:ListVolumeRecoveryPoints",
    "storagegateway:ListVolumes",
    "storagegateway:NotifyWhenUploaded",
    "storagegateway:RefreshCache",
    "storagegateway:RemoveTagsFromResource",
    "storagegateway:ResetCache",
    "storagegateway:RetrieveTapeArchive",
    "storagegateway:RetrieveTapeRecoveryPoint",
    "storagegateway:SetLocalConsolePassword",
    "storagegateway:SetSMBGuestPassword",
    "storagegateway:ShutdownGateway",
    "storagegateway:StartGateway",
    "storagegateway:UpdateAutomaticTapeCreationPolicy",
    "storagegateway:UpdateBandwidthRateLimit",
    "storagegateway:UpdateChapCredentials",
    "storagegateway:UpdateGatewayInformation",
    "storagegateway:UpdateGatewaySoftwareNow",
    "storagegateway:UpdateMaintenanceStartTime",
    "storagegateway:UpdateNFSFileShare",
    "storagegateway:UpdateSMBFileShare",
    "storagegateway:UpdateSnapshotSchedule",
    "storagegateway:UpdateVTLDeviceType",
    "sts:AssumeRole",
    "sts:AssumeRoleWithSAML",
    "sts:AssumeRoleWithWebIdentity",
    "sts:DecodeAuthorizationMessage",
    "sts:GetAccessKeyInfo",
    "sts:GetCallerIdentity",
    "sts:GetFederationToken",
    "sts:GetServiceBearerToken",
    "sts:GetSessionToken",
    "sts:TagSession",
    "sumerian:Login",
    "sumerian:ViewRelease",
    "support:AddAttachmentsToSet",
    "support:AddCommunicationToCase",
    "support:CreateCase",
    "support:DescribeAttachment",
    "support:DescribeCaseAttributes",
    "support:DescribeCases",
    "support:DescribeCommunications",
    "support:DescribeIssueTypes",
    "support:DescribeServices",
    "support:DescribeSeverityLevels",
    "support:DescribeSupportLevel",
    "support:DescribeTrustedAdvisorCheckRefreshStatuses",
    "support:DescribeTrustedAdvisorCheckResult",
    "support:DescribeTrustedAdvisorCheckSummaries",
    "support:DescribeTrustedAdvisorChecks",
    "support:InitiateCallForCase",
    "support:InitiateChatForCase",
    "support:PutCaseAttributes",
    "support:RateCaseCommunication",
    "support:RefreshTrustedAdvisorCheck",
    "support:ResolveCase",
    "support:SearchForCases",
    "swf:CancelTimer",
    "swf:CancelWorkflowExecution",
    "swf:CompleteWorkflowExecution",
    "swf:ContinueAsNewWorkflowExecution",
    "swf:CountClosedWorkflowExecutions",
    "swf:CountOpenWorkflowExecutions",
    "swf:CountPendingActivityTasks",
    "swf:CountPendingDecisionTasks",
    "swf:DeprecateActivityType",
    "swf:DeprecateDomain",
    "swf:DeprecateWorkflowType",
    "swf:DescribeActivityType",
    "swf:DescribeDomain",
    "swf:DescribeWorkflowExecution",
    "swf:DescribeWorkflowType",
    "swf:FailWorkflowExecution",
    "swf:GetWorkflowExecutionHistory",
    "swf:ListActivityTypes",
    "swf:ListClosedWorkflowExecutions",
    "swf:ListDomains",
    "swf:ListOpenWorkflowExecutions",
    "swf:ListTagsForResource",
    "swf:ListWorkflowTypes",
    "swf:PollForActivityTask",
    "swf:PollForDecisionTask",
    "swf:RecordActivityTaskHeartbeat",
    "swf:RecordMarker",
    "swf:RegisterActivityType",
    "swf:RegisterDomain",
    "swf:RegisterWorkflowType",
    "swf:RequestCancelActivityTask",
    "swf:RequestCancelExternalWorkflowExecution",
    "swf:RequestCancelWorkflowExecution",
    "swf:RespondActivityTaskCanceled",
    "swf:RespondActivityTaskCompleted",
    "swf:RespondActivityTaskFailed",
    "swf:RespondDecisionTaskCompleted",
    "swf:ScheduleActivityTask",
    "swf:SignalExternalWorkflowExecution",
    "swf:SignalWorkflowExecution",
    "swf:StartChildWorkflowExecution",
    "swf:StartTimer",
    "swf:StartWorkflowExecution",
    "swf:TagResource",
    "swf:TerminateWorkflowExecution",
    "swf:UntagResource",
    "synthetics:CreateCanary",
    "synthetics:DeleteCanary",
    "synthetics:DescribeCanaries",
    "synthetics:DescribeCanariesLastRun",
    "synthetics:GetCanaryRuns",
    "synthetics:ListTagsForResource",
    "synthetics:StartCanary",
    "synthetics:StopCanary",
    "synthetics:TagResource",
    "synthetics:UntagResource",
    "synthetics:UpdateCanary",
    "tag:DescribeReportCreation",
    "tag:GetComplianceSummary",
    "tag:GetResources",
    "tag:GetTagKeys",
    "tag:GetTagValues",
    "tag:StartReportCreation",
    "tag:TagResources",
    "tag:UntagResources",
    "textract:AnalyzeDocument",
    "textract:DetectDocumentText",
    "textract:GetDocumentAnalysis",
    "textract:GetDocumentTextDetection",
    "textract:StartDocumentAnalysis",
    "textract:StartDocumentTextDetection",
    "timestream:CancelQuery",
    "timestream:CreateDatabase",
    "timestream:CreateTable",
    "timestream:DeleteDatabase",
    "timestream:DeleteTable",
    "timestream:DescribeDatabase",
    "timestream:DescribeEndpoints",
    "timestream:DescribeTable",
    "timestream:ListDatabases",
    "timestream:ListMeasures",
    "timestream:ListTables",
    "timestream:ListTagsForResource",
    "timestream:Select",
    "timestream:SelectValues",
    "timestream:TagResource",
    "timestream:UntagResource",
    "timestream:UpdateDatabase",
    "timestream:UpdateTable",
    "timestream:WriteRecords",
    "transcribe:CreateLanguageModel",
    "transcribe:CreateMedicalVocabulary",
    "transcribe:CreateVocabulary",
    "transcribe:CreateVocabularyFilter",
    "transcribe:DeleteLanguageModel",
    "transcribe:DeleteMedicalTranscriptionJob",
    "transcribe:DeleteMedicalVocabulary",
    "transcribe:DeleteTranscriptionJob",
    "transcribe:DeleteVocabulary",
    "transcribe:DeleteVocabularyFilter",
    "transcribe:DescribeLanguageModel",
    "transcribe:GetMedicalTranscriptionJob",
    "transcribe:GetMedicalVocabulary",
    "transcribe:GetTranscriptionJob",
    "transcribe:GetVocabulary",
    "transcribe:GetVocabularyFilter",
    "transcribe:ListLanguageModels",
    "transcribe:ListMedicalTranscriptionJobs",
    "transcribe:ListMedicalVocabularies",
    "transcribe:ListTranscriptionJobs",
    "transcribe:ListVocabularies",
    "transcribe:ListVocabularyFilters",
    "transcribe:StartMedicalStreamTranscription",
    "transcribe:StartMedicalStreamTranscriptionWebSocket",
    "transcribe:StartMedicalTranscriptionJob",
    "transcribe:StartStreamTranscription",
    "transcribe:StartStreamTranscriptionWebSocket",
    "transcribe:StartTranscriptionJob",
    "transcribe:UpdateMedicalVocabulary",
    "transcribe:UpdateVocabulary",
    "transcribe:UpdateVocabularyFilter",
    "transfer:CreateServer",
    "transfer:CreateUser",
    "transfer:DeleteServer",
    "transfer:DeleteSshPublicKey",
    "transfer:DeleteUser",
    "transfer:DescribeServer",
    "transfer:DescribeUser",
    "transfer:ImportSshPublicKey",
    "transfer:ListServers",
    "transfer:ListTagsForResource",
    "transfer:ListUsers",
    "transfer:StartServer",
    "transfer:StopServer",
    "transfer:TagResource",
    "transfer:TestIdentityProvider",
    "transfer:UntagResource",
    "transfer:UpdateServer",
    "transfer:UpdateUser",
    "translate:CreateParallelData",
    "translate:DeleteParallelData",
    "translate:DeleteTerminology",
    "translate:DescribeTextTranslationJob",
    "translate:GetParallelData",
    "translate:GetTerminology",
    "translate:ImportTerminology",
    "translate:ListParallelData",
    "translate:ListTerminologies",
    "translate:ListTextTranslationJobs",
    "translate:StartTextTranslationJob",
    "translate:StopTextTranslationJob",
    "translate:TranslateText",
    "translate:UpdateParallelData",
    "trustedadvisor:DescribeAccount",
    "trustedadvisor:DescribeAccountAccess",
    "trustedadvisor:DescribeCheckItems",
    "trustedadvisor:DescribeCheckRefreshStatuses",
    "trustedadvisor:DescribeCheckSummaries",
    "trustedadvisor:DescribeChecks",
    "trustedadvisor:DescribeNotificationPreferences",
    "trustedadvisor:DescribeOrganization",
    "trustedadvisor:DescribeOrganizationAccounts",
    "trustedadvisor:DescribeReports",
    "trustedadvisor:DescribeServiceMetadata",
    "trustedadvisor:ExcludeCheckItems",
    "trustedadvisor:GenerateReport",
    "trustedadvisor:IncludeCheckItems",
    "trustedadvisor:ListAccountsForParent",
    "trustedadvisor:ListOrganizationalUnitsForParent",
    "trustedadvisor:ListRoots",
    "trustedadvisor:RefreshCheck",
    "trustedadvisor:SetAccountAccess",
    "trustedadvisor:SetOrganizationAccess",
    "trustedadvisor:UpdateNotificationPreferences",
    "waf-regional:AssociateWebACL",
    "waf-regional:CreateByteMatchSet",
    "waf-regional:CreateGeoMatchSet",
    "waf-regional:CreateIPSet",
    "waf-regional:CreateRateBasedRule",
    "waf-regional:CreateRegexMatchSet",
    "waf-regional:CreateRegexPatternSet",
    "waf-regional:CreateRule",
    "waf-regional:CreateRuleGroup",
    "waf-regional:CreateSizeConstraintSet",
    "waf-regional:CreateSqlInjectionMatchSet",
    "waf-regional:CreateWebACL",
    "waf-regional:CreateWebACLMigrationStack",
    "waf-regional:CreateXssMatchSet",
    "waf-regional:DeleteByteMatchSet",
    "waf-regional:DeleteGeoMatchSet",
    "waf-regional:DeleteIPSet",
    "waf-regional:DeleteLoggingConfiguration",
    "waf-regional:DeletePermissionPolicy",
    "waf-regional:DeleteRateBasedRule",
    "waf-regional:DeleteRegexMatchSet",
    "waf-regional:DeleteRegexPatternSet",
    "waf-regional:DeleteRule",
    "waf-regional:DeleteRuleGroup",
    "waf-regional:DeleteSizeConstraintSet",
    "waf-regional:DeleteSqlInjectionMatchSet",
    "waf-regional:DeleteWebACL",
    "waf-regional:DeleteXssMatchSet",
    "waf-regional:DisassociateWebACL",
    "waf-regional:GetByteMatchSet",
    "waf-regional:GetChangeToken",
    "waf-regional:GetChangeTokenStatus",
    "waf-regional:GetGeoMatchSet",
    "waf-regional:GetIPSet",
    "waf-regional:GetLoggingConfiguration",
    "waf-regional:GetPermissionPolicy",
    "waf-regional:GetRateBasedRule",
    "waf-regional:GetRateBasedRuleManagedKeys",
    "waf-regional:GetRegexMatchSet",
    "waf-regional:GetRegexPatternSet",
    "waf-regional:GetRule",
    "waf-regional:GetRuleGroup",
    "waf-regional:GetSampledRequests",
    "waf-regional:GetSizeConstraintSet",
    "waf-regional:GetSqlInjectionMatchSet",
    "waf-regional:GetWebACL",
    "waf-regional:GetWebACLForResource",
    "waf-regional:GetXssMatchSet",
    "waf-regional:ListActivatedRulesInRuleGroup",
    "waf-regional:ListByteMatchSets",
    "waf-regional:ListGeoMatchSets",
    "waf-regional:ListIPSets",
    "waf-regional:ListLoggingConfigurations",
    "waf-regional:ListRateBasedRules",
    "waf-regional:ListRegexMatchSets",
    "waf-regional:ListRegexPatternSets",
    "waf-regional:ListResourcesForWebACL",
    "waf-regional:ListRuleGroups",
    "waf-regional:ListRules",
    "waf-regional:ListSizeConstraintSets",
    "waf-regional:ListSqlInjectionMatchSets",
    "waf-regional:ListSubscribedRuleGroups",
    "waf-regional:ListTagsForResource",
    "waf-regional:ListWebACLs",
    "waf-regional:ListXssMatchSets",
    "waf-regional:PutLoggingConfiguration",
    "waf-regional:PutPermissionPolicy",
    "waf-regional:TagResource",
    "waf-regional:UntagResource",
    "waf-regional:UpdateByteMatchSet",
    "waf-regional:UpdateGeoMatchSet",
    "waf-regional:UpdateIPSet",
    "waf-regional:UpdateRateBasedRule",
    "waf-regional:UpdateRegexMatchSet",
    "waf-regional:UpdateRegexPatternSet",
    "waf-regional:UpdateRule",
    "waf-regional:UpdateRuleGroup",
    "waf-regional:UpdateSizeConstraintSet",
    "waf-regional:UpdateSqlInjectionMatchSet",
    "waf-regional:UpdateWebACL",
    "waf-regional:UpdateXssMatchSet",
    "waf:CreateByteMatchSet",
    "waf:CreateGeoMatchSet",
    "waf:CreateIPSet",
    "waf:CreateRateBasedRule",
    "waf:CreateRegexMatchSet",
    "waf:CreateRegexPatternSet",
    "waf:CreateRule",
    "waf:CreateRuleGroup",
    "waf:CreateSizeConstraintSet",
    "waf:CreateSqlInjectionMatchSet",
    "waf:CreateWebACL",
    "waf:CreateWebACLMigrationStack",
    "waf:CreateXssMatchSet",
    "waf:DeleteByteMatchSet",
    "waf:DeleteGeoMatchSet",
    "waf:DeleteIPSet",
    "waf:DeleteLoggingConfiguration",
    "waf:DeletePermissionPolicy",
    "waf:DeleteRateBasedRule",
    "waf:DeleteRegexMatchSet",
    "waf:DeleteRegexPatternSet",
    "waf:DeleteRule",
    "waf:DeleteRuleGroup",
    "waf:DeleteSizeConstraintSet",
    "waf:DeleteSqlInjectionMatchSet",
    "waf:DeleteWebACL",
    "waf:DeleteXssMatchSet",
    "waf:GetByteMatchSet",
    "waf:GetChangeToken",
    "waf:GetChangeTokenStatus",
    "waf:GetGeoMatchSet",
    "waf:GetIPSet",
    "waf:GetLoggingConfiguration",
    "waf:GetPermissionPolicy",
    "waf:GetRateBasedRule",
    "waf:GetRateBasedRuleManagedKeys",
    "waf:GetRegexMatchSet",
    "waf:GetRegexPatternSet",
    "waf:GetRule",
    "waf:GetRuleGroup",
    "waf:GetSampledRequests",
    "waf:GetSizeConstraintSet",
    "waf:GetSqlInjectionMatchSet",
    "waf:GetWebACL",
    "waf:GetXssMatchSet",
    "waf:ListActivatedRulesInRuleGroup",
    "waf:ListByteMatchSets",
    "waf:ListGeoMatchSets",
    "waf:ListIPSets",
    "waf:ListLoggingConfigurations",
    "waf:ListRateBasedRules",
    "waf:ListRegexMatchSets",
    "waf:ListRegexPatternSets",
    "waf:ListRuleGroups",
    "waf:ListRules",
    "waf:ListSizeConstraintSets",
    "waf:ListSqlInjectionMatchSets",
    "waf:ListSubscribedRuleGroups",
    "waf:ListTagsForResource",
    "waf:ListWebACLs",
    "waf:ListXssMatchSets",
    "waf:PutLoggingConfiguration",
    "waf:PutPermissionPolicy",
    "waf:TagResource",
    "waf:UntagResource",
    "waf:UpdateByteMatchSet",
    "waf:UpdateGeoMatchSet",
    "waf:UpdateIPSet",
    "waf:UpdateRateBasedRule",
    "waf:UpdateRegexMatchSet",
    "waf:UpdateRegexPatternSet",
    "waf:UpdateRule",
    "waf:UpdateRuleGroup",
    "waf:UpdateSizeConstraintSet",
    "waf:UpdateSqlInjectionMatchSet",
    "waf:UpdateWebACL",
    "waf:UpdateXssMatchSet",
    "wafv2:AssociateWebACL",
    "wafv2:CheckCapacity",
    "wafv2:CreateIPSet",
    "wafv2:CreateRegexPatternSet",
    "wafv2:CreateRuleGroup",
    "wafv2:CreateWebACL",
    "wafv2:DeleteFirewallManagerRuleGroups",
    "wafv2:DeleteIPSet",
    "wafv2:DeleteLoggingConfiguration",
    "wafv2:DeletePermissionPolicy",
    "wafv2:DeleteRegexPatternSet",
    "wafv2:DeleteRuleGroup",
    "wafv2:DeleteWebACL",
    "wafv2:DescribeManagedRuleGroup",
    "wafv2:DisassociateFirewallManager",
    "wafv2:DisassociateWebACL",
    "wafv2:GetIPSet",
    "wafv2:GetLoggingConfiguration",
    "wafv2:GetPermissionPolicy",
    "wafv2:GetRateBasedStatementManagedKeys",
    "wafv2:GetRegexPatternSet",
    "wafv2:GetRuleGroup",
    "wafv2:GetSampledRequests",
    "wafv2:GetWebACL",
    "wafv2:GetWebACLForResource",
    "wafv2:ListAvailableManagedRuleGroups",
    "wafv2:ListIPSets",
    "wafv2:ListLoggingConfigurations",
    "wafv2:ListRegexPatternSets",
    "wafv2:ListResourcesForWebACL",
    "wafv2:ListRuleGroups",
    "wafv2:ListTagsForResource",
    "wafv2:ListWebACLs",
    "wafv2:PutFirewallManagerRuleGroups",
    "wafv2:PutLoggingConfiguration",
    "wafv2:PutPermissionPolicy",
    "wafv2:TagResource",
    "wafv2:UntagResource",
    "wafv2:UpdateIPSet",
    "wafv2:UpdateRegexPatternSet",
    "wafv2:UpdateRuleGroup",
    "wafv2:UpdateWebACL",
    "wam:AuthenticatePackager",
    "wellarchitected:CreateWorkload",
    "wellarchitected:CreateWorkloadShare",
    "wellarchitected:DeleteWorkload",
    "wellarchitected:GetWorkload",
    "wellarchitected:ListWorkloads",
    "workdocs:AbortDocumentVersionUpload",
    "workdocs:ActivateUser",
    "workdocs:AddResourcePermissions",
    "workdocs:AddUserToGroup",
    "workdocs:CheckAlias",
    "workdocs:CreateComment",
    "workdocs:CreateCustomMetadata",
    "workdocs:CreateFolder",
    "workdocs:CreateInstance",
    "workdocs:CreateLabels",
    "workdocs:CreateNotificationSubscription",
    "workdocs:CreateUser",
    "workdocs:DeactivateUser",
    "workdocs:DeleteComment",
    "workdocs:DeleteCustomMetadata",
    "workdocs:DeleteDocument",
    "workdocs:DeleteFolder",
    "workdocs:DeleteFolderContents",
    "workdocs:DeleteInstance",
    "workdocs:DeleteLabels",
    "workdocs:DeleteNotificationSubscription",
    "workdocs:DeleteUser",
    "workdocs:DeregisterDirectory",
    "workdocs:DescribeActivities",
    "workdocs:DescribeAvailableDirectories",
    "workdocs:DescribeComments",
    "workdocs:DescribeDocumentVersions",
    "workdocs:DescribeFolderContents",
    "workdocs:DescribeGroups",
    "workdocs:DescribeInstances",
    "workdocs:DescribeNotificationSubscriptions",
    "workdocs:DescribeResourcePermissions",
    "workdocs:DescribeRootFolders",
    "workdocs:DescribeUsers",
    "workdocs:DownloadDocumentVersion",
    "workdocs:GetCurrentUser",
    "workdocs:GetDocument",
    "workdocs:GetDocumentPath",
    "workdocs:GetDocumentVersion",
    "workdocs:GetFolder",
    "workdocs:GetFolderPath",
    "workdocs:GetResources",
    "workdocs:InitiateDocumentVersionUpload",
    "workdocs:RegisterDirectory",
    "workdocs:RemoveAllResourcePermissions",
    "workdocs:RemoveResourcePermission",
    "workdocs:UpdateDocument",
    "workdocs:UpdateDocumentVersion",
    "workdocs:UpdateFolder",
    "workdocs:UpdateInstanceAlias",
    "workdocs:UpdateUser",
    "worklink:AssociateDomain",
    "worklink:AssociateWebsiteAuthorizationProvider",
    "worklink:AssociateWebsiteCertificateAuthority",
    "worklink:CreateFleet",
    "worklink:DeleteFleet",
    "worklink:DescribeAuditStreamConfiguration",
    "worklink:DescribeCompanyNetworkConfiguration",
    "worklink:DescribeDevice",
    "worklink:DescribeDevicePolicyConfiguration",
    "worklink:DescribeDomain",
    "worklink:DescribeFleetMetadata",
    "worklink:DescribeIdentityProviderConfiguration",
    "worklink:DescribeWebsiteCertificateAuthority",
    "worklink:DisassociateDomain",
    "worklink:DisassociateWebsiteAuthorizationProvider",
    "worklink:DisassociateWebsiteCertificateAuthority",
    "worklink:ListDevices",
    "worklink:ListDomains",
    "worklink:ListFleets",
    "worklink:ListTagsForResource",
    "worklink:ListWebsiteAuthorizationProviders",
    "worklink:ListWebsiteCertificateAuthorities",
    "worklink:RestoreDomainAccess",
    "worklink:RevokeDomainAccess",
    "worklink:SearchEntity",
    "worklink:SignOutUser",
    "worklink:TagResource",
    "worklink:UntagResource",
    "worklink:UpdateAuditStreamConfiguration",
    "worklink:UpdateCompanyNetworkConfiguration",
    "worklink:UpdateDevicePolicyConfiguration",
    "worklink:UpdateDomainMetadata",
    "worklink:UpdateFleetMetadata",
    "worklink:UpdateIdentityProviderConfiguration",
    "workmail:AddMembersToGroup",
    "workmail:AssociateDelegateToResource",
    "workmail:AssociateMemberToGroup",
    "workmail:CancelMailboxExportJob",
    "workmail:CreateAlias",
    "workmail:CreateGroup",
    "workmail:CreateInboundMailFlowRule",
    "workmail:CreateMailDomain",
    "workmail:CreateMailUser",
    "workmail:CreateOrganization",
    "workmail:CreateOutboundMailFlowRule",
    "workmail:CreateResource",
    "workmail:CreateSmtpGateway",
    "workmail:CreateUser",
    "workmail:DeleteAccessControlRule",
    "workmail:DeleteAlias",
    "workmail:DeleteGroup",
    "workmail:DeleteInboundMailFlowRule",
    "workmail:DeleteMailDomain",
    "workmail:DeleteMailboxPermissions",
    "workmail:DeleteMobileDevice",
    "workmail:DeleteOrganization",
    "workmail:DeleteOutboundMailFlowRule",
    "workmail:DeleteResource",
    "workmail:DeleteRetentionPolicy",
    "workmail:DeleteSmtpGateway",
    "workmail:DeleteUser",
    "workmail:DeregisterFromWorkMail",
    "workmail:DescribeDirectories",
    "workmail:DescribeGroup",
    "workmail:DescribeInboundMailFlowRule",
    "workmail:DescribeKmsKeys",
    "workmail:DescribeMailDomains",
    "workmail:DescribeMailGroups",
    "workmail:DescribeMailUsers",
    "workmail:DescribeMailboxExportJob",
    "workmail:DescribeOrganization",
    "workmail:DescribeOrganizations",
    "workmail:DescribeOutboundMailFlowRule",
    "workmail:DescribeResource",
    "workmail:DescribeSmtpGateway",
    "workmail:DescribeUser",
    "workmail:DisableMailGroups",
    "workmail:DisableMailUsers",
    "workmail:DisassociateDelegateFromResource",
    "workmail:DisassociateMemberFromGroup",
    "workmail:EnableMailDomain",
    "workmail:EnableMailGroups",
    "workmail:EnableMailUsers",
    "workmail:GetAccessControlEffect",
    "workmail:GetDefaultRetentionPolicy",
    "workmail:GetJournalingRules",
    "workmail:GetMailDomainDetails",
    "workmail:GetMailGroupDetails",
    "workmail:GetMailUserDetails",
    "workmail:GetMailboxDetails",
    "workmail:GetMobileDeviceDetails",
    "workmail:GetMobileDevicesForUser",
    "workmail:GetMobilePolicyDetails",
    "workmail:ListAccessControlRules",
    "workmail:ListAliases",
    "workmail:ListGroupMembers",
    "workmail:ListGroups",
    "workmail:ListInboundMailFlowRules",
    "workmail:ListMailboxExportJobs",
    "workmail:ListMailboxPermissions",
    "workmail:ListMembersInMailGroup",
    "workmail:ListOrganizations",
    "workmail:ListOutboundMailFlowRules",
    "workmail:ListResourceDelegates",
    "workmail:ListResources",
    "workmail:ListSmtpGateways",
    "workmail:ListTagsForResource",
    "workmail:ListUsers",
    "workmail:PutAccessControlRule",
    "workmail:PutMailboxPermissions",
    "workmail:PutRetentionPolicy",
    "workmail:RegisterToWorkMail",
    "workmail:RemoveMembersFromGroup",
    "workmail:ResetPassword",
    "workmail:ResetUserPassword",
    "workmail:SearchMembers",
    "workmail:SetAdmin",
    "workmail:SetDefaultMailDomain",
    "workmail:SetJournalingRules",
    "workmail:SetMailGroupDetails",
    "workmail:SetMailUserDetails",
    "workmail:SetMobilePolicyDetails",
    "workmail:StartMailboxExportJob",
    "workmail:TagResource",
    "workmail:TestInboundMailFlowRules",
    "workmail:TestOutboundMailFlowRules",
    "workmail:UntagResource",
    "workmail:UpdateInboundMailFlowRule",
    "workmail:UpdateMailboxQuota",
    "workmail:UpdateOutboundMailFlowRule",
    "workmail:UpdatePrimaryEmailAddress",
    "workmail:UpdateResource",
    "workmail:UpdateSmtpGateway",
    "workmail:WipeMobileDevice",
    "workmailmessageflow:GetRawMessageContent",
    "workspaces:AssociateIpGroups",
    "workspaces:AuthorizeIpRules",
    "workspaces:CreateIpGroup",
    "workspaces:CreateTags",
    "workspaces:CreateWorkspaces",
    "workspaces:DeleteIpGroup",
    "workspaces:DeleteTags",
    "workspaces:DeleteWorkspaceImage",
    "workspaces:DescribeAccount",
    "workspaces:DescribeAccountModifications",
    "workspaces:DescribeClientProperties",
    "workspaces:DescribeIpGroups",
    "workspaces:DescribeTags",
    "workspaces:DescribeWorkspaceBundles",
    "workspaces:DescribeWorkspaceDirectories",
    "workspaces:DescribeWorkspaceImages",
    "workspaces:DescribeWorkspaces",
    "workspaces:DescribeWorkspacesConnectionStatus",
    "workspaces:DisassociateIpGroups",
    "workspaces:ImportWorkspaceImage",
    "workspaces:ListAvailableManagementCidrRanges",
    "workspaces:ModifyAccount",
    "workspaces:ModifyClientProperties",
    "workspaces:ModifyWorkspaceProperties",
    "workspaces:ModifyWorkspaceState",
    "workspaces:RebootWorkspaces",
    "workspaces:RebuildWorkspaces",
    "workspaces:RevokeIpRules",
    "workspaces:StartWorkspaces",
    "workspaces:StopWorkspaces",
    "workspaces:TerminateWorkspaces",
    "workspaces:UpdateRulesOfIpGroup",
    "xray:BatchGetTraces",
    "xray:CreateGroup",
    "xray:CreateSamplingRule",
    "xray:DeleteGroup",
    "xray:DeleteSamplingRule",
    "xray:GetEncryptionConfig",
    "xray:GetGroup",
    "xray:GetGroups",
    "xray:GetInsight",
    "xray:GetInsightEvents",
    "xray:GetInsightImpactGraph",
    "xray:GetInsightSummaries",
    "xray:GetSamplingRules",
    "xray:GetSamplingStatisticSummaries",
    "xray:GetSamplingTargets",
    "xray:GetServiceGraph",
    "xray:GetTimeSeriesServiceStatistics",
    "xray:GetTraceGraph",
    "xray:GetTraceSummaries",
    "xray:ListTagsForResource",
    "xray:PutEncryptionConfig",
    "xray:PutTelemetryRecords",
    "xray:PutTraceSegments",
    "xray:TagResource",
    "xray:UntagResource",
    "xray:UpdateGroup",
    "xray:UpdateSamplingRule",
]
