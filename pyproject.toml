[project]
name = "pycfmodel"
version = "1.1.1"
readme = "README.md"
description="A python model for Cloud Formation scripts"
requires-python=">=3.9.0"
dependencies = [
    "pydantic~=2.7"
]

[project.urls]
Homepage = "https://github.com/Skyscanner/pycfmodel"

[[project.authors]]
name = "Skyscanner Security"
email = "security@skyscanner.net"

[build-system]
requires = [
    "setuptools", "wheel"
]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages.find]
where = ["pycfmodel"]
exclude = ["tests", "docs"]

[project.optional-dependencies]
dev = [
    "black>=22.1.0",
    "httpx>=0.14.2",
    "isort>=5.4.2",
    "pip-tools>=2.0.2",
    "pytest>=6.0.1",
    "pytest-cov>=2.10.1",
    "pytest-repeat==0.9.3",
    "ruff"
]
docs = [
    "AutoMacDoc==0.3",
    "livereload==2.7.1",
    "mkdocs-material==9.6.11",
    "mkdocs==1.6.0",
    "mkdocstrings==0.10.0"
]

[tool.black]
line-length = 120
target_version = ['py39']

[tool.isort]
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
line_length = 120

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]

# Same as Black.
line-length = 120
indent-width = 4

# Assume Python 3.9
target-version = "py39"

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
select = ["E4", "E7", "E9", "F"]
ignore = []

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

[tool.pytest.ini_options]
markers = [
    "actions: marks tests that checks the full list of IAM actions (deselect with '-m \"not actions\"')",
]
